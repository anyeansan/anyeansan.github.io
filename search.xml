<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux 综合架构</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h1 id="一-中小规模网站综合架构组成"><a href="#一-中小规模网站综合架构组成" class="headerlink" title="一 中小规模网站综合架构组成"></a>一 中小规模网站综合架构组成</h1><h2 id="1-1-前端"><a href="#1-1-前端" class="headerlink" title="1.1 前端"></a>1.1 前端</h2><ol>
<li>防火墙<ul>
<li>访问策略控制</li>
</ul>
</li>
<li>负载均衡服务器<ul>
<li>对访问请求进行调度处理</li>
</ul>
</li>
<li>web服务器<ul>
<li>处理用户请求</li>
</ul>
</li>
</ol>
<h2 id="1-2-后端"><a href="#1-2-后端" class="headerlink" title="1.2 后端"></a>1.2 后端</h2><ol>
<li>数据库服务器<ul>
<li>存储字符数据，如订单…</li>
</ul>
</li>
<li>存储服务器<ul>
<li>存储图片 音频 视频 附件都数据</li>
</ul>
</li>
<li>备份服务器<ul>
<li>存储网站所有服务器重要数据</li>
</ul>
</li>
<li>缓存服务器<ul>
<li>将常用数据存储到内存中，减轻服务器压力，提升用户体验</li>
</ul>
</li>
</ol>
<h2 id="1-3-扩展"><a href="#1-3-扩展" class="headerlink" title="1.3 扩展"></a>1.3 扩展</h2><ol>
<li>批量管理服务器<ul>
<li>批量管理多台服务器主机</li>
</ul>
</li>
<li>VPN服务器<ul>
<li>内部员工访问架构 <code>PPTP vpn</code></li>
</ul>
</li>
<li>审计服务器（跳板机）<ul>
<li>内部员工操作管理架构 <code>jumpserver</code></li>
</ul>
</li>
<li>监控服务器<ul>
<li>综合架构服务器的监控 <code>zabbix</code></li>
</ul>
</li>
<li>网站架构单点问题（高可用服务）<ol>
<li>负载均衡服务器 <code>keepalived</code></li>
<li>数据库 <code>mha</code></li>
<li>存储服务器 <code>分布式存储</code></li>
<li>备份服务 <code>rsync 云存储</code></li>
<li>缓存服务 <code>集群/哨兵模式</code></li>
</ol>
</li>
</ol>
<h1 id="二-备份"><a href="#二-备份" class="headerlink" title="二 备份"></a>二 备份</h1><h2 id="2-1-备份策略"><a href="#2-1-备份策略" class="headerlink" title="2.1 备份策略"></a>2.1 备份策略</h2><ol>
<li>全量备份<ul>
<li>完整备份所有数据</li>
</ul>
</li>
<li>增量备份<ul>
<li>做一次完全备份，以后每次只备份新增的数据</li>
<li>例<ul>
<li>第一天完全备份</li>
<li>第二天备份第二天新增数据</li>
<li>第三天备份第三天新增数据</li>
<li>第四天备份第四天新增数据</li>
</ul>
</li>
</ul>
</li>
<li>差异备份<ul>
<li>做一次完全备份，以后每次只备份和第一次完全备份不同的数据</li>
<li>例<ul>
<li>第一天完全备份</li>
<li>第二天备份第二天新增数据</li>
<li>第三天备份第二天和第三天新增数据（和第一次比较）</li>
<li>第四天备份第二天第三天和第四天新增数据（和第一次比较）</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="2-2-备份命令"><a href="#2-2-备份命令" class="headerlink" title="2.2 备份命令"></a>2.2 备份命令</h2><ol>
<li>本地备份<ul>
<li><code>cp</code></li>
</ul>
</li>
<li>远程备份<ul>
<li><code>scp -rp</code><ul>
<li><code>-r</code><ul>
<li>递归</li>
</ul>
</li>
<li><code>-p</code><ul>
<li>保持文件属性</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="2-3-rsync"><a href="#2-3-rsync" class="headerlink" title="2.3 rsync"></a>2.3 rsync</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>Rsync是一款开源的、快速的、多功能的、可实现全量及增量的本地或远程数据同步备份的优秀工具</li>
<li>安装 <code>rsync</code> 软件包</li>
</ol>
<h3 id="2-本地备份"><a href="#2-本地备份" class="headerlink" title="2 本地备份"></a>2 本地备份</h3><ul>
<li><code>rsync [OPTION] SRC DEST</code><ul>
<li>等价于 <code>cp</code> 命令</li>
</ul>
</li>
<li><code>rsync FILE</code><ul>
<li>等价于 <code>ls</code> 命令</li>
</ul>
</li>
</ul>
<h3 id="3-远程备份"><a href="#3-远程备份" class="headerlink" title="3 远程备份"></a>3 远程备份</h3><h4 id="1-Push"><a href="#1-Push" class="headerlink" title="1 Push"></a>1 Push</h4><ul>
<li><code>rsync [OPTION] SRC [USER@]HOST:DEST</code><ul>
<li>等价于 <code>scp</code> 命令</li>
<li><code>OPTION</code><ul>
<li><code>-a</code><ul>
<li>命令的归档参数，等价于 <code>-rtopgDl</code></li>
</ul>
</li>
<li><code>-v</code><ul>
<li>显示详细的传输信息</li>
</ul>
</li>
<li><code>-z</code><ul>
<li>传输时进行压缩以提高效率</li>
</ul>
</li>
<li><code>-r</code><ul>
<li>递归</li>
</ul>
</li>
<li><code>-t</code><ul>
<li>保持文件最后修改时间不变</li>
</ul>
</li>
<li><code>-o</code><ul>
<li>保持文件属主信息不变</li>
</ul>
</li>
<li><code>-p</code><ul>
<li>保持文件权限信息不变</li>
</ul>
</li>
<li><code>-g</code><ul>
<li>保持文件属组信息不变</li>
</ul>
</li>
<li><code>-D</code><ul>
<li>保持设备文件信息不变</li>
</ul>
</li>
<li><code>-P</code><ul>
<li>显示数据传输的进度信息</li>
</ul>
</li>
<li><code>-l</code><ul>
<li>保留软连接信息</li>
</ul>
</li>
<li><code>-L</code><ul>
<li>保留软连接指向目标文件的数据</li>
</ul>
</li>
<li><code>--exclude=PATTERN</code><ul>
<li>排除指定数据不被传输</li>
</ul>
</li>
<li><code>--exclude-from=file</code><ul>
<li>排除指定数据不被传输(批量排除)</li>
</ul>
</li>
<li><code>--bwlimit=RATE</code><ul>
<li>显示传输的速率</li>
</ul>
</li>
<li><code>--delete</code><ul>
<li>让目标和源数据保持一致，即会删除目标中源没有的数据</li>
</ul>
</li>
</ul>
</li>
<li><code>USER@</code><ul>
<li>以什么用户身份推送数据（默认以当前用户）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="2-Pull"><a href="#2-Pull" class="headerlink" title="2 Pull"></a>2 Pull</h4><ul>
<li><code>rsync [OPTION] [USER@]HOST:SRC [DEST]</code><ul>
<li><code>USER@</code><ul>
<li>以什么用户身份拉取数据（默认以当前用户）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="4-守护进程方式（一直在后台持续的运行）"><a href="#4-守护进程方式（一直在后台持续的运行）" class="headerlink" title="4 守护进程方式（一直在后台持续的运行）"></a>4 守护进程方式（一直在后台持续的运行）</h3><h4 id="1-rsync-守护进程部署流程"><a href="#1-rsync-守护进程部署流程" class="headerlink" title="1 rsync 守护进程部署流程"></a>1 rsync 守护进程部署流程</h4><ol>
<li>安装 <ul>
<li><code>rpm -qa rsync</code></li>
<li><code>yum install -y rsync</code> </li>
</ul>
</li>
<li>配置文件 <code>/etc/rsyncd.conf</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uid = nobody # 管理备份目录的用户</span><br><span class="line">gid = nobody # 管理备份目录的用户组</span><br><span class="line">port = 873 # rsync # 备份服务的端口号</span><br><span class="line">fake super = yes # 将rsync服务虚拟用户伪装成为一个超级管理员用户</span><br><span class="line">use chroot = yes # 安全相关</span><br><span class="line">max connections = 4 # 最大链接数</span><br><span class="line">timeout = 900 # 超时时间</span><br><span class="line">pid file = /var/run/rsyncd.pid # 记录进程号的文件，服务运行时才有</span><br><span class="line">lock file = /var/run/rsync.lock # 锁文件</span><br><span class="line">log file = /var/log/rsyncd.log # rsync 服务日志文件</span><br><span class="line">ignore errors # 忽略传输过程中的简单错误</span><br><span class="line">read only =false # 备份目录可读写</span><br><span class="line">list = false # 客户端是否可以查看服务端的模块信息</span><br><span class="line">hosts allow = # 白名单</span><br><span class="line">hosts deny =  # 黑名单</span><br><span class="line">auth users =	 # 指定认证用户</span><br><span class="line">secrests file = /etc/rsync.password # 指定认证用户密码文件 `用户名称:密码信息`</span><br><span class="line">[backup] # 模块信息</span><br><span class="line">	comment = # 注释信息  </span><br><span class="line">	path =  # 指定备份目录</span><br></pre></td></tr></table></figure></li>
<li>创建rsync服务的虚拟用户</li>
<li>创建rsync服务密码认证文件（权限 600）</li>
<li>创建备份目录并修改属主属组信息</li>
<li>启动服务 <code>systemctl start rsyncd</code></li>
</ol>
<h4 id="2-客户端免密码配置"><a href="#2-客户端免密码配置" class="headerlink" title="2 客户端免密码配置"></a>2 客户端免密码配置</h4><ol>
<li>创建一个密码文件（权限 600），存储密码</li>
<li>执行命令时，在命令后添加 <code>--password-file =密码文件路径</code></li>
</ol>
<h4 id="3-Push"><a href="#3-Push" class="headerlink" title="3 Push"></a>3 Push</h4><ul>
<li><code>rsync [OPTION] SRC [USER@]HOST::DEST</code><ul>
<li><code>OPTION</code><ul>
<li>常用 <code>-avz</code></li>
</ul>
</li>
<li><code>USER@</code><ul>
<li>指定认证用户信息</li>
</ul>
</li>
<li><code>DEST</code><ul>
<li>指定备份服务器的模块</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="4-Pull"><a href="#4-Pull" class="headerlink" title="4 Pull"></a>4 Pull</h4><ul>
<li><code>rsync [OPTION] [USER@]HOST::SRC [DEST]</code></li>
</ul>
<h3 id="5-rsync-原理"><a href="#5-rsync-原理" class="headerlink" title="5 rsync 原理"></a>5 rsync 原理</h3><ol>
<li>客户端当前登录用户通过命令向服务端发送推送请求</li>
<li>服务端判断客户端命令中认证用户是否存在配置 <code>/etc/rsyncd.conf</code> 中</li>
<li>服务端判断客户端认证用户密码是否正确 <code>/etc/rsync.password</code></li>
<li>开始传输后，无论客户端发送请求的是root还是普通用户，到服务端都是通过配置的虚拟管理用户来备份。也就是说，传输的文件属主和属组在服务端会改为虚拟管理用户。<ol>
<li>假如文件在客户端属主和属组是 root，服务端虚拟管理用户是 xiaoqiang，即在传输文件时需要把文件的属主和属组改为xiaoqiang，权限不足。</li>
<li><code>fake super</code> 配置会将虚拟管理用户伪装成root</li>
</ol>
</li>
</ol>
<h1 id="三-存储"><a href="#三-存储" class="headerlink" title="三 存储"></a>三 存储</h1><h2 id="3-1-存储服务"><a href="#3-1-存储服务" class="headerlink" title="3.1 存储服务"></a>3.1 存储服务</h2><ol>
<li>FTP（File Transfer Protocol）<ul>
<li>FTP 服务器</li>
<li>FTP 客户端</li>
</ul>
</li>
<li>samba<ul>
<li>windows–linux之间数据传输，Linux部署samba</li>
</ul>
</li>
<li>NFS（Network File System）<ul>
<li>linux–linux之间数据传输</li>
</ul>
</li>
<li>门户网站-分布式存储<ul>
<li>FastDFS</li>
<li>GlusterFS</li>
</ul>
</li>
</ol>
<h2 id="3-2-NFS"><a href="#3-2-NFS" class="headerlink" title="3.2 NFS"></a>3.2 NFS</h2><h3 id="1-概述-1"><a href="#1-概述-1" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>网络文件共享系统，主要功能是通过网络（一般是局域网）让不同的主机系统之间可以共享文件</li>
</ol>
<h3 id="2-RPC（Remote-Procedure-Call）"><a href="#2-RPC（Remote-Procedure-Call）" class="headerlink" title="2 RPC（Remote Procedure Call）"></a>2 RPC（Remote Procedure Call）</h3><h1 id="四-批量管理"><a href="#四-批量管理" class="headerlink" title="四 批量管理"></a>四 批量管理</h1><h2 id="4-1-ansible"><a href="#4-1-ansible" class="headerlink" title="4.1 ansible"></a>4.1 ansible</h2><h1 id="五-WEB服务"><a href="#五-WEB服务" class="headerlink" title="五 WEB服务"></a>五 WEB服务</h1>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 定时任务</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="一-定时任务"><a href="#一-定时任务" class="headerlink" title="一 定时任务"></a>一 定时任务</h1><h2 id="1-1-实现定时任务的软件"><a href="#1-1-实现定时任务的软件" class="headerlink" title="1.1 实现定时任务的软件"></a>1.1 实现定时任务的软件</h2><ol>
<li><code>cronie</code><ul>
<li>周期性定时任务</li>
</ul>
</li>
<li><code>atd</code><ul>
<li>定时任务只执行一次，一次性定时服务</li>
</ul>
</li>
<li><code>anacron</code><ul>
<li>非7*24小时运行的服务器，用在个人电脑上</li>
</ul>
</li>
</ol>
<h1 id="二-atd"><a href="#二-atd" class="headerlink" title="二 atd"></a>二 atd</h1><ul>
<li><code>at 时间</code><ul>
<li>创建一次性定时任务</li>
</ul>
</li>
<li><code>at -l</code><ul>
<li>查看一次性定时任务</li>
</ul>
</li>
<li><code>atrm 任务序号</code><ul>
<li>删除一次性定时任务</li>
</ul>
</li>
</ul>
<h1 id="三-crond"><a href="#三-crond" class="headerlink" title="三 crond"></a>三 crond</h1><h2 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h2><ol>
<li>Linux 系统定时任务由 crond 这个系统服务来控制，Linux 系统上原本就有非常多的计划性工作，所以 crond 服务是默认启动的</li>
<li>Linux 系统也提供了使用者控制计划任务的命令 <code>crontab</code> 命令</li>
</ol>
<h2 id="3-2-系统定时任务"><a href="#3-2-系统定时任务" class="headerlink" title="3.2 系统定时任务"></a>3.2 系统定时任务</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/etc/cron.hourly # 每小时</span><br><span class="line">/etc/cron.daily # 每天 00:00-23:59</span><br><span class="line">/etc/cron.weekly # 每周 7天</span><br><span class="line">/etc/cron.monthly # 每月</span><br></pre></td></tr></table></figure>
<ol>
<li>放在以上4个目录中的脚本会在相应周期自动执行。</li>
<li><code>/etc/crontab</code><ul>
<li>系统定时任务的配置文件</li>
<li>只有root可以编辑</li>
</ul>
</li>
</ol>
<h2 id="3-3-用户定时任务（cronie）"><a href="#3-3-用户定时任务（cronie）" class="headerlink" title="3.3 用户定时任务（cronie）"></a>3.3 用户定时任务（cronie）</h2><h3 id="1-相关文件"><a href="#1-相关文件" class="headerlink" title="1 相关文件"></a>1 相关文件</h3><ol>
<li><code>/var/spool/cron/用户名</code><ul>
<li>用户定时任务配置文件</li>
</ul>
</li>
<li><code>/var/log/cron</code><ul>
<li>用户定时任务服务运行记录文件</li>
</ul>
</li>
<li><code>/etc/cron.allow</code><ul>
<li>当系统中有此文件时，只有写入此文件的用户可以使用 <code>crontab</code> 命令，优先级高于 <code>/etc/cron.deny</code></li>
</ul>
</li>
<li><code>/etc/cron.deny</code><ul>
<li>此文件中所列用户不允许使用 <code>crontab</code> 命令</li>
</ul>
</li>
</ol>
<h3 id="2-配置-crontab"><a href="#2-配置-crontab" class="headerlink" title="2 配置 crontab"></a>2 配置 crontab</h3><ul>
<li><code>crontab [-u USER] [OPTION] [FILE]</code><ul>
<li><code>USER</code><ul>
<li>如果省略则表示针对当前用户</li>
</ul>
</li>
<li><code>OPTION</code><ul>
<li><code>-l</code><ul>
<li>查看用户定时任务列表</li>
<li>等价于 <code>cat /var/spool/cron/用户名</code></li>
</ul>
</li>
<li><code>-e</code><ul>
<li>编辑用户定时任务</li>
<li>等价于 <code>vim /var/spool/cron/用户名</code></li>
</ul>
</li>
<li><code>-r</code><ul>
<li>删除用户定时任务</li>
<li>等价于 <code>rm -f /var/spool/cron/用户名</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="3-定时任务语法"><a href="#3-定时任务语法" class="headerlink" title="3 定时任务语法"></a>3 定时任务语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">分 时 日 月 周 任务</span><br><span class="line">分：0-59</span><br><span class="line">时：0-23</span><br><span class="line">日：1-31</span><br><span class="line">月：1-12</span><br><span class="line">周：0-6</span><br></pre></td></tr></table></figure>
<ol>
<li><code>*</code><ul>
<li>表示每（分/时/天/月/周）</li>
</ul>
</li>
<li><code>*/N</code><ul>
<li>表示每隔 N（分/时/天/月/周）</li>
</ul>
</li>
<li><code>M/N</code><ul>
<li>表示从 M 开始每隔 N（分/时/天/月/周）</li>
</ul>
</li>
<li><code>M-N</code><ul>
<li>表示 M 到 N</li>
<li>如 <code>01-05 * * * *</code> 表示每小时的01分到05分（01 02 03 04 05）</li>
</ul>
</li>
<li><code>M,N</code><ul>
<li>表示 M 和 N</li>
<li>如 <code>01,05 * * * *</code> 表示每小时的01分和05分（01 05）</li>
</ul>
</li>
<li><code>N</code><ul>
<li>表示具体时间</li>
<li>如 <code>10 02 * * *</code> 表示每天的02时10分</li>
</ul>
</li>
</ol>
<h3 id="4-定时任务规范"><a href="#4-定时任务规范" class="headerlink" title="4 定时任务规范"></a>4 定时任务规范</h3><ol>
<li>编写定时任务要有注释说明</li>
<li>编写定时任务路径信息尽量使用绝对路径</li>
<li>编写定时任务要使用绝对路径命令<ul>
<li>定时任务识别的 PATH 信息只有<code>/usr/bin</code> 和 <code>/bin</code></li>
</ul>
</li>
<li>编写定时任务尽量不要产生屏幕信息</li>
<li>定时任务执行时如果产生标准输出/标准错误输出（即输出到屏幕的信息），会以邮件的方式通知用户<ul>
<li>问题<ul>
<li>可能会导致邮件文件过大，占用磁盘空间</li>
</ul>
</li>
<li>解决方式<ol>
<li>关闭邮件服务 <code>postfix</code>，虽然可以阻止邮件发送，但会类似其它邮箱的草稿，不断在 <code>/var/spool/postfix/maildrop/</code> 产生小文件占用磁盘空间 </li>
<li>标准输出/标准错误输出都不输出到屏幕，而是重定向到黑洞文件 <code>/dev/null</code> 中（推荐）</li>
</ol>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 网络</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<h1 id="一-虚拟机网络连接"><a href="#一-虚拟机网络连接" class="headerlink" title="一 虚拟机网络连接"></a>一 虚拟机网络连接</h1><h2 id="1-1-Bridged（桥接模式）"><a href="#1-1-Bridged（桥接模式）" class="headerlink" title="1.1 Bridged（桥接模式）"></a>1.1 Bridged（桥接模式）</h2><ol>
<li>虚拟机相当于局域网内一台独立的主机，和宿主主机是对等的，同处于一个局域网</li>
<li>虚拟主机和宿主机网络地址是一致的</li>
<li>网卡：<code>VMnet0</code></li>
<li>优点<ul>
<li>局域网内其它物理主机可以直接和虚拟主机通信</li>
</ul>
</li>
<li>缺点<ul>
<li>占用局域网IP地址，同一个网段主机ip地址有限，可能会与其它物理主机ip冲突</li>
</ul>
</li>
</ol>
<h2 id="1-2-NAT（网络地址转换模式）"><a href="#1-2-NAT（网络地址转换模式）" class="headerlink" title="1.2 NAT（网络地址转换模式）"></a>1.2 NAT（网络地址转换模式）</h2><ol>
<li>虚拟主机 → 虚拟交换机 → 虚拟路由 → 宿主机</li>
<li>虚拟主机通过宿主机访问外网，宿主机相当于一个路由器，会将虚拟主机IP与宿主机IP做一个映射，访问外网使用的都是宿主机的IP</li>
<li><ol start="2">
<li>虚拟主机和宿主机网络地址可以不一致</li>
</ol>
</li>
<li>网卡：<code>VMnet8</code><ul>
<li>虚拟机的子网掩码、网关、DNS要与<code>Vmnet8</code>的网卡保持一致。</li>
</ul>
</li>
<li>优点<ul>
<li>虚拟主机不占用局域网IP地址</li>
</ul>
</li>
<li>缺点<ul>
<li>局域网内其它物理主机不能直接和虚拟主机通信</li>
</ul>
</li>
</ol>
<h2 id="1-3-Host-only（仅主机模式）"><a href="#1-3-Host-only（仅主机模式）" class="headerlink" title="1.3 Host-only（仅主机模式）"></a>1.3 Host-only（仅主机模式）</h2><ol>
<li>虚拟主机只能和宿主机通信，不能访问外网</li>
<li>网卡：<code>VMnet1</code></li>
</ol>
<h1 id="二-网络配置"><a href="#二-网络配置" class="headerlink" title="二 网络配置"></a>二 网络配置</h1><h2 id="2-1-图形界面"><a href="#2-1-图形界面" class="headerlink" title="2.1 图形界面"></a>2.1 图形界面</h2><ul>
<li><code>nmtui</code></li>
</ul>
<h2 id="2-2-网卡配置文件"><a href="#2-2-网卡配置文件" class="headerlink" title="2.2 网卡配置文件"></a>2.2 网卡配置文件</h2><ul>
<li><code>/etc/sysconfig/network-scripts/ifcfg-ens32</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet # 网络类型 目前基本为以太网</span><br><span class="line">BOOTPROTO=none # 网络启动协议，如何让主机获得ip</span><br><span class="line">DEFROUTE=yes # 使用默认路由</span><br><span class="line">NAME=ens33 # 第一块网卡逻辑名称</span><br><span class="line">DEVICE=ens33 # 第一块网卡设备名称（物理名称）</span><br><span class="line">ONBOOT=yes # 网卡是否激活</span><br><span class="line">IPADDR=192.168.13.24 # 静态ip </span><br><span class="line">PREFIX=24 # 子网掩码</span><br><span class="line">GATEWAY=192.168.13.2 # 网关</span><br><span class="line">DNS1=223.5.5.5 # DNS</span><br></pre></td></tr></table></figure>
<ul>
<li><code>BOOTPROTO</code><ul>
<li><code>dhcp</code><ul>
<li>动态获取ip</li>
</ul>
</li>
<li><code>none</code>, <code>static</code><ul>
<li>静态ip（手动配置）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="2-3-其它配置文件"><a href="#2-3-其它配置文件" class="headerlink" title="2.3 其它配置文件"></a>2.3 其它配置文件</h2><ol>
<li><code>/etc/resolv.conf</code><ol>
<li>系统DNS客户端的配置文件</li>
<li>每次重启网卡此文件DNS都会更新为网卡配置文件所配置的DNS</li>
</ol>
</li>
<li><code>/etc/hosts</code><ol>
<li>系统本地的DNS解析文件</li>
<li>可以手动设置域名和IP绑定信息</li>
<li>首先使用本地设置的域名对应的ip，若没有设置，才使用所配置的DNS来解析域名</li>
</ol>
</li>
<li><code>/etc/hostname</code><ul>
<li>主机名配置文件</li>
</ul>
</li>
</ol>
<h1 id="三-系统路由设置"><a href="#三-系统路由设置" class="headerlink" title="三 系统路由设置"></a>三 系统路由设置</h1><table>
<thead>
<tr>
<th>配置 \ 版本</th>
<th>CentOS 6 <code>net-tools</code></th>
<th>CentOS 7 <code>iproute</code></th>
</tr>
</thead>
<tbody><tr>
<td>静态默认路由</td>
<td><code>route add/del default gw 网关</code></td>
<td><code>ip route add/del default via 网关</code></td>
</tr>
<tr>
<td>静态网段路由</td>
<td><code>route add/del -net 目标网络地址 netmask 子网掩码 gw 网关</code></td>
<td><code>ip route add/del -net 目标网络地址 netmask 子网掩码 via 网关</code></td>
</tr>
<tr>
<td>静态主机路由</td>
<td><code>route add/del -host 目标主机地址 dev 网关</code></td>
<td><code>ip route add/del -host 目标主机地址 via 网关</code></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 软件</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="一-软件包类型"><a href="#一-软件包类型" class="headerlink" title="一 软件包类型"></a>一 软件包类型</h1><p>类型|说明|安装方式<br>-|-<br><code>源码包</code>|源代码二进制包|编译安装<br><code>rpm包</code>|已编译过的二进制包|rpm 安装 / yum 安装</p>
<ol>
<li>rpm 安装<ol>
<li>安装时使用默认位置（大多数）</li>
<li>rpm包之间存在依赖性<ol>
<li>树形依赖</li>
<li>环形依赖</li>
<li>模块依赖<ul>
<li><code>.so</code></li>
<li><code>www.rpmfind.net</code> 模块依赖查询</li>
</ul>
</li>
</ol>
</li>
</ol>
</li>
<li>yum 安装<ul>
<li>自动解决rpm的依赖性</li>
</ul>
</li>
</ol>
<h1 id="二-源码包安装"><a href="#二-源码包安装" class="headerlink" title="二 源码包安装"></a>二 源码包安装</h1><h2 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h2><ol>
<li>可以自定义功能，安装时可以自定义路径</li>
<li>安装配置复杂，耗时</li>
<li>卸载方便（直接删除安装目录）</li>
</ol>
<h2 id="2-2-编译安装过程"><a href="#2-2-编译安装过程" class="headerlink" title="2.2 编译安装过程"></a>2.2 编译安装过程</h2><h3 id="1-编译器（没有则安装）"><a href="#1-编译器（没有则安装）" class="headerlink" title="1 编译器（没有则安装）"></a>1 编译器（没有则安装）</h3><ol>
<li><code>gcc</code><ul>
<li><code>yum -y install gcc gcc-c++ make zlib-devel pcre pcre-devel openssl-devel</code><ul>
<li><code>zlib</code>：压缩库</li>
<li><code>pcre</code>：支持正则表达式，地址重写rewrite</li>
<li><code>openssl</code>：提供https支持</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="2-下载源码包，解压并进入解压后目录"><a href="#2-下载源码包，解压并进入解压后目录" class="headerlink" title="2 下载源码包，解压并进入解压后目录"></a>2 下载源码包，解压并进入解压后目录</h3><h3 id="3-软件配置和检查，生成-Makefile-文件"><a href="#3-软件配置和检查，生成-Makefile-文件" class="headerlink" title="3 软件配置和检查，生成 Makefile 文件"></a>3 软件配置和检查，生成 Makefile 文件</h3><ul>
<li><code>./configure</code><ol>
<li>定义需要的功能选项</li>
<li>检测系统环境是否符合安装要求</li>
<li>把定义好的功能选项和检测环境信息都写入<code>Makefile</code>文件，用于后续的编译</li>
<li>常见参数<ul>
<li><code>--prefix=PATH</code><ul>
<li>指定安装路径</li>
</ul>
</li>
<li><code>--enable-ssl --disable-filter</code><ul>
<li>启用禁用某项功能</li>
</ul>
</li>
<li><code>--with-...</code><ul>
<li>支持模块功能</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="4-按照-Makefile-文件编译"><a href="#4-按照-Makefile-文件编译" class="headerlink" title="4 按照 Makefile 文件编译"></a>4 按照 Makefile 文件编译</h3><ul>
<li><code>make</code><ul>
<li>编译</li>
</ul>
</li>
<li><code>make -j 4</code><ul>
<li>指定4核心CPU编译，提升速度</li>
</ul>
</li>
<li><code>make clean</code><ul>
<li>清除make产生的文件</li>
<li>安装步骤之前，不会向安装位置写入任何文件，所以如果安装前有错误，执行<code>make clean</code>即可</li>
</ul>
</li>
</ul>
<h3 id="5-按照-Makefile-定义的文件路径安装"><a href="#5-按照-Makefile-定义的文件路径安装" class="headerlink" title="5 按照 Makefile 定义的文件路径安装"></a>5 按照 Makefile 定义的文件路径安装</h3><ul>
<li><code>make install</code></li>
</ul>
<h1 id="三-RPM（redhat-package-manager）"><a href="#三-RPM（redhat-package-manager）" class="headerlink" title="三  RPM（redhat package manager）"></a>三  RPM（redhat package manager）</h1><h2 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h2><ol>
<li>红帽软件包管理器</li>
<li>rpm通过将安装规则和源代码打包到一起，来降低软件的安装难度</li>
</ol>
<h2 id="3-2-rpm-操作"><a href="#3-2-rpm-操作" class="headerlink" title="3.2 rpm 操作"></a>3.2 rpm 操作</h2><h3 id="1-查询"><a href="#1-查询" class="headerlink" title="1 查询"></a>1 查询</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>rpm -qa</code></td>
<td>查询所有已安装的软件包</td>
</tr>
<tr>
<td><code>rpm -q 包名</code></td>
<td>查询软件包是否安装</td>
</tr>
<tr>
<td><code>rpm -qi 包名</code></td>
<td>查询已安装软件包的详细信息</td>
</tr>
<tr>
<td><code>rpm -qip 全包名</code></td>
<td>查询未安装软件包的详细信息</td>
</tr>
<tr>
<td><code>rpm -ql 包名</code></td>
<td>查询已安装软件包中的文件列表</td>
</tr>
<tr>
<td><code>rpm -qlp 全包名</code></td>
<td>查询未安装软件包中的文件列表</td>
</tr>
<tr>
<td><code>rpm -qf file</code></td>
<td>查询文件属于哪个安装包</td>
</tr>
<tr>
<td><code>rpm -qR 包名</code></td>
<td>查询软件包的依赖性</td>
</tr>
<tr>
<td><code>rpm -qg group</code></td>
<td>查询组中的软件包列表</td>
</tr>
</tbody></table>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2 安装"></a>2 安装</h3><ul>
<li><code>rpm -ivh 包全名</code><ul>
<li><code>-i</code>, <code>--install</code><ul>
<li>安装</li>
</ul>
</li>
<li><code>-v</code><ul>
<li>显示详细信息</li>
</ul>
</li>
<li><code>-h</code>, <code>--hash</code><ul>
<li>显示进度</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="3-更新"><a href="#3-更新" class="headerlink" title="3 更新"></a>3 更新</h3><ul>
<li><code>rpm -Uvh 包名</code><ul>
<li><code>-U, --upgrade</code><ul>
<li>更新</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="4-卸载"><a href="#4-卸载" class="headerlink" title="4 卸载"></a>4 卸载</h3><ul>
<li><code>rpm -e 包名</code><ul>
<li><code>-e, --erase</code>    <ul>
<li>卸载</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="5-校验"><a href="#5-校验" class="headerlink" title="5 校验"></a>5 校验</h3><ul>
<li><code>rpm -V 包名</code><ul>
<li><code>-V</code><ul>
<li>校验，对已经安装软件进行校验</li>
<li>检查包内容是否被修改，校验安全</li>
</ul>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>校验信息</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>S</code></td>
<td>文件大小是否改变</td>
</tr>
<tr>
<td><code>M</code></td>
<td>文件的类型或文件的权限（rwx）是否被改变</td>
</tr>
<tr>
<td><code>5</code></td>
<td>文件MD5校验和是否改变（可以看成文件内容是否改变）</td>
</tr>
<tr>
<td><code>D</code></td>
<td>设备中的从代码是否改变</td>
</tr>
<tr>
<td><code>L</code></td>
<td>文件路径是否改变</td>
</tr>
<tr>
<td><code>U</code></td>
<td>文件的属主是否改变</td>
</tr>
<tr>
<td><code>G</code></td>
<td>文件的属组是否改变</td>
</tr>
<tr>
<td><code>T</code></td>
<td>文件的修改时间是否改变</td>
</tr>
</tbody></table>
<h1 id="四-Yum（Yellowdog-Updater-Modified）"><a href="#四-Yum（Yellowdog-Updater-Modified）" class="headerlink" title="四 Yum（Yellowdog Updater Modified）"></a>四 Yum（Yellowdog Updater Modified）</h1><h2 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1 概述"></a>4.1 概述</h2><ul>
<li>yum通过将大量的常用rpm软件包放在一起，解决软件包之间的依赖关系，进一步降低软件的安装难度。</li>
</ul>
<h2 id="4-2-yum源"><a href="#4-2-yum源" class="headerlink" title="4.2 yum源"></a>4.2 yum源</h2><h3 id="1-配置基本-yum-源"><a href="#1-配置基本-yum-源" class="headerlink" title="1 配置基本 yum 源"></a>1 配置基本 yum 源</h3><h4 id="1-手撕配置文件"><a href="#1-手撕配置文件" class="headerlink" title="1 手撕配置文件"></a>1 手撕配置文件</h4><ul>
<li><code>/etc/yum.repos.d/CentOS-Base.repo</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[base] # 容器名称，唯一，区分不同yum源</span><br><span class="line">name=  # 描述</span><br><span class="line">#mirrorlist= # 镜像站点，可以注释掉，和baseurl使用哪个都行</span><br><span class="line">#baseurl= # yum源服务器的地址。默认是CentOS官方的yum源服务器</span><br><span class="line">gpgcheck= #  公钥校验rpm包正确性 0不校验 1校验</span><br><span class="line">enabled= # 此yum源是否生效 0不生效 1或省略 生效</span><br><span class="line">gpgkey= # 公钥路径</span><br><span class="line">$releaseserver = `/etc/centos-release`</span><br><span class="line">$basearch = `*86_64`</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="2-从网络下载配置文件（手动下载，wget，curl-…）"><a href="#2-从网络下载配置文件（手动下载，wget，curl-…）" class="headerlink" title="2 从网络下载配置文件（手动下载，wget，curl …）"></a>2 从网络下载配置文件（手动下载，wget，curl …）</h4><ul>
<li><code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></li>
<li><a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener" title="阿里云官方镜像站">Aliyun mirror</a></li>
</ul>
<h3 id="2-配置扩展-yum-源-EPEL"><a href="#2-配置扩展-yum-源-EPEL" class="headerlink" title="2 配置扩展 yum 源 EPEL"></a>2 配置扩展 yum 源 EPEL</h3><ul>
<li>EPEL（Extra Packages for Enterprise Linux）<ul>
<li>是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS等提供高质量软件包的项目。</li>
</ul>
</li>
<li><code>wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</code></li>
</ul>
<h3 id="3-配置本地-yum-源"><a href="#3-配置本地-yum-源" class="headerlink" title="3 配置本地 yum 源"></a>3 配置本地 yum 源</h3><ol>
<li>挂载光盘</li>
<li>备份默认本地 yum 源 <code>/etc/yum.repos.d/CentOS-Media.repo</code></li>
<li>配置新 <code>/etc/yum.repos.d/CentOS-Media.repo</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[CentOS 7]</span><br><span class="line">name=CentOS-server</span><br><span class="line">baseurl=file:///mnt/cdrom</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0  </span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">## 4.3 yum 操作</span><br><span class="line">### 1 软件包</span><br><span class="line">#### 1 查询</span><br><span class="line">命令|说明</span><br><span class="line">-|-</span><br><span class="line">`yum repolist`|查看可用的yum源信息</span><br><span class="line">`yum list [all]`|显示所有软件包</span><br><span class="line">`yum list available`|显示所有可安装的软件包</span><br><span class="line">`yum list installed`|显示所有已安装的软件包</span><br><span class="line">`yum list updates`|显示所有可更新的软件包</span><br><span class="line">`yum info 软件包名`|查看软件包信息</span><br><span class="line">`yum search keyword`|根据关键字搜索软件包</span><br><span class="line">`yum provides file`|查询文件的来源，属于哪个软件包</span><br><span class="line"></span><br><span class="line">#### 2 安装</span><br><span class="line">命令|说明</span><br><span class="line">-|-</span><br><span class="line">`yum install 软件包名`|安装指定软件包</span><br><span class="line"></span><br><span class="line">#### 3 更新</span><br><span class="line">命令|说明</span><br><span class="line">-|-</span><br><span class="line">`yum update`|更新所有可更新的软件包以及系统内核，保留旧包</span><br><span class="line">`yum upgrade`|更新所有可更新的软件包以及系统内核，删除旧包</span><br><span class="line">`yum update 软件包名`|更新指定软件包以及系统内核，保留旧包</span><br><span class="line">`yum upgrade 软件包名`|更新指定软件包以及系统内核，删除旧包</span><br><span class="line"></span><br><span class="line">#### 4 删除</span><br><span class="line">命令|说明</span><br><span class="line">-|-</span><br><span class="line">`yum remove 软件包名`|删除指定软件包</span><br><span class="line">`yum erase 软件包名`|删除指定软件包</span><br><span class="line"></span><br><span class="line">#### 5 缓存</span><br><span class="line">命令|说明</span><br><span class="line">-|-</span><br><span class="line">`yum makecache`|生成仓库软件索引表（类似字典索引）</span><br><span class="line">`yum clean all`|清除缓存</span><br><span class="line"></span><br><span class="line">#### 6 gpg key</span><br><span class="line">* 安装时如果 yum 源配置 `gpgkey=1` 会进行验证，缺少key会报错</span><br><span class="line">	1. 改为 `gpgkey=0`</span><br><span class="line">	2. `rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7`</span><br><span class="line">		* 执行此命令导入 gpg key</span><br><span class="line"></span><br><span class="line">### 2 软件包组（软件包操作命令加上 group 即可）</span><br><span class="line">1. `yum grouplist [all]`</span><br><span class="line">	* 显示所有软件包组</span><br><span class="line">2. `yum groupinstall 软件包组`</span><br><span class="line">3. `yum groupupdate 软件包组`</span><br><span class="line">4. `yum groupremove 软件包组`</span><br><span class="line"></span><br><span class="line"># 五 实例</span><br><span class="line">## 5.1 恶搞软件</span><br><span class="line">1. `cowsay`</span><br><span class="line">	* 动物说</span><br><span class="line">2. `sl`</span><br><span class="line">	* 火车</span><br><span class="line"></span><br><span class="line">## 5.2 JDK</span><br><span class="line">### 1 查询是否有安装</span><br><span class="line">1. `rpm -qa | grep java`</span><br><span class="line">	* 查看是否安装有jdk</span><br><span class="line">	* 如果是源码(.tar.gz)安装 查不出来</span><br><span class="line">2. `rpm -e 包名` 或 `yum remove 包名`</span><br><span class="line">	* 卸载</span><br><span class="line"></span><br><span class="line">### 2 下载</span><br><span class="line">* [JDK download](https://www.oracle.com/cn/java/technologies/javase-downloads.html &quot;JDK 官网&quot;)</span><br><span class="line">	*  下载 `.tar.gz` 压缩包（Linux Compressed Archive）</span><br><span class="line"></span><br><span class="line">### 3 安装</span><br><span class="line">1. 将 `.tar.gz` 压缩包上传至 Linux</span><br><span class="line">2. 解压到指定目录</span><br><span class="line"></span><br><span class="line">### 4 配置环境变量</span><br><span class="line">1. `/etc/profile`</span><br></pre></td></tr></table></figure>
export JAVA_HOME=解压路径<br>export PATH=$JAVA_HOME/bin:$PATH <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2. `source /etc/profile`</span><br><span class="line">3. `java -version`</span><br><span class="line"></span><br><span class="line">## 5.3 Tomcat</span><br><span class="line">### 1 概述</span><br><span class="line">* tomcat 依赖 java 环境</span><br><span class="line"></span><br><span class="line">### 2 下载</span><br><span class="line">* [Tomcat download](https://tomcat.apache.org/ &quot;tomcat 官网&quot;)</span><br><span class="line">	* 下载 `.tar.gz`</span><br><span class="line"></span><br><span class="line">### 3 安装</span><br><span class="line">1. 将 `.tar.gz` 压缩包上传至 Linux</span><br><span class="line">2. 解压到指定目录</span><br><span class="line"></span><br><span class="line">### 4 如果未关闭防火墙，则需要开放 8080 端口</span><br></pre></td></tr></table></figure>
<h1 id="1-添加端口并设置永久生效"><a href="#1-添加端口并设置永久生效" class="headerlink" title="1 添加端口并设置永久生效"></a>1 添加端口并设置永久生效</h1>firewall-cmd –zone=public –add-port=8080/tcp –permanent<h1 id="2-重载"><a href="#2-重载" class="headerlink" title="2 重载"></a>2 重载</h1>firewall-cmd –reload<h1 id="3-查看是否开放"><a href="#3-查看是否开放" class="headerlink" title="3 查看是否开放"></a>3 查看是否开放</h1>firewall-cmd –zone=public –query-port=8080/tcp<pre><code></code></pre></li>
</ol>
<h3 id="5-启动-关闭"><a href="#5-启动-关闭" class="headerlink" title="5 启动 / 关闭"></a>5 启动 / 关闭</h3><ol>
<li><code>basedir/bin/version.sh</code><ul>
<li>查看 tomcat 版本信息</li>
</ul>
</li>
<li><code>basedir/bin/startup.sh</code><ul>
<li>启动 tomcat</li>
</ul>
</li>
<li><code>basedir/bin/shutdown.sh</code><ul>
<li>关闭 tomcat</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 文件信息</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E6%96%87%E4%BB%B6%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<h1 id="一-文件信息"><a href="#一-文件信息" class="headerlink" title="一 文件信息"></a>一 文件信息</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">33574978 -rw-------. 1 root root 1.5K Mar 25 15:10 anaconda-ks.cfg</span><br></pre></td></tr></table></figure>
<ol>
<li>文件属性（存储在文件的 inode 中）<ol>
<li>inode 编号</li>
<li>文件类型及权限</li>
<li>硬链接数</li>
<li>属主</li>
<li>属组</li>
<li>文件大小</li>
<li>最后修改时间 <code>mtime</code></li>
</ol>
</li>
<li>文件名（存储在父目录的 block 中）</li>
</ol>
<h1 id="二-inode-amp-block"><a href="#二-inode-amp-block" class="headerlink" title="二 inode &amp; block"></a>二 inode &amp; block</h1><h2 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h2><ol>
<li>存储设备格式化创建文件系统后，大致分为了两部分 <code>inode</code> 和 <code>block</code></li>
<li><code>inode</code> 用来存储文件属性信息（元数据），不包括文件名</li>
<li><code>block</code> 用来存储数据，文件名存储在父目录的 <code>block</code> 中</li>
<li>一个文件要占用一个 <code>inode</code> 和至少一个 <code>block</code></li>
</ol>
<h2 id="2-2-inode"><a href="#2-2-inode" class="headerlink" title="2.2 inode"></a>2.2 inode</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li><code>inode index</code> 指向一个文件的 <code>inode</code>，是文件在文件系统中的唯一标识</li>
<li>文件名仅是为了方便人们的记忆和使用</li>
<li>修改文件会改变 <code>inode</code>，所以修改完服务器配置文件后，都需要重新加载一下配置文件</li>
</ol>
<h3 id="2-查看-inode-信息"><a href="#2-查看-inode-信息" class="headerlink" title="2 查看 inode 信息"></a>2 查看 inode 信息</h3><h4 id="1-stat-file"><a href="#1-stat-file" class="headerlink" title="1 stat file"></a>1 <code>stat file</code></h4><table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>Inode</code></td>
<td>inode 编号</td>
</tr>
<tr>
<td><code>Size</code></td>
<td>文件大小</td>
</tr>
<tr>
<td><code>Uid</code></td>
<td>文件属主</td>
</tr>
<tr>
<td><code>Gid</code></td>
<td>文件属组</td>
</tr>
<tr>
<td><code>Access</code></td>
<td>文件类型及权限</td>
</tr>
<tr>
<td><code>Links</code></td>
<td>链接数（硬链接）</td>
</tr>
<tr>
<td><code>Blocks</code></td>
<td>数据块 <code>block</code> 数量</td>
</tr>
<tr>
<td><code>IO Block</code></td>
<td>每个数据块 <code>block</code> 大小</td>
</tr>
<tr>
<td><code>Device</code></td>
<td>存储该文件的设备号码</td>
</tr>
<tr>
<td><code>Access time</code></td>
<td>atime，最后访问时间</td>
</tr>
<tr>
<td><code>Modify time</code></td>
<td>mtime，文件内容最后修改时间</td>
</tr>
<tr>
<td><code>Change time</code></td>
<td>ctime，inode 信息最后变动时间</td>
</tr>
</tbody></table>
<h4 id="2-df-i"><a href="#2-df-i" class="headerlink" title="2 df -i"></a>2 <code>df -i</code></h4><ul>
<li>查看 inode 使用情况</li>
</ul>
<h2 id="2-3-block"><a href="#2-3-block" class="headerlink" title="2.3 block"></a>2.3 block</h2><ol>
<li>文件的 <code>block</code> 存储数据，目录的 <code>block</code> 存储目录下文件的文件名和 <code>inode</code> 的对应关系</li>
<li>一个文件可能占用多个 <code>block</code>，一个 <code>block</code> 的读写就消耗一次 I/O</li>
<li>一个 <code>block</code> 只能存放一个文件，如果 <code>block</code> 没有占满，剩余空间就浪费掉了</li>
<li>一个 <code>block</code> 默认大小为 4 k，可调整<ol>
<li>如果存储文件较大，<code>block</code> 大点好，节省IO消耗</li>
<li>如果存储文件较小，<code>block</code> 小点好，提高磁盘利用率</li>
</ol>
</li>
</ol>
<h1 id="三-文件类型"><a href="#三-文件类型" class="headerlink" title="三 文件类型"></a>三 文件类型</h1><h2 id="3-1-查看文件类型"><a href="#3-1-查看文件类型" class="headerlink" title="3.1 查看文件类型"></a>3.1 查看文件类型</h2><ul>
<li><code>file [OPTION] FILE</code><ul>
<li>查看文件类型及编码</li>
<li><code>OPTION</code><ul>
<li><code>-i</code><ul>
<li>查看文件MIME类型及编码</li>
</ul>
</li>
<li><code>-L</code><ul>
<li>查看软链接文件时，查看的是软链接指向的目标文件的信息</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-2-文件类型分类"><a href="#3-2-文件类型分类" class="headerlink" title="3.2 文件类型分类"></a>3.2 文件类型分类</h2><table>
<thead>
<tr>
<th>符号</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-</code></td>
<td>文件</td>
</tr>
<tr>
<td><code>d</code></td>
<td>目录</td>
</tr>
<tr>
<td><code>l</code></td>
<td>链接文件（软连接）</td>
</tr>
<tr>
<td><code>s</code></td>
<td>socket 文件（网路编程）</td>
</tr>
<tr>
<td><code>b</code></td>
<td>块设备文件，（光驱 磁盘…）如<code>/dev/sda</code></td>
</tr>
<tr>
<td><code>c</code></td>
<td>字符设备文件，如 <code>/dev/tty0</code>，<code>dev/null</code>，<code>dev/zero</code>，<code>dev/urandom</code></td>
</tr>
<tr>
<td><code>p</code></td>
<td>pipe 管道文件</td>
</tr>
</tbody></table>
<h3 id="1"><a href="#1" class="headerlink" title="1 -"></a>1 <code>-</code></h3><ol>
<li><code>ASCII text</code><ul>
<li>纯文本文件，可直接查看和编辑</li>
</ul>
</li>
<li><code>binary</code><ul>
<li>二进制文件（命令文件），不可以编辑</li>
</ul>
</li>
<li><code>data</code><ul>
<li>数据文件（压缩文件）</li>
</ul>
</li>
</ol>
<h3 id="2-c"><a href="#2-c" class="headerlink" title="2 c"></a>2 <code>c</code></h3><ol>
<li><code>/dev/null</code><ul>
<li>“空”设备（黑洞文件）</li>
<li>读<ul>
<li>什么内容也读取不到</li>
</ul>
</li>
<li>写<ul>
<li>写入的内容会永远丢失</li>
</ul>
</li>
</ul>
</li>
<li><code>/dev/zero</code><ul>
<li>“零”设备</li>
<li>读<ul>
<li>读取时提供无限的空字符（<code>NULL， ASCII NUL，0x00</code>）</li>
<li>典型用法是用它来产生一个特定大小的空白文件</li>
</ul>
</li>
<li>写<ul>
<li>写入的内容会永远丢失</li>
</ul>
</li>
</ul>
</li>
<li><code>/dev/urandom</code><ul>
<li>伪随机数生成器</li>
</ul>
</li>
</ol>
<h1 id="四-链接"><a href="#四-链接" class="headerlink" title="四 链接"></a>四 链接</h1><h2 id="4-1-硬链接（Hard-Link）"><a href="#4-1-硬链接（Hard-Link）" class="headerlink" title="4.1 硬链接（Hard Link）"></a>4.1 硬链接（Hard Link）</h2><h3 id="1-概述-1"><a href="#1-概述-1" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>Linux 允许同一个 <code>inode</code> 对应多个文件名，多个文件指向同一个 <code>inode</code> 就是硬链接</li>
<li>不能对目录进行创建，只能对已存在的文件创建硬链接</li>
<li>同一个分区 <code>inode</code> 是唯一的，不能跨文件系统或者跨分区进行硬链接的创建</li>
<li>硬链接与原文件都拥有相同的 <code>inode</code> 和 <code>block</code></li>
<li>删除一个硬链接不会影响原文件，只有文件的硬链接数为 <code>0</code> ，文件才会被真正的删除</li>
<li>每个目录下包含两个隐藏项<ol>
<li><code>.</code><ul>
<li>当前目录的硬链接</li>
</ul>
</li>
<li><code>..</code><ul>
<li>父目录的硬链接</li>
</ul>
</li>
</ol>
</li>
<li>链接数<ol>
<li>文件的硬链接数 = <code>1（文件本身）+ n（硬链接数）</code></li>
<li>目录的硬链接数 = <code>1（目录本身）+ 1（.）+ n（子目录数..）</code></li>
</ol>
</li>
</ol>
<h3 id="2-创建硬链接"><a href="#2-创建硬链接" class="headerlink" title="2 创建硬链接"></a>2 创建硬链接</h3><ul>
<li><code>ln 目标文件 硬链接文件</code></li>
</ul>
<h2 id="4-2-软连接（Symbolic-Link）"><a href="#4-2-软连接（Symbolic-Link）" class="headerlink" title="4.2 软连接（Symbolic Link）"></a>4.2 软连接（Symbolic Link）</h2><h3 id="1-概述-2"><a href="#1-概述-2" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>软连接文件中存储的是另一个文件的指针，类似于快捷方式</li>
<li>软链接有自己 <code>inode</code> 和 <code>block</code></li>
<li>可对目录或文件（包括不存在的）创建软链接</li>
<li>软链接可跨文件系统和分区</li>
<li>删除原文件相关软连接会变成死链接</li>
</ol>
<h3 id="2-创建软连接"><a href="#2-创建软连接" class="headerlink" title="2 创建软连接"></a>2 创建软连接</h3><ul>
<li><code>ln -s 目标文件 软链接文件</code><ul>
<li><code>软连接文件 -&gt; 目标文件</code></li>
</ul>
</li>
</ul>
<h1 id="五-权限"><a href="#五-权限" class="headerlink" title="五 权限"></a>五 权限</h1><h2 id="5-1-基本权限"><a href="#5-1-基本权限" class="headerlink" title="5.1 基本权限"></a>5.1 基本权限</h2><h3 id="1-基本权限说明"><a href="#1-基本权限说明" class="headerlink" title="1 基本权限说明"></a>1 基本权限说明</h3><p>权限|二进制|八进制|文件|目录<br>-|-|-|-<br><code>r</code>|<code>100</code>|<code>4</code>|读取文件内容|查看目录中的内容（<code>ls</code>）<br><code>w</code>|<code>010</code>|<code>2</code>|编辑文件内容|在目录中操作（<code>touch mkdir rm cp mv</code>）<br><code>x</code>|<code>001</code>|<code>1</code>|执行文件|进入目录（<code>cd</code>）</p>
<h3 id="2-文件"><a href="#2-文件" class="headerlink" title="2 文件"></a>2 文件</h3><table>
<thead>
<tr>
<th>权限</th>
<th>属主（root）</th>
<th>属主（普通用户）</th>
<th>其它人（root）</th>
<th>其它人（普通用户）</th>
</tr>
</thead>
<tbody><tr>
<td><code>---</code></td>
<td><code>读 写</code></td>
<td><code>-</code></td>
<td><code>读 写</code></td>
<td><code>-</code></td>
</tr>
<tr>
<td><code>r--</code></td>
<td><code>读 写</code></td>
<td><code>读</code></td>
<td><code>读 写</code></td>
<td><code>读</code></td>
</tr>
<tr>
<td><code>-w-</code></td>
<td><code>读 写</code></td>
<td><code>写</code></td>
<td><code>读 写</code></td>
<td><code>写</code></td>
</tr>
<tr>
<td><code>--x</code></td>
<td><code>读 写 执行</code></td>
<td>-</td>
<td><code>读 写 执行</code></td>
<td>-</td>
</tr>
<tr>
<td><code>r-x</code></td>
<td><code>读 写 执行</code></td>
<td><code>读 执行</code></td>
<td><code>读 写 执行</code></td>
<td><code>读 执行</code></td>
</tr>
<tr>
<td>1. root 对所有文件可读写，执行需要有执行权限</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1. 读写：任意权限</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2. 执行：<code>x</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2. 普通用户读写文件需要有相应权限，执行需要有 读 + 执行权限</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1. 读：<code>r</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2. 写：<code>w</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3. 执行：<code>rx</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3. 通常文件权限需要有 <code>r</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="3-目录"><a href="#3-目录" class="headerlink" title="3 目录"></a>3 目录</h3><table>
<thead>
<tr>
<th>权限</th>
<th>属主（root）</th>
<th>属主（普通用户）</th>
<th>其它人（root）</th>
<th>其它人（普通用户）</th>
</tr>
</thead>
<tbody><tr>
<td><code>---</code></td>
<td><code>读 写 执行</code></td>
<td><code>-</code></td>
<td><code>读 写 执行</code></td>
<td><code>-</code></td>
</tr>
<tr>
<td><code>r--</code></td>
<td><code>读 写 执行</code></td>
<td><code>读（只有文件名，没有文件属性信息）</code></td>
<td><code>读 写 执行</code></td>
<td><code>读（只有文件名，没有文件属性信息）</code></td>
</tr>
<tr>
<td><code>-w-</code></td>
<td><code>读 写 执行</code></td>
<td><code>-</code></td>
<td><code>读 写 执行</code></td>
<td><code>-</code></td>
</tr>
<tr>
<td><code>--x</code></td>
<td><code>读 写 执行</code></td>
<td><code>执行</code></td>
<td><code>读 写 执行</code></td>
<td><code>执行</code></td>
</tr>
<tr>
<td><code>r-x</code></td>
<td><code>读 写 执行</code></td>
<td><code>读 执行</code></td>
<td><code>读 写 执行</code></td>
<td><code>读 执行</code></td>
</tr>
<tr>
<td><code>-wx</code></td>
<td><code>读 写 执行</code></td>
<td><code>写 执行</code></td>
<td><code>读 写 执行</code></td>
<td><code>写 执行</code></td>
</tr>
<tr>
<td>1. root 对所有目录可读、写、执行</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2. 普通用户对目录的读写需要 读写权限 + 执行权限</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1. 读：<code>rx</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2. 写：<code>rx</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3. 执行：<code>x</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3. 通常目录权限需要有 <code>x</code></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="4-umask-amp-默认权限"><a href="#4-umask-amp-默认权限" class="headerlink" title="4 umask &amp; 默认权限"></a>4 umask &amp; 默认权限</h3><h4 id="1-umask"><a href="#1-umask" class="headerlink" title="1 umask"></a>1 umask</h4><h5 id="1-命令"><a href="#1-命令" class="headerlink" title="1 命令"></a>1 命令</h5><ol>
<li><code>umask</code><ul>
<li>查看umask值，root 默认 <code>0022</code>，普通用户默认 <code>0002</code></li>
<li>第一位是特殊权限，后三位是基本权限 <code>rwx</code></li>
</ul>
</li>
<li><code>umask -S</code><ul>
<li>以rwx形式查看umask值</li>
</ul>
</li>
<li><code>umask 值</code><ul>
<li>临时修改umask值</li>
</ul>
</li>
</ol>
<h5 id="2-umask-和-默认权限的计算"><a href="#2-umask-和-默认权限的计算" class="headerlink" title="2 umask 和 默认权限的计算"></a>2 umask 和 默认权限的计算</h5><ol>
<li>没有umask时，文件的默认权限是 <code>0666</code>，目录的默认权限是 <code>0777</code></li>
<li>有umask时，文件和目录默认权限简单算法（不严谨）<ul>
<li><code>文件默认权限 = 666 - umask</code></li>
<li><code>目录默认权限 = 777 - umask</code></li>
</ul>
</li>
<li>有umask时，文件和目录默认权限科学算法<ol>
<li>将默认权限（目录777，文件666）和 umask 值转为 2 进制</li>
<li>对 umask 2 进制值取反</li>
<li>将默认权限和umask取反后的值进行与运算 <code>&amp;</code></li>
<li>将二进制结果转为八进制，即为默认权限</li>
</ol>
</li>
</ol>
<h4 id="2-默认权限"><a href="#2-默认权限" class="headerlink" title="2 默认权限"></a>2 默认权限</h4><ol>
<li>root<ol>
<li>文件默认权限为 644 <code>rw-r--r--</code></li>
<li>目录默认权限为 755 <code>rwxr-xr-x</code></li>
</ol>
</li>
<li>普通用户<ol>
<li>文件默认权限为 664 <code>rw-rw--r--</code></li>
<li>目录默认权限为 775 <code>rwxrwxr-x</code></li>
</ol>
</li>
</ol>
<h2 id="5-2-特殊权限"><a href="#5-2-特殊权限" class="headerlink" title="5.2 特殊权限"></a>5.2 特殊权限</h2><h3 id="1-SUID（set-uid）（4）"><a href="#1-SUID（set-uid）（4）" class="headerlink" title="1 SUID（set uid）（4）"></a>1 SUID（set uid）（4）</h3><h4 id="1-概述-3"><a href="#1-概述-3" class="headerlink" title="1 概述"></a>1 概述</h4><ol>
<li>SUID 权限仅对可执行二进制文件有效，目录没有意义</li>
<li>SUID 权限只有在该命令文件执行过程中有效</li>
<li>执行者必须对文件有可执行权限</li>
<li>命令文件执行时，执行者可以拥有文件属主的权限</li>
<li><strong>总结</strong>：SUID 即将文件属主的权限分配给所有可执行此文件的人</li>
</ol>
<h4 id="2-例"><a href="#2-例" class="headerlink" title="2 例"></a>2 例</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---------- 1 root root	/etc/shadow</span><br><span class="line">-rwsr-xr-x. 1 root root	/usr/bin/passwd</span><br><span class="line">-rwxr-xr-x. 1 root root	 /usr/bin/cat</span><br></pre></td></tr></table></figure>
<ol>
<li>执行 <code>passwd</code> 命令修改密码其实最终要修改 <code>/etc/shadow</code>，而只有 root 可以读写 <code>/etc/shadow</code> 文件</li>
<li>普通用户执行 <code>passwd</code> 命令能成功的原因<ol>
<li>普通用户对 <code>passwd</code> 命令有执行权限</li>
<li><code>passwd</code> 命令有SUID权限，所以在执行时普通用户拥有了 <code>passwd</code> 属主 root 的权限</li>
</ol>
</li>
<li><code>cat</code> 命令没有SUID权限，所以普通用户无法通过 <code>cat</code> 查看 <code>/etc/shadow</code></li>
</ol>
<h4 id="3-添加-SUID"><a href="#3-添加-SUID" class="headerlink" title="3 添加 SUID"></a>3 添加 SUID</h4><ol>
<li><code>chmod u+s FILE</code></li>
<li><code>chmod 4xxx FILE</code> （xxx 为普通权限）</li>
</ol>
<ul>
<li>设置SUID之后，属主权限的显示<ol>
<li>属主有 <code>x</code> 权限，则 <code>x</code> → <code>s</code></li>
<li>属主无 <code>x</code> 权限，则 <code>-</code> → <code>S</code></li>
</ol>
</li>
</ul>
<h4 id="4-删除-SUID"><a href="#4-删除-SUID" class="headerlink" title="4 删除 SUID"></a>4 删除 SUID</h4><ol>
<li><code>chmod u-s FILE</code></li>
<li><code>chmod xxx FILE</code>（去掉 4 即可）</li>
</ol>
<h3 id="2-SGID（set-gid）（2）"><a href="#2-SGID（set-gid）（2）" class="headerlink" title="2 SGID（set gid）（2）"></a>2 SGID（set gid）（2）</h3><h4 id="1-概述-4"><a href="#1-概述-4" class="headerlink" title="1 概述"></a>1 概述</h4><ul>
<li>文件<ol>
<li>可执行二进制文件</li>
<li>SGID 权限只有在该命令文件执行过程中有效</li>
<li>执行者必须对文件有可执行权限</li>
<li>命令文件执行时，执行者可以拥有文件属组的权限</li>
<li><strong>总结</strong>：SGID 即将文件属组的权限分配给所有可执行此文件的人</li>
</ol>
</li>
<li>目录<ol>
<li>普通用户在此目录中的有效组会变成此目录的属组</li>
<li>在此目录中新建文件或目录的属组为该目录的属组</li>
</ol>
</li>
</ul>
<h4 id="2-例-1"><a href="#2-例-1" class="headerlink" title="2 例"></a>2 例</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-rwx--s--x 1 root slocate	/usr/bin/locate</span><br><span class="line">-rw-r----- 1 root slocate	/var/lib/mlocate/mlocate.db</span><br></pre></td></tr></table></figure>
<ol>
<li>执行 <code>locate</code> 命令需要读取 <code>/var/lib/mlocate/mlocate.db</code> 文件，而普通用户是没有读取此文件的权限的</li>
<li>普通用户执行 <code>locate</code> 命令能成功的原因<ol>
<li>普通用户对 <code>locate</code> 命令有执行权限</li>
<li><code>locate</code> 命令有 SGID 权限，所以在执行时普通用户拥有了 <code>locate</code> 属组 slocate 的权限，而 slocate 对 <code>mlocate.db</code> 文件是可读的</li>
</ol>
</li>
</ol>
<h4 id="3-添加-SGID"><a href="#3-添加-SGID" class="headerlink" title="3 添加 SGID"></a>3 添加 SGID</h4><ol>
<li><code>chmod g+s FILE</code></li>
<li><code>chmod 2xxx FILE</code></li>
</ol>
<ul>
<li>设置SGID之后，属组权限的显示<ol>
<li>属组有 <code>x</code> 权限，则 <code>x</code> → <code>s</code></li>
<li>属组无 <code>x</code> 权限，则 <code>-</code> → <code>S</code></li>
</ol>
</li>
</ul>
<h4 id="4-删除-SGID"><a href="#4-删除-SGID" class="headerlink" title="4 删除 SGID"></a>4 删除 SGID</h4><ol>
<li><code>chmod g-s FILE</code></li>
<li><code>chmod xxx FILE</code></li>
</ol>
<h3 id="3-SBIT（sticky-bit）（1）"><a href="#3-SBIT（sticky-bit）（1）" class="headerlink" title="3 SBIT（sticky bit）（1）"></a>3 SBIT（sticky bit）（1）</h3><h4 id="1-概述-5"><a href="#1-概述-5" class="headerlink" title="1 概述"></a>1 概述</h4><ol>
<li>粘滞位权限只对目录有效</li>
<li>如果一个用户对目录有 <code>wx</code> 权限，则意味着此用户可以删除目录下的所有文件（包含其它用户创建的文件）</li>
<li>若一个目录设置了 SBIT 权限，则在此目录下的文件只有 root 和 属主才可以删除或移动。</li>
</ol>
<h4 id="2-例-2"><a href="#2-例-2" class="headerlink" title="2 例"></a>2 例</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drwxrwxrwt. 19 root root	/tmp</span><br></pre></td></tr></table></figure>
<ol>
<li>所有用户对 <code>/tmp</code> 目录都拥有完整权限，但普通用户却不能在 <code>/tmp</code> 下随意操作不属于自己的文件，是因为<code>/tmp</code> 设置了 SBIT 权限</li>
</ol>
<h4 id="3-添加-SBIT"><a href="#3-添加-SBIT" class="headerlink" title="3 添加 SBIT"></a>3 添加 SBIT</h4><ol>
<li><code>chmod o+t DIR</code></li>
<li><code>chmod 1xxx DIR</code></li>
</ol>
<ul>
<li>设置SBIT后，其它人权限的显示<ol>
<li>其它人有 <code>x</code> 权限，则 <code>x</code> → <code>t</code></li>
<li>其它人无 <code>x</code> 权限，则 <code>x</code> → <code>T</code></li>
</ol>
</li>
</ul>
<h4 id="4-删除-SBID"><a href="#4-删除-SBID" class="headerlink" title="4 删除 SBID"></a>4 删除 SBID</h4><ol>
<li><code>chmod o-t DIR</code></li>
<li><code>chmod xxx DIR</code></li>
</ol>
<h2 id="5-3-权限管理命令"><a href="#5-3-权限管理命令" class="headerlink" title="5.3 权限管理命令"></a>5.3 权限管理命令</h2><h3 id="1-chmod（change-file-mode-bits）"><a href="#1-chmod（change-file-mode-bits）" class="headerlink" title="1 chmod（change file mode bits）"></a>1 chmod（change file mode bits）</h3><ul>
<li><code>chmod [OPTION] mode file</code><ul>
<li>修改文件权限（只有 root 和属主能改变文件的权限）</li>
<li><code>OPTION</code><ul>
<li><code>-R</code><ul>
<li>递归设置</li>
</ul>
</li>
</ul>
</li>
<li><code>mode</code><ol>
<li><code>{ugoa} {+-=} {rwx}</code><ul>
<li><code>u=属主 g=属组 o=其它人 a=ugo</code></li>
</ul>
</li>
<li>八进制数字组合<ul>
<li>如 <code>755 ,644 ...</code></li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
</ul>
<h3 id="2-chown（change-file-owner-and-group）"><a href="#2-chown（change-file-owner-and-group）" class="headerlink" title="2 chown（change file owner and group）"></a>2 chown（change file owner and group）</h3><ul>
<li><code>chown [option] [OWNER][:[GROUP]] file</code><ul>
<li>修改文件的属主和属组<ol>
<li>只有 root 可以修改文件的属主</li>
<li>属主（非root）只能修改文件的属组，且修改后的属组必须还是属主所在组</li>
</ol>
</li>
<li><code>option</code><ul>
<li><code>-R</code><ul>
<li>递归修改</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="5-4-最大有效权限-mask"><a href="#5-4-最大有效权限-mask" class="headerlink" title="5.4 最大有效权限 mask"></a>5.4 最大有效权限 mask</h2><ol>
<li>mask 的默认权限是 <code>rwx</code>，通常不会修改</li>
<li>文件上的除了属主外的权限（属组/其它人/ACL）都需要和 mask 权限作“与”运算，才能得到真正的权限<ul>
<li>如设置的非属主权限是 <code>r-x</code>，则 <code>r-x &amp; rwx = r-x</code> </li>
</ul>
</li>
</ol>
<h2 id="5-5-ACL（Access-Control-List）"><a href="#5-5-ACL（Access-Control-List）" class="headerlink" title="5.5 ACL（Access Control List）"></a>5.5 ACL（Access Control List）</h2><h3 id="1-概述-6"><a href="#1-概述-6" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>访问控制列表</li>
<li>在普通权限中，用户对文件只有三种身份，属主、属组和其他人，但实际中只有这三个身份不太够用。</li>
<li>当用户对文件的权限与属主、属组和其它人这三种身份的权限都不相同时，就需要单独为用户分配权限，这就是 ACL 权限</li>
<li>文件权限信息最后的 <code>.</code> 就代表 ACL 权限<ul>
<li><code>.</code><ul>
<li>无 ACL 权限</li>
</ul>
</li>
<li><code>+</code><ul>
<li>有 ACL 权限</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="2-ACL-权限管理"><a href="#2-ACL-权限管理" class="headerlink" title="2 ACL 权限管理"></a>2 ACL 权限管理</h3><h4 id="1-setfacl（set-file-access-control-lists）"><a href="#1-setfacl（set-file-access-control-lists）" class="headerlink" title="1 setfacl（set file access control lists）"></a>1 setfacl（set file access control lists）</h4><ul>
<li><code>setfacl [OPTION] FILE</code><ul>
<li><code>OPTION</code><ul>
<li><code>-m, --modify</code><ul>
<li>设置 acl 权限</li>
</ul>
</li>
<li><code>-d, --default</code><ul>
<li>设置默认 acl 权限</li>
<li>只对目录生效，目录中新建立的文件都拥有此默认权限</li>
</ul>
</li>
<li><code>-k, --remove-default</code><ul>
<li>删除默认 acl 权限</li>
</ul>
</li>
<li><code>-x, --remove</code><ul>
<li>删除指定 acl 权限</li>
</ul>
</li>
<li><code>-b, --remove-all</code><ul>
<li>删除所有 acl 权限</li>
</ul>
</li>
<li><code>-R, --recursive</code><ul>
<li>递归设置 acl 权限</li>
<li>设定的 acl 权限会对目录下的所有子文件生效（新建文件不生效）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="2-查看-ACL-权限"><a href="#2-查看-ACL-权限" class="headerlink" title="2 查看 ACL 权限"></a>2 查看 ACL 权限</h4><ul>
<li><code>getfacl  FILE</code></li>
</ul>
<h4 id="3-增加-ACL-权限"><a href="#3-增加-ACL-权限" class="headerlink" title="3 增加 ACL 权限"></a>3 增加 ACL 权限</h4><ol>
<li><code>setfacl -m m:权限 FILE</code><ul>
<li>设置最大有效权限 mask</li>
</ul>
</li>
<li><code>setfacl -m u:用户名:权限 FILE</code><ul>
<li>为某个用户设置acl权限</li>
</ul>
</li>
<li><code>setfacl -m g:组名:权限 FILE</code><ul>
<li>为某个组设置acl权限</li>
</ul>
</li>
<li><code>setfacl -m d:u:用户名:权限 DIR</code><ul>
<li>对目录设置默认acl权限</li>
</ul>
</li>
<li><code>setfacl -m u:用户名:权限 DIR</code><ul>
<li>对目录递归设置acl权限</li>
</ul>
</li>
</ol>
<h4 id="4-删除-ACL-权限"><a href="#4-删除-ACL-权限" class="headerlink" title="4 删除 ACL 权限"></a>4 删除 ACL 权限</h4><ol>
<li><code>setfacl -x u:用户名 FILE</code><ul>
<li>删除用户的acl权限</li>
</ul>
</li>
<li><code>setfacl -x g:组名 FILE</code><ul>
<li>删除组的acl权限</li>
</ul>
</li>
<li><code>setfacl -b FILE</code><ul>
<li>删除文件所有的acl权限</li>
</ul>
</li>
<li><code>seffacl -k DIR</code><ul>
<li>删除目录默认的acl权限</li>
</ul>
</li>
</ol>
<h2 id="5-6-文件扩展属性（隐藏属性）"><a href="#5-6-文件扩展属性（隐藏属性）" class="headerlink" title="5.6 文件扩展属性（隐藏属性）"></a>5.6 文件扩展属性（隐藏属性）</h2><h3 id="1-chattr（change-file-attributes-on-a-Linux-file-system）"><a href="#1-chattr（change-file-attributes-on-a-Linux-file-system）" class="headerlink" title="1 chattr（change file attributes on a Linux file system）"></a>1 chattr（change file attributes on a Linux file system）</h3><ul>
<li><code>chattr {+-=} [属性] FILE</code><ul>
<li>修改文件或目录的隐藏属性（仅 root 可用）</li>
<li><code>+</code><ul>
<li>增加属性</li>
</ul>
</li>
<li><code>-</code><ul>
<li>删除属性</li>
</ul>
</li>
<li><code>=</code><ul>
<li>设置属性</li>
</ul>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>属性</th>
<th>文件</th>
<th>目录</th>
</tr>
</thead>
<tbody><tr>
<td><code>i（immutable）</code></td>
<td>不允许任何修改</td>
<td>可以修改目录下文件数据，不能新建和删除文件</td>
</tr>
<tr>
<td><code>a（append only）</code></td>
<td>可以给文件添加数据，不能修改和删除数据</td>
<td>可以修改目录下文件数据以及新建文件，不能删除文件</td>
</tr>
</tbody></table>
<h3 id="2-lsattr（list-file-attributes-on-a-Linux-second-extended-file-system）"><a href="#2-lsattr（list-file-attributes-on-a-Linux-second-extended-file-system）" class="headerlink" title="2 lsattr（list file attributes on a Linux second extended file system）"></a>2 lsattr（list file attributes on a Linux second extended file system）</h3><ul>
<li><code>lsattr [OPTION] [FILE]</code><ul>
<li>查看文件或目录的隐藏属性</li>
<li><code>OPTION</code><ul>
<li><code>-a</code><ul>
<li>若没有指定文件，则显示所有文件和目录</li>
</ul>
</li>
<li><code>-d</code><ul>
<li>若目标是目录，仅列出目录本身隐藏属性</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 磁盘</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E7%A3%81%E7%9B%98/</url>
    <content><![CDATA[<h1 id="一-磁盘接口分类"><a href="#一-磁盘接口分类" class="headerlink" title="一 磁盘接口分类"></a>一 磁盘接口分类</h1><table>
<thead>
<tr>
<th>类型</th>
<th>说明</th>
<th>使用</th>
</tr>
</thead>
<tbody><tr>
<td><code>SAS</code></td>
<td><code>Serial Attached SCSI</code></td>
<td>服务器</td>
</tr>
<tr>
<td><code>SATA</code></td>
<td><code>Serial ATA</code></td>
<td>个人电脑</td>
</tr>
<tr>
<td><code>SSD</code></td>
<td><code>Solid State Disk</code></td>
<td>服务器，个人电脑</td>
</tr>
<tr>
<td><code>SCSI</code></td>
<td><code>Small Computer System Interface</code></td>
<td><code>@declared</code></td>
</tr>
<tr>
<td><code>IDE</code></td>
<td><code>Integrated Drive Electronics</code></td>
<td><code>@declared</code></td>
</tr>
</tbody></table>
<h1 id="二-磁盘物理结构"><a href="#二-磁盘物理结构" class="headerlink" title="二 磁盘物理结构"></a>二 磁盘物理结构</h1><h2 id="2-1-外部结构"><a href="#2-1-外部结构" class="headerlink" title="2.1 外部结构"></a>2.1 外部结构</h2><ol>
<li>磁盘主轴<ul>
<li>决定磁盘转速（rpm-round per minute）</li>
</ul>
</li>
<li>磁盘盘片<ul>
<li>用于存储数据</li>
</ul>
</li>
<li>磁盘磁头（Head）<ul>
<li>用于读取数据</li>
<li>每个盘面都有一个磁头</li>
<li><code>磁头数 = 盘面数 = 盘片 * 2</code></li>
</ul>
</li>
<li>磁盘接口<ul>
<li>用于连接主板，用于连接阵列卡</li>
</ul>
</li>
</ol>
<h2 id="2-2-内部结构"><a href="#2-2-内部结构" class="headerlink" title="2.2 内部结构"></a>2.2 内部结构</h2><ol>
<li>磁道（Track）<ol>
<li>盘面中一圈圈的同心圆称为磁道</li>
<li>每个盘面都被划分为数目相等的磁道，由外向内从 <code>0</code> 开始编号</li>
</ol>
</li>
<li>柱面（Cylinder）<ol>
<li>不同盘面上编号相同的磁道形成一个圆柱就叫做柱面</li>
<li>磁头在每个盘面上的都是一起移动的，所在磁道编号都相同，所以数据的读写以及磁盘分区都是按柱面进行的</li>
<li><code>柱面数 = 任意一个盘面的磁道数</code></li>
</ol>
</li>
<li>单元块（Units）<ol>
<li>单个柱面的大小</li>
</ol>
</li>
<li>扇区（Sector）<ol>
<li>磁道被直径划分为若干个弧段，每个弧段称为一个扇区，从1开始编号</li>
<li>扇区是磁盘存储的最小单位，通常是512字节</li>
</ol>
</li>
<li>簇（Clust）/ 块（Block）<ol>
<li>操作系统读取磁盘时，一个扇区一个扇区的读，效率太低，会一次性读取多个扇区，多个扇区就叫簇（windows）/ 块（linux）</li>
<li>簇 / 块 是文件系统存储的最小单位</li>
</ol>
</li>
</ol>
<h2 id="2-3-磁盘容量"><a href="#2-3-磁盘容量" class="headerlink" title="2.3 磁盘容量"></a>2.3 磁盘容量</h2><ul>
<li><code>磁盘容量 = 磁头数(盘面数) × 每面磁道数(柱面数) × 每道扇区数 × 每扇区字节数(512byte)</code></li>
</ul>
<h1 id="三-RAID（Redundant-Array-of-Independent-Disks）"><a href="#三-RAID（Redundant-Array-of-Independent-Disks）" class="headerlink" title="三 RAID（Redundant Array of Independent Disks）"></a>三 RAID（Redundant Array of Independent Disks）</h1><h2 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h2><ol>
<li>独立冗余磁盘阵列</li>
<li>把好几块硬盘通过一定组合方式把它组合起来，成为一个新的硬盘阵列组，从而使它能够达到高性能硬盘的要求</li>
</ol>
<h2 id="3-2-作用"><a href="#3-2-作用" class="headerlink" title="3.2 作用"></a>3.2 作用</h2><ol>
<li>提高磁盘存储效率<ul>
<li>提高I/O速度，提供了数据并发性</li>
</ul>
</li>
<li>提高磁盘存储安全<ul>
<li>数据冗余（备份），数据校验</li>
</ul>
</li>
<li>提高磁盘存储容量<ul>
<li>扩充容量</li>
</ul>
</li>
</ol>
<h2 id="3-3-RAID-级别（整合方式）"><a href="#3-3-RAID-级别（整合方式）" class="headerlink" title="3.3 RAID 级别（整合方式）"></a>3.3 RAID 级别（整合方式）</h2><ol>
<li><code>raid 0</code><ol>
<li>多块盘整合在一起，全部用作存储</li>
<li>可用容量为所有盘容量之和，性能高</li>
<li>没有冗余，有一块盘坏则整个raid 0 就坏，数据会丢失</li>
</ol>
</li>
<li><code>raid 1</code><ol>
<li>两块盘整合在一起，一个盘存储，一个盘备份</li>
<li>可用容量为一个盘，性能底</li>
<li>冗余100%，一块盘坏了数据也不会丢失</li>
</ol>
</li>
<li><code>raid 5</code><ol>
<li>至少有三个盘，一次只有两块盘存储，另一个盘作奇偶校验</li>
<li>容量为两个盘的容量，性能高</li>
<li>如果只有一块盘坏了，可以根据另外两块盘推算出这块盘的数据</li>
</ol>
</li>
<li><code>raid 10</code><ol>
<li>两个盘形成一个raid 1，然后两个raid 1形成一个raid 0</li>
</ol>
</li>
</ol>
<h3 id="RAID-各级别比较"><a href="#RAID-各级别比较" class="headerlink" title="RAID 各级别比较"></a>RAID 各级别比较</h3><ol>
<li>冗余<ul>
<li><code>RAID 1 &gt; RAID 10 &gt; RAID 5 &gt; RAID 0</code></li>
</ul>
</li>
<li>性能<ul>
<li><code>RAID 0 &gt; RAID 10 &gt; RAID 5 &gt; RAID 1</code></li>
</ul>
</li>
<li>成本<ul>
<li><code>RAID 10 &gt; RAID 1 &gt; RAID 5 &gt; RAID 0</code></li>
</ul>
</li>
</ol>
<h1 id="四-LVM（Logical-Volume-Manager）"><a href="#四-LVM（Logical-Volume-Manager）" class="headerlink" title="四 LVM（Logical Volume Manager）"></a>四 LVM（Logical Volume Manager）</h1><h2 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1 概述"></a>4.1 概述</h2><ol>
<li>逻辑卷管理器</li>
<li>实现分区的弹性扩容或缩容，逻辑卷通过命令可以从卷组中获取容量或者将容量返回给卷组</li>
</ol>
<h2 id="4-2-概念"><a href="#4-2-概念" class="headerlink" title="4.2 概念"></a>4.2 概念</h2><ol>
<li>物理卷 PV（Physical Volume）<ul>
<li>物理卷是 LVM 的基本存储逻辑块，可以是分区、磁盘或Raid</li>
<li>PE（physical extents）<ul>
<li>物理卷中可以分配的最小存储单元，PE的大小是可以指定的，默认为4MB</li>
</ul>
</li>
</ul>
</li>
<li>卷组 VG（Volume Group）<ul>
<li>一个卷组由一个或多个物理卷组成</li>
</ul>
</li>
<li>逻辑卷 LV（Logical Volume）<ul>
<li>逻辑卷建立在卷组之上，逻辑卷上可以建立文件系统，类似与其它硬盘的分区概念</li>
<li>LE（logical extent）<ul>
<li>逻辑卷中可以分配的最小存储单元，在同一个卷组中，LE的大小和PE是相同的，并且一一对应</li>
</ul>
</li>
</ul>
</li>
</ol>
<h1 id="五-磁盘分区"><a href="#五-磁盘分区" class="headerlink" title="五 磁盘分区"></a>五 磁盘分区</h1><h2 id="5-1-系统启动引导记录"><a href="#5-1-系统启动引导记录" class="headerlink" title="5.1 系统启动引导记录"></a>5.1 系统启动引导记录</h2><h3 id="1-MBR（Master-Boot-Record）"><a href="#1-MBR（Master-Boot-Record）" class="headerlink" title="1 MBR（Master Boot Record）"></a>1 MBR（Master Boot Record）</h3><ol>
<li>用于引导磁盘空间小于2T</li>
<li>磁盘的 0 磁头、0 磁道、1 扇区 （512 bytes）<ol>
<li>主引导程序（BootLoader）（446 bytes）</li>
<li>磁盘分区表DPT（Disk Partition table）（64 bytes）<ul>
<li>1 个分区占16 bytes，所以最多有 4 个分区</li>
</ul>
</li>
<li>分区有效(结束)标志（magic number）（2 bytes <code>55AA</code>）</li>
</ol>
</li>
</ol>
<h3 id="2-GPT"><a href="#2-GPT" class="headerlink" title="2 GPT"></a>2 GPT</h3><ul>
<li>用于引导磁盘空间大于2T</li>
</ul>
<h2 id="5-2-分区概述"><a href="#5-2-分区概述" class="headerlink" title="5.2 分区概述"></a>5.2 分区概述</h2><h3 id="1-Linux-磁盘和分区的命名规则"><a href="#1-Linux-磁盘和分区的命名规则" class="headerlink" title="1 Linux 磁盘和分区的命名规则"></a>1 Linux 磁盘和分区的命名规则</h3><table>
<thead>
<tr>
<th>磁盘种类</th>
<th>磁盘命名</th>
<th>分区命名</th>
</tr>
</thead>
<tbody><tr>
<td><code>SAS SATA SCSI</code></td>
<td>第一块：<code>sda</code><br>第二块：<code>sdb</code><br>…</td>
<td><code>sda1 sda2 ...</code><br><code>sdb1 sdb2 ...</code></td>
</tr>
<tr>
<td><code>IDE</code></td>
<td>第一块：<code>hda</code><br>第二块：<code>hdb</code><br>…</td>
<td><code>hda1 hda2 ...</code><br><code>hdb1 hdb2 ...</code></td>
</tr>
</tbody></table>
<h3 id="2-分区说明"><a href="#2-分区说明" class="headerlink" title="2 分区说明"></a>2 分区说明</h3><table>
<thead>
<tr>
<th>分区</th>
<th>编号</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>主分区（Primary）</code></td>
<td><code>1 ~ 4</code></td>
<td>至少有 1 个，至多有 4 个</td>
</tr>
<tr>
<td><code>扩展分区（Extend）</code></td>
<td><code>1 ~ 4</code></td>
<td>至多有 1 个</td>
</tr>
<tr>
<td><code>逻辑分区（Logical）</code></td>
<td><code>5+</code></td>
<td>由扩展分区划分成一个个逻辑分区</td>
</tr>
<tr>
<td>1. 真正存放数据的是主分区和逻辑分区，大量数据都放在逻辑分区中</td>
<td></td>
<td></td>
</tr>
<tr>
<td>2. 扩展分区可以理解为一个概念，用来划分逻辑分区用的，可以使用 <code>1 ~ 4</code> 任意一个编号</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="3-分区方式"><a href="#3-分区方式" class="headerlink" title="3 分区方式"></a>3 分区方式</h3><ol>
<li><code>1~4 个 主分区</code><ul>
<li>磁盘：<code>sda</code></li>
<li>主分区：<code>sda1 sda2 sda3 sda4</code>（数量任意）</li>
</ul>
</li>
<li><code>1~3 个 主分区 + 1 个扩展分区（分成 n 个逻辑分区）</code><ul>
<li>磁盘：<code>sda</code></li>
<li>主分区：<code>sda1 sda2 sda3</code>（数量任意）</li>
<li>扩展分区：<code>sda4</code>（编号 1 ~ 4 任意，不与主分区重复即可）</li>
<li>逻辑分区：<code>sda5 sda6 ...</code></li>
</ul>
</li>
</ol>
<h3 id="4-分区方案"><a href="#4-分区方案" class="headerlink" title="4 分区方案"></a>4 分区方案</h3><h4 id="1-普通分区方式"><a href="#1-普通分区方式" class="headerlink" title="1 普通分区方式"></a>1 普通分区方式</h4><ul>
<li><code>/boot</code><ul>
<li>引导分区，256Mb</li>
</ul>
</li>
<li><code>swap</code><ul>
<li>交换分区，把内存中暂时不用的数据临时存放到硬盘中，以腾出物理内存空间供给更活跃的程序服务来使用，目的是为了解决真实物理内存不足 </li>
<li>内存 &gt; 8G，swap = 8G，内存 &lt; 8G，swap = 内存 * 1.5</li>
</ul>
</li>
<li><code>/</code><ul>
<li>根分区，剩余大小</li>
</ul>
</li>
</ul>
<h4 id="2-存储服务器分区方式"><a href="#2-存储服务器分区方式" class="headerlink" title="2 存储服务器分区方式"></a>2 存储服务器分区方式</h4><ul>
<li><code>/boot</code></li>
<li><code>swap</code></li>
<li><code>/</code><ul>
<li>20G~200G</li>
</ul>
</li>
<li><code>/data</code><ul>
<li>剩余大小，<code>data</code> 名称可自定义</li>
</ul>
</li>
</ul>
<h4 id="3-灵活分区方式"><a href="#3-灵活分区方式" class="headerlink" title="3 灵活分区方式"></a>3 灵活分区方式</h4><ul>
<li><code>/boot</code></li>
<li><code>swap</code></li>
<li><code>/</code><ul>
<li>20G~200G</li>
<li>剩余保留，以后哪个部门使用，就分出相应的分区。</li>
</ul>
</li>
</ul>
<h2 id="5-3-分区操作"><a href="#5-3-分区操作" class="headerlink" title="5.3 分区操作"></a>5.3 分区操作</h2><h3 id="1-fdisk（manipulate-disk-partition-table）"><a href="#1-fdisk（manipulate-disk-partition-table）" class="headerlink" title="1 fdisk（manipulate disk partition table）"></a>1 fdisk（manipulate disk partition table）</h3><ol>
<li><code>fdisk -l [device]</code><ul>
<li>查看磁盘及其分区表信息</li>
</ul>
</li>
<li><code>fdisk device</code><ul>
<li>分区（交互式操作），有默认值时直接回车代表使用默认值</li>
</ul>
</li>
</ol>
<table>
<thead>
<tr>
<th>交互命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>n</code></td>
<td>创建分区</td>
</tr>
<tr>
<td><code>d</code></td>
<td>删除分区</td>
</tr>
<tr>
<td><code>p</code></td>
<td>显示分区表</td>
</tr>
<tr>
<td><code>q</code></td>
<td>不保存退出</td>
</tr>
<tr>
<td><code>w</code></td>
<td>将分区信息写入分区表，即保存退出</td>
</tr>
<tr>
<td><code>l</code></td>
<td>显示分区类型与分区类型id对照表，如 <code>83:linux，8e:linux LVM</code></td>
</tr>
<tr>
<td><code>t</code></td>
<td>改变分区类型</td>
</tr>
<tr>
<td><code>u</code></td>
<td>改变分区的方式（是否按照扇区进行划分）</td>
</tr>
<tr>
<td><code>g</code></td>
<td>创建一个新的空的 GPT 分区表</td>
</tr>
</tbody></table>
<h3 id="2-parted"><a href="#2-parted" class="headerlink" title="2 parted"></a>2 parted</h3><ul>
<li><code>parted device</code><ul>
<li>用来划分容量大于2T的磁盘（交互式操作）</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>交互命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>mklabel</code></td>
<td>创建一个分区表（默认为MBR）</td>
</tr>
<tr>
<td><code>mklabel gpt</code></td>
<td>修改分区表为GPT</td>
</tr>
<tr>
<td><code>print</code></td>
<td>显示分区表</td>
</tr>
<tr>
<td><code>mkpart PART-TYPE [FS-TYPE] START END</code></td>
<td>创建分区（立即生效）</td>
</tr>
<tr>
<td><code>rm NUMBER</code></td>
<td>根据编号删除分区</td>
</tr>
<tr>
<td><code>quit</code></td>
<td>退出</td>
</tr>
</tbody></table>
<h3 id="3-partprobe"><a href="#3-partprobe" class="headerlink" title="3 partprobe"></a>3 partprobe</h3><ul>
<li><code>partprobe [device]</code><ul>
<li>重新读取分区表信息</li>
<li>分区完成之后，要执行此命令让系统识别分区文件</li>
</ul>
</li>
</ul>
<h1 id="六-格式化"><a href="#六-格式化" class="headerlink" title="六 格式化"></a>六 格式化</h1><h2 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h2><ol>
<li>格式化用来创建文件系统</li>
<li>文件系统<ol>
<li><code>xfs</code><ul>
<li>CentOS 7</li>
</ul>
</li>
<li><code>ext3/4</code><ul>
<li>CentOS 6</li>
</ul>
</li>
</ol>
</li>
</ol>
<h2 id="6-2-格式化操作"><a href="#6-2-格式化操作" class="headerlink" title="6.2 格式化操作"></a>6.2 格式化操作</h2><h3 id="mkfs（make-file-system）"><a href="#mkfs（make-file-system）" class="headerlink" title="mkfs（make file system）"></a>mkfs（make file system）</h3><ol>
<li><code>mkfs -t type device</code><ul>
<li><code>type</code><ul>
<li>文件系统类型，如 <code>xfs ext4 ...</code></li>
</ul>
</li>
</ul>
</li>
<li><code>mkfs.type device</code></li>
</ol>
<h1 id="七-挂载"><a href="#七-挂载" class="headerlink" title="七 挂载"></a>七 挂载</h1><h2 id="7-1-概述"><a href="#7-1-概述" class="headerlink" title="7.1 概述"></a>7.1 概述</h2><ol>
<li>Linux中的存储设备（磁盘、光盘…）是不能直接访问的，需要将一个目录与一个存储设备相关联，通过关联目录访问存储设备中的数据。<ol>
<li>将目录与存储设备关联的动作叫做 <strong>挂载</strong></li>
<li>与存储设备关联的目录叫做 <strong>挂载点</strong>。</li>
</ol>
</li>
<li>装完Linux系统后，能直接访问磁盘，是因为系统根据我们对磁盘的分区信息及顺序与指定目录进行了挂载，如：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">分区		 挂载点</span><br><span class="line">/dev/sda1	/boot</span><br><span class="line">/dev/sda2	swap</span><br><span class="line">/dev/sda3	/</span><br></pre></td></tr></table></figure></li>
<li>磁盘的使用<ul>
<li>分区（可选）→  格式化 → 挂载</li>
</ul>
</li>
</ol>
<h2 id="7-2-挂载操作"><a href="#7-2-挂载操作" class="headerlink" title="7.2 挂载操作"></a>7.2 挂载操作</h2><h3 id="1-查"><a href="#1-查" class="headerlink" title="1 查"></a>1 查</h3><ul>
<li><code>mount [-l]</code><ul>
<li>显示系统中已经挂载的设备，</li>
<li><code>-l</code><ul>
<li>会显示卷标名称</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-挂载"><a href="#2-挂载" class="headerlink" title="2 挂载"></a>2 挂载</h3><ul>
<li><code>mount [-t 文件系统] [-L 卷标名] [-o 挂载参数] 设备文件名 挂载点</code><ul>
<li>临时挂载设备，重启失效</li>
</ul>
</li>
</ul>
<h3 id="3-卸载挂载"><a href="#3-卸载挂载" class="headerlink" title="3 卸载挂载"></a>3 卸载挂载</h3><ul>
<li><code>umount 挂载点|设备文件</code></li>
</ul>
<h3 id="4-开机自动挂载"><a href="#4-开机自动挂载" class="headerlink" title="4 开机自动挂载"></a>4 开机自动挂载</h3><h4 id="1-使用开机自启动配置文件"><a href="#1-使用开机自启动配置文件" class="headerlink" title="1 使用开机自启动配置文件"></a>1 使用开机自启动配置文件</h4><ul>
<li><code>/etc/rc.local -&gt; /etc/rc.d/rc.local</code><ul>
<li>在此系统开机自启动配置文件，配置挂载命令，即可实现开机自动挂载</li>
<li>注意要给 <code>/etc/rc.d/rc.local</code> 赋予执行权限</li>
</ul>
</li>
</ul>
<h4 id="2-使用挂载配置文件"><a href="#2-使用挂载配置文件" class="headerlink" title="2 使用挂载配置文件"></a>2 使用挂载配置文件</h4><ul>
<li><code>/etc/fstab</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UUID=13ba788b-e881-484b-865f-2adc27ded83c    /        xfs     defaults    0    0</span><br><span class="line">UUID=a347b25e-b9a2-4dee-bd26-7d4214c4959b    /boot    xfs     defaults    0    0</span><br><span class="line">UUID=fbb8a2df-84b3-441f-a511-0760f45c9584    swap     swap    defaults    0    0</span><br><span class="line">设备/设备UUID 挂载点 文件系统类型 挂载参数 是否备份 是否自检</span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li><code>blkid</code><ul>
<li>查看设备的名称、文件系统类型、UUID、LABEL等信息</li>
</ul>
</li>
<li><code>mount -a</code><ul>
<li>检查 <code>/etc/fstab</code> 文件中挂载的设备文件有无疏漏，若有，则进行挂载</li>
</ul>
</li>
</ol>
<h3 id="5-不同设备的挂载"><a href="#5-不同设备的挂载" class="headerlink" title="5 不同设备的挂载"></a>5 不同设备的挂载</h3><ol>
<li>挂载硬盘分区<ul>
<li><code>mount [-t xfs] /dev/分区名 挂载点</code></li>
</ul>
</li>
<li>挂载U盘<ul>
<li><code>mount [-t vfat] /dev/设备号 挂载点</code><ul>
<li>U盘和硬盘一样，设备号不固定，先使用 <code>fdisk -l</code> 查询设备号</li>
</ul>
</li>
</ul>
</li>
<li>挂载光盘<ul>
<li><code>mount [-t iso9660] {/dev/sr0 | /dev/cdrom} 挂载点</code><ul>
<li><code>/dev/cdrom</code> 是 <code>/dev/sr0</code> 的软连接</li>
</ul>
</li>
</ul>
</li>
</ol>
<h1 id="八-问题"><a href="#八-问题" class="headerlink" title="八 问题"></a>八 问题</h1><h2 id="8-1-磁盘空间不足（no-space-left-on-device）"><a href="#8-1-磁盘空间不足（no-space-left-on-device）" class="headerlink" title="8.1 磁盘空间不足（no space left on device）"></a>8.1 磁盘空间不足（no space left on device）</h2><ol>
<li>block 存储空间不足<ul>
<li>原因：存储数据过多</li>
<li>解决：删除没用数据</li>
</ul>
</li>
<li>inode 数量不足<ul>
<li>原因：大量小文件占用 inode</li>
<li>解决：删除大量的没用小文件</li>
</ul>
</li>
</ol>
<h2 id="8-2-调整-swap-分区大小"><a href="#8-2-调整-swap-分区大小" class="headerlink" title="8.2 调整 swap 分区大小"></a>8.2 调整 swap 分区大小</h2><ol>
<li>从磁盘分出一部分空间（创建一个空文件 <code>FILE</code>）<ul>
<li><code>dd if=/etc/zero of=DIR bs= count=</code></li>
</ul>
</li>
<li><code>mkswap FILE</code><ul>
<li>把文件作为 swap 空间使用</li>
</ul>
</li>
<li><code>swapon FILE</code><ul>
<li>激活扩展的 swap 空间</li>
</ul>
</li>
<li><code>swapoff FILE</code><ul>
<li>取消扩展的 swap 空间</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 用户管理</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="一-用户分类"><a href="#一-用户分类" class="headerlink" title="一 用户分类"></a>一 用户分类</h1><p>UID|用户|说明|例<br>-|-<br><code>0</code>|超级管理员|<code>root</code> 不一定是超级管理员，<code>uid=0</code> 的一定是超级管理员|<code>root</code><br><code>1~999</code>|系统用户（虚拟用户）|用于维持、管理某个服务正常运行，不能登录且没有家目录，不能删除|<code>nobody</code><br><code>1000+</code>|普通用户|管理指定数据，可以管理指定进程，可以登录|<code>自定义</code></p>
<h1 id="二-配置文件"><a href="#二-配置文件" class="headerlink" title="二 配置文件"></a>二 配置文件</h1><h2 id="2-1-用户信息"><a href="#2-1-用户信息" class="headerlink" title="2.1 用户信息"></a>2.1 用户信息</h2><ul>
<li><code>/etc/passwd</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root: x: 0: 0: root: /root: /bin/bash</span><br><span class="line">1 用户名:</span><br><span class="line">2 用户密码占位符（x表示有密码）:</span><br><span class="line">3 用户Uid:</span><br><span class="line">4 用户Gid:</span><br><span class="line">5 用户描述信息:</span><br><span class="line">6 用户家目录:</span><br><span class="line">7 用户登录后使用的shell:</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="2-2-用户密码信息，仅-root-可读"><a href="#2-2-用户密码信息，仅-root-可读" class="headerlink" title="2.2 用户密码信息，仅 root 可读"></a>2.2 用户密码信息，仅 root 可读</h2><ul>
<li><code>/etc/shadow</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root: $6$SlHDoVNtoeyDU/3w$y.ap.le40W39OROwHTk2xJnjDUbIcXX9GcAOOQA3k6yteiu9Xq9XyZzB8U/GbNzFSZ3LoC4q6Pazh806WZaKL0: : 0: 99999: 7: : :</span><br><span class="line">1 用户名：</span><br><span class="line">2 密码（加密）：</span><br><span class="line">3 密码最后修改时间：表示账号在1970-01-01之后的第 n 天修改的密码</span><br><span class="line">4 密码最小修改时间间隔：表示密码修改之后隔多久可以再次修改</span><br><span class="line">5 密码有效期：表示密码修改之后有效期限，超过期限会过期，必须重新修改</span><br><span class="line">6 密码过期前警告天数：默认为7，表示密码过期前7天会发送警告信息</span><br><span class="line">7 密码过期后宽限天数：</span><br><span class="line">8 账号失效时间：表示账号在1970-01-01之后的 n 天内有效，超过则失效</span><br><span class="line">9 保留字段：</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="2-3-用户组信息"><a href="#2-3-用户组信息" class="headerlink" title="2.3 用户组信息"></a>2.3 用户组信息</h2><ul>
<li><code>/etc/group</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root: x: 0:</span><br><span class="line">1 组名：</span><br><span class="line">2 组密码占位符（x表示有密码）：</span><br><span class="line">3 组id（Gid）：</span><br><span class="line">4 组附加用户：即如果组是用户的初始组，则不显示此用户，只显示组中其它用户</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="2-4-用户组密码信息"><a href="#2-4-用户组密码信息" class="headerlink" title="2.4 用户组密码信息"></a>2.4 用户组密码信息</h2><ul>
<li><code>/etc/gshadow</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root: : :</span><br><span class="line">1 组名：</span><br><span class="line">2 组密码：空表示没有组密码，`!` 表示没有组密码也没有组管理员</span><br><span class="line">3 组管理员：</span><br><span class="line">4 组附加用户：</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="2-5-用户模板目录"><a href="#2-5-用户模板目录" class="headerlink" title="2.5 用户模板目录"></a>2.5 用户模板目录</h2><ul>
<li><code>/etc/skel/</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 添加用户时，此目录中文件会自动存入用户家目录</span><br><span class="line">.bash_logout  # 退出登录时执行</span><br><span class="line">.bash_profile</span><br><span class="line">.bashrc</span><br><span class="line">.viminfo # vim文件模板</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="2-6-用户邮件目录"><a href="#2-6-用户邮件目录" class="headerlink" title="2.6 用户邮件目录"></a>2.6 用户邮件目录</h2><ul>
<li><code>/var/spool/mail/用户名/</code></li>
</ul>
<h2 id="2-7-新建用户配置文件"><a href="#2-7-新建用户配置文件" class="headerlink" title="2.7 新建用户配置文件"></a>2.7 新建用户配置文件</h2><ol>
<li><code>/etc/default/useradd</code><ul>
<li>创建用户时的默认值</li>
</ul>
</li>
<li><code>/etc/login.defs</code><ul>
<li>用于在创建用户时，对用户的一些基本属性做默认设置，例如指定用户 UID 和 GID 的范围，用户的过期时间，密码的最大长度，等等</li>
</ul>
</li>
</ol>
<h1 id="三-用户管理"><a href="#三-用户管理" class="headerlink" title="三 用户管理"></a>三 用户管理</h1><h2 id="3-1-查"><a href="#3-1-查" class="headerlink" title="3.1 查"></a>3.1 查</h2><h3 id="1-id（print-real-and-effective-user-and-group-IDs）"><a href="#1-id（print-real-and-effective-user-and-group-IDs）" class="headerlink" title="1 id（print real and effective user and group IDs）"></a>1 id（print real and effective user and group IDs）</h3><ul>
<li><code>id [OPTION] [USER]</code><ul>
<li>显示用户 <code>uid gid gids</code>，默认为显示当前用户</li>
<li><code>OPTION</code><ul>
<li><code>-u, --user</code><ul>
<li>显示用户 uid</li>
</ul>
</li>
<li><code>-g, --group</code><ul>
<li>显示用户 gid</li>
</ul>
</li>
<li><code>-G, --groups</code><ul>
<li>显示用户所有所在组的 gid</li>
</ul>
</li>
<li><code>-n, --name</code><ul>
<li>与 <code>u g G</code> 一起使用显示名称而不是id</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-w（Show-who-is-logged-on-and-what-they-are-doing）"><a href="#2-w（Show-who-is-logged-on-and-what-they-are-doing）" class="headerlink" title="2 w（Show who is logged on and what they are doing）"></a>2 w（Show who is logged on and what they are doing）</h3><ul>
<li><code>w</code><ul>
<li>显示登录用户信息及负载信息</li>
</ul>
</li>
</ul>
<h3 id="3-who（show-who-is-logged-on）"><a href="#3-who（show-who-is-logged-on）" class="headerlink" title="3 who（show who is logged on）"></a>3 who（show who is logged on）</h3><ul>
<li><code>who</code><ul>
<li>显示登录用户信息</li>
</ul>
</li>
</ul>
<h3 id="4-whoami"><a href="#4-whoami" class="headerlink" title="4 whoami"></a>4 whoami</h3><ul>
<li><code>whoami</code>    <ul>
<li>显示当前登录用户名</li>
</ul>
</li>
</ul>
<h3 id="5-last"><a href="#5-last" class="headerlink" title="5 last"></a>5 last</h3><ul>
<li><code>last</code><ul>
<li>查看系统的所有登录信息</li>
<li><code>last</code> 命令默认读取 <code>/var/log/wtmp</code> 日志，这是一个二进制文件</li>
</ul>
</li>
</ul>
<h3 id="6-lastlog"><a href="#6-lastlog" class="headerlink" title="6 lastlog"></a>6 lastlog</h3><ul>
<li><code>lastlog [-u UID]</code><ul>
<li>查看用户最后一次登录系统的信息</li>
<li><code>lastlog</code> 命令默认读取 <code>/var/log/lastlog</code> 日志，这是一个二进制文件</li>
</ul>
</li>
</ul>
<h2 id="3-2-增"><a href="#3-2-增" class="headerlink" title="3.2 增"></a>3.2 增</h2><h3 id="1-useradd（create-a-new-user-or-update-default-new-user-information）"><a href="#1-useradd（create-a-new-user-or-update-default-new-user-information）" class="headerlink" title="1 useradd（create a new user or update default new user information）"></a>1 useradd（create a new user or update default new user information）</h3><ul>
<li><code>useradd [OPTION] username</code><ul>
<li><code>OPTION</code><ul>
<li><code>-u, --uid UID</code><ul>
<li>指定Uid</li>
</ul>
</li>
<li><code>-g, --gid GROUP</code><ul>
<li>指定用户初始组（组必须存在），且不会创建默认同名组。</li>
<li>默认会创建一个与用户名相同的初始组。</li>
</ul>
</li>
<li><code>-G, --groups GROUP1[,GROUP2,...[,GROUPN]]]</code><ul>
<li>指定用户附加组</li>
</ul>
</li>
<li><code>-s, --shell SHELL</code><ul>
<li>指定SHELL，默认为 <code>/bin/bash</code></li>
</ul>
</li>
<li><code>-c, --comment COMMENT</code><ul>
<li>用户描述信息</li>
</ul>
</li>
<li><code>-d, --home-dir HOME_DIR</code><ul>
<li>指定用户家目录</li>
<li>默认的用户家目录为 <code>/home/username</code></li>
</ul>
</li>
<li><code>-M, --no-create-home</code><ul>
<li>不创建家目录</li>
</ul>
</li>
<li><code>-N, --no-user-group</code><ul>
<li>不创建与用户同名的初始组</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-passwd（update-user’s-authentication-tokens）"><a href="#2-passwd（update-user’s-authentication-tokens）" class="headerlink" title="2 passwd（update user’s authentication tokens）"></a>2 passwd（update user’s authentication tokens）</h3><ul>
<li><code>passwd [OPTION] [USER]</code><ul>
<li>修改用户密码（默认交互式）</li>
<li><code>OPTION</code><ul>
<li><code>-S</code><ul>
<li>查询用户密码状态（仅 root 可用）</li>
</ul>
</li>
<li><code>-l, --lock</code><ul>
<li>锁定用户。会在<code>/etc/shadow</code> 中指定用户的密码前添加 <code>!</code>，使密码失效（仅 root 可用）</li>
</ul>
</li>
<li><code>-u, --unlock</code><ul>
<li>解锁用户（仅 root 可用）</li>
</ul>
</li>
<li><code>--stdin</code><ul>
<li>接收标准输入（如管道）的数据作为密码（非交互式）</li>
<li><code>echo 密码 | passwd --stdin 用户</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-3-删"><a href="#3-3-删" class="headerlink" title="3.3 删"></a>3.3 删</h2><h3 id="1-userdel（delete-a-user-account-and-related-files）"><a href="#1-userdel（delete-a-user-account-and-related-files）" class="headerlink" title="1 userdel（delete a user account and related files）"></a>1 userdel（delete a user account and related files）</h3><ul>
<li><code>userdel [OPTION] USER</code><ul>
<li>删除用户<ol>
<li>实际就是从<code>/etc/passwd shadow group gshadow</code> 中删除用户信息</li>
<li>用户个人文件（家目录和邮件目录）默认会保留</li>
</ol>
</li>
<li><code>OPTION</code><ul>
<li><code>-r, --remove</code><ul>
<li>删除用户及个人文件</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-4-改"><a href="#3-4-改" class="headerlink" title="3.4 改"></a>3.4 改</h2><h3 id="1-usermod（modify-a-user-account）"><a href="#1-usermod（modify-a-user-account）" class="headerlink" title="1 usermod（modify a user account）"></a>1 usermod（modify a user account）</h3><ul>
<li><code>usermod [OPTION] [USER]</code><ul>
<li>修改用户信息</li>
<li><code>OPTION</code><ul>
<li><code>-u UID</code><ul>
<li>修改用户uid</li>
</ul>
</li>
<li><code>-g GROUP</code><ul>
<li>修改用户初始组</li>
</ul>
</li>
<li><code>-G GROUPS</code><ul>
<li>修改用户附加组</li>
</ul>
</li>
<li><code>-c COMMENT</code><ul>
<li>修改用户说明</li>
</ul>
</li>
<li><code>-s SHELL</code><ul>
<li>修改用户Shell</li>
</ul>
</li>
<li><code>-d HOME__DIR</code><ul>
<li>修改用户家目录</li>
</ul>
</li>
<li><code>-l USERNAME</code><ul>
<li>修改用户名，注意修改家目录名和邮箱名以保持同步</li>
</ul>
</li>
<li><code>-L</code><ul>
<li>临时锁定用户</li>
</ul>
</li>
<li><code>-U</code><ul>
<li>解锁用户</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-chage（change-user-password-expiry-information）"><a href="#2-chage（change-user-password-expiry-information）" class="headerlink" title="2 chage（change user password expiry information）"></a>2 chage（change user password expiry information）</h3><ul>
<li><code>chage [OPTION] [USER]</code><ul>
<li>修改用户密码信息</li>
<li><code>OPTION</code><ul>
<li><code>-l, --list</code><ul>
<li>列出用户的详细密码状态</li>
</ul>
</li>
<li><code>-d LAST_DAY</code><ul>
<li>修改密码最后更改日期</li>
<li><code>0</code><ul>
<li>用户一登陆就要修改密码</li>
</ul>
</li>
</ul>
</li>
<li><code>-m MIN_DAYS</code><ul>
<li>修改两次密码最小修改间隔</li>
</ul>
</li>
<li><code>-M MAX_DAYS</code><ul>
<li>修改密码的有效期</li>
</ul>
</li>
<li><code>-W WARM_DAYS</code><ul>
<li>修改密码到期前的警告天数</li>
</ul>
</li>
<li><code>-I DAYS</code><ul>
<li>修改密码过期后的宽限天数</li>
</ul>
</li>
<li><code>-E EXPIRE_DATE</code><ul>
<li>修改账号失效时间</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-5-用户切换"><a href="#3-5-用户切换" class="headerlink" title="3.5 用户切换"></a>3.5 用户切换</h2><h3 id="1-su"><a href="#1-su" class="headerlink" title="1 su"></a>1 su</h3><ul>
<li><code>su [OPTION] USER</code><ul>
<li>普通用户切换至其它用户需要密码，root 切换至其它用户不需要密码</li>
<li><code>OPTION</code><ul>
<li><code>-</code><ul>
<li>不加 <code>-</code> ，只有部分环境变量会变</li>
<li>加 <code>-</code>，表示完全切换用户，环境变量会随之改变</li>
</ul>
</li>
<li><code>-c command</code><ul>
<li>仅切换用户执行一次命令，执行后自动切换回来</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-sudo（execute-a-command-as-another-user）"><a href="#2-sudo（execute-a-command-as-another-user）" class="headerlink" title="2 sudo（execute a command as another user）"></a>2 sudo（execute a command as another user）</h3><h4 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h4><ol>
<li><code>sudo</code> 是一种权限管理机制</li>
<li>管理员可以授权普通用户以其它身份执行一些命令</li>
</ol>
<h4 id="2-授权方式"><a href="#2-授权方式" class="headerlink" title="2 授权方式"></a>2 授权方式</h4><ol>
<li><code>/etc/sudoers</code><ul>
<li>直接修改此配置文件</li>
</ul>
</li>
<li><code>visudo</code><ul>
<li>等效于 <code>vim /etc/sudoers</code>，有语法检查（推荐）</li>
</ul>
</li>
</ol>
<h4 id="3-配置"><a href="#3-配置" class="headerlink" title="3 配置"></a>3 配置</h4><ul>
<li><code>/etc/sudoers</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1 语法</span><br><span class="line">授权的`用户`  主机地址=(可使用的身份 授权命令绝对路径列表</span><br><span class="line">授权的`%组` 主机地址=(可使用的身份 授权命令绝对路径列表</span><br><span class="line"># 2 例子</span><br><span class="line">root	ALL=(ALL)	ALL --- 表示root用户可以在任意主机上以任意身份执行任意命令</span><br><span class="line">an3	ALL=(ALL)	/usr/bin/cat, /usr/bin/less --- 表示an3用户可以在任意主机上以任意身份执行cat和less</span><br><span class="line">an3	ALL=(ALL)	 /usr/sbin/*, !/usr/sbin/visudo --- 表示 an3 用户可以在任意主机上以任意身份执行 /usr/sbin/ 下的所有命令，但排除 visudo 命令</span><br><span class="line">an3	ALL=(ALL)	NOPASSWD: /usr/sbin/*, !/usr/sbin/visudo --- NOPASSWD：表示在使用sudo执行命令时不需要输入密码</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="4-使用"><a href="#4-使用" class="headerlink" title="4 使用"></a>4 使用</h4><ol>
<li><code>sudo -l</code><ul>
<li>查看当前用户 sudo 可用的命令</li>
</ul>
</li>
<li><code>sudo command</code><ul>
<li>以管理员身份执行命令</li>
</ul>
</li>
</ol>
<h1 id="四-用户组管理"><a href="#四-用户组管理" class="headerlink" title="四 用户组管理"></a>四 用户组管理</h1><h2 id="4-1-groupadd（create-a-new-group）"><a href="#4-1-groupadd（create-a-new-group）" class="headerlink" title="4.1 groupadd（create a new group）"></a>4.1 groupadd（create a new group）</h2><ul>
<li><code>groupadd [OPTION] GROUP</code><ul>
<li>创建用户组</li>
<li><code>OPTION</code><ul>
<li><code>-g, --gid GID</code><ul>
<li>指定gid</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-2-groupdel（delete-a-group）"><a href="#4-2-groupdel（delete-a-group）" class="headerlink" title="4.2 groupdel（delete a group）"></a>4.2 groupdel（delete a group）</h2><ul>
<li><code>groupdel GROUP</code><ul>
<li>删除组</li>
<li>如果组是某个用户的初始组，则不能删除</li>
</ul>
</li>
</ul>
<h2 id="4-3-groupmod"><a href="#4-3-groupmod" class="headerlink" title="4.3 groupmod"></a>4.3 groupmod</h2><ul>
<li><code>groupmod [OPTION] GROUP</code><ul>
<li>修改组</li>
<li><code>-g GID</code><ul>
<li>修改gid</li>
</ul>
</li>
<li><code>-n NEW_NAME</code><ul>
<li>修改组名</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-4-gpasswd"><a href="#4-4-gpasswd" class="headerlink" title="4.4 gpasswd"></a>4.4 gpasswd</h2><ul>
<li><code>gpasswd [OPTION] GROUP</code><ul>
<li><code>-A USER</code><ul>
<li>将用户设置为组管理员</li>
</ul>
</li>
<li><code>-a, --add USER</code><ul>
<li>把用户加入组</li>
</ul>
</li>
<li><code>-d --delete USER</code><ul>
<li>把用户从组中删除</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 服务</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="一-防火墙（firewalld）"><a href="#一-防火墙（firewalld）" class="headerlink" title="一 防火墙（firewalld）"></a>一 防火墙（firewalld）</h1><h2 id="1-1-操作"><a href="#1-1-操作" class="headerlink" title="1.1 操作"></a>1.1 操作</h2><p>操作\服务名|firewalld（CentOS 7）|iptables（CentOS 6）<br>-|-<br><code>查看状态</code>|<code>systemctl status firewalld</code>|<code>/etc/init.d/iptables status</code><br><code>开启</code>|<code>systemctl start firewalld</code>|<code>/etc/init.d/iptables start</code><br><code>关闭</code>|<code>systemctl stop firewalld</code>|<code>/etc/init.d/iptables stop</code><br><code>开机启动</code>|<code>systemctl enable firewalld</code>|<code>chkconfig iptables on</code><br><code>开机不启动</code>|<code>systemctl disable firewalld</code>|<code>chkconfig iptables off</code></p>
<h2 id="1-2-配置（firewall-cmd）"><a href="#1-2-配置（firewall-cmd）" class="headerlink" title="1.2 配置（firewall-cmd）"></a>1.2 配置（firewall-cmd）</h2><ol>
<li><code>firewall-cmd --zone=public --list-ports</code><ul>
<li>查看所有已经开放的端口</li>
<li><code>--zone</code><ul>
<li>作用域</li>
</ul>
</li>
</ul>
</li>
<li><code>firewall-cmd --zone=public --query-port=端口/协议</code><ul>
<li>查看某个端口是否开放</li>
</ul>
</li>
<li><code>firewall-cmd [--permanent] --zone=public --add-port=端口/协议</code><ul>
<li>开放端口</li>
<li><code>--permanent</code><ul>
<li>永久生效，没此参数重启后失效</li>
</ul>
</li>
</ul>
</li>
<li><code>firewall-cmd [--permanent] --zone=public --remove-port=端口/协议</code><ul>
<li>删除端口</li>
</ul>
</li>
<li><code>firewall-cmd --reload</code><ul>
<li>重载防火墙规则</li>
</ul>
</li>
</ol>
<h1 id="二-远程连接服务（sshd）"><a href="#二-远程连接服务（sshd）" class="headerlink" title="二 远程连接服务（sshd）"></a>二 远程连接服务（sshd）</h1><h2 id="2-1-SSH（Secure-Shell-Protocol）"><a href="#2-1-SSH（Secure-Shell-Protocol）" class="headerlink" title="2.1 SSH（Secure Shell Protocol）"></a>2.1 SSH（Secure Shell Protocol）</h2><ol>
<li><code>SSH</code> 加密传输，安全</li>
<li><code>Telnet</code> 明文传输，不安全</li>
<li><code>openssh</code><ul>
<li>服务端软件，ssh 协议的开源实现，CentOS默认安装</li>
</ul>
</li>
<li><code>openssl</code><ul>
<li>连接和传输过程中加密软件</li>
</ul>
</li>
</ol>
<h2 id="2-2-连接方式"><a href="#2-2-连接方式" class="headerlink" title="2.2 连接方式"></a>2.2 连接方式</h2><h3 id="1-基于密码的远程连接"><a href="#1-基于密码的远程连接" class="headerlink" title="1 基于密码的远程连接"></a>1 基于密码的远程连接</h3><ol>
<li>公钥和私钥只用来完成数据加密</li>
<li>服务器发送公钥给客户端</li>
<li>客户端使用公钥对密码加密后回传给服务器，服务器解密验证密码</li>
</ol>
<h3 id="2-基于密钥的远程连接"><a href="#2-基于密钥的远程连接" class="headerlink" title="2 基于密钥的远程连接"></a>2 基于密钥的远程连接</h3><ol>
<li>在客户端创建密钥对<ul>
<li><code>ssh-keygen -t rsa</code><ul>
<li><code>-t</code><ul>
<li>指定密钥加密类型</li>
</ul>
</li>
<li>命令会在 <code>~/.ssh/</code> 生成三个文件<ul>
<li><code>id_rsa</code><ul>
<li>私钥</li>
</ul>
</li>
<li><code>id_rsa.pub</code><ul>
<li>公钥</li>
</ul>
</li>
<li><code>known hosts</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>客户端把公钥发送给服务端<ol>
<li><code>ssh-copy-id -i 公钥路径 目标IP</code></li>
<li>手动上传</li>
</ol>
</li>
<li>服务端将公钥存在 <code>~/.ssh/authorized_keys</code> 权限 <code>600</code></li>
</ol>
<h2 id="2-3-配置文件"><a href="#2-3-配置文件" class="headerlink" title="2.3 配置文件"></a>2.3 配置文件</h2><ol>
<li><code>/etc/ssh/ssh_config</code>（客户端配置文件）</li>
<li><code>/etc/ssh/sshd_config</code>（服务端配置文件）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 17 #Port 22 # 配置端口 默认22</span><br><span class="line"> 19 #ListenAddress 0.0.0.0 # 指定的网卡才能够接收远程访问请求，默认所有网卡都可以接收</span><br><span class="line"></span><br><span class="line"> 22 HostKey /etc/ssh/ssh_host_rsa_key # 私钥位置</span><br><span class="line"> 23 #HostKey /etc/ssh/ssh_host_dsa_key</span><br><span class="line"> 24 HostKey /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line"> 25 HostKey /etc/ssh/ssh_host_ed25519_key</span><br><span class="line"></span><br><span class="line"> 32 SyslogFacility AUTHPRIV # 日志记录ssh登录信息</span><br><span class="line"> 33 #LogLevel INFO # 日志等级</span><br><span class="line"></span><br><span class="line"> 38 #PermitRootLogin yes # 是否允许root远程连接</span><br><span class="line"> 43 #PubkeyAuthentication yes # 是否开启公钥验证</span><br><span class="line"> 47 AuthorizedKeysFile  .ssh/authorized_keys # 公钥位置</span><br><span class="line"> 65 PasswordAuthentication yes # 是否允许基于密码远程连接</span><br><span class="line"> 64 #PermitEmptyPasswords no  # 是否允许空密码用户远程连接</span><br><span class="line"> 79 GSSAPIAuthentication yes # GSSAPI认证是否开启（关闭）</span><br><span class="line">116 #UseDNS yes # 是否开启反向DNS解析功能（关闭）</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="2-4-SSH-相关命令"><a href="#2-4-SSH-相关命令" class="headerlink" title="2.4 SSH 相关命令"></a>2.4 SSH 相关命令</h2><ol>
<li><code>ssh [-p port] [USER@]remote</code><ul>
<li>连接</li>
</ul>
</li>
<li><code>ssh-keygen</code><ul>
<li>用于生成密钥对</li>
</ul>
</li>
<li><code>ssh-copy-id</code><ul>
<li>用于复制公钥到服务器</li>
</ul>
</li>
</ol>
<h1 id="三-网络服务（network）"><a href="#三-网络服务（network）" class="headerlink" title="三 网络服务（network）"></a>三 网络服务（network）</h1>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 系统管理</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="一-Systemd"><a href="#一-Systemd" class="headerlink" title="一 Systemd"></a>一 Systemd</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h2><ol>
<li>Systemd 是一系列工具的集合，用于取代System V初始进程</li>
<li>Systemd 可以管理所有系统资源，不同的资源统称为 Unit（单位）</li>
<li>Systemd 取代 init 成为系统中 PID 值为 1 的进程</li>
</ol>
<h2 id="1-2-命令"><a href="#1-2-命令" class="headerlink" title="1.2 命令"></a>1.2 命令</h2><h3 id="1-systemctl"><a href="#1-systemctl" class="headerlink" title="1 systemctl"></a>1 systemctl</h3><ul>
<li>Systemd 的主命令，用于管理系统</li>
</ul>
<h3 id="2-systemd-analyze"><a href="#2-systemd-analyze" class="headerlink" title="2 systemd-analyze"></a>2 systemd-analyze</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>systemd-analyze</code></td>
<td>查看启动耗时</td>
</tr>
<tr>
<td><code>systemd-analyze blame</code></td>
<td>查看每个服务的启动耗时</td>
</tr>
</tbody></table>
<h3 id="3-hostnamectl"><a href="#3-hostnamectl" class="headerlink" title="3 hostnamectl"></a>3 hostnamectl</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>hostnamectl</code></td>
<td>显示当前主机的信息</td>
</tr>
<tr>
<td><code>hostnamectl set-hostname xxx</code></td>
<td>设置主机名</td>
</tr>
</tbody></table>
<h3 id="4-localectl"><a href="#4-localectl" class="headerlink" title="4 localectl"></a>4 localectl</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>localectl</code></td>
<td>查看本地化设置</td>
</tr>
<tr>
<td><code>localectl set-locale en_US.UTF-8</code></td>
<td>设置字符集</td>
</tr>
<tr>
<td><code>localectl set-keymap us</code></td>
<td>设置键盘映射</td>
</tr>
<tr>
<td><code>localectl set-layout us</code></td>
<td>设置 x11 布局</td>
</tr>
</tbody></table>
<h3 id="5-timedatectl"><a href="#5-timedatectl" class="headerlink" title="5 timedatectl"></a>5 timedatectl</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>timedatectl</code></td>
<td>查看时间及时区信息</td>
</tr>
<tr>
<td><code>timedatectl list-timezones</code></td>
<td>显示所有可用的时区</td>
</tr>
<tr>
<td><code>timedatectl set-timezone Asia/Shanghai</code></td>
<td>设置时区</td>
</tr>
</tbody></table>
<h3 id="6-loginctl"><a href="#6-loginctl" class="headerlink" title="6 loginctl"></a>6 loginctl</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>loginctl list-sessions</code></td>
<td>显示当前所有连接会话</td>
</tr>
<tr>
<td><code>loginctl list-users</code></td>
<td>列出当前所有登录用户</td>
</tr>
<tr>
<td><code>loginctl show-user root</code></td>
<td>显示指定用户的信息</td>
</tr>
</tbody></table>
<h3 id="7-journalctl"><a href="#7-journalctl" class="headerlink" title="7 journalctl"></a>7 journalctl</h3><ol>
<li>管理所有 Unit 的启动日志</li>
<li>日志的配置文件是 <code>/etc/systemd/journald.conf</code></li>
</ol>
<h2 id="1-3-Unit"><a href="#1-3-Unit" class="headerlink" title="1.3 Unit"></a>1.3 Unit</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h3><ul>
<li>Unit 是 Systemd 管理系统资源的基本单元，可以认为每个系统资源就是一个 Unit</li>
</ul>
<ol start="2">
<li>每一个 Unit 都有一个配置文件，告诉 Systemd 怎么启动这个 Unit </li>
<li>Systemd 默认从目录 <code>/etc/systemd/system/</code> 读取配置文件。但里面存放的大部分文件都是符号链接，指向目录 <code>/usr/lib/systemd/system/</code>，真正的配置文件存放在那个目录</li>
</ol>
<h3 id="2-分类"><a href="#2-分类" class="headerlink" title="2 分类"></a>2 分类</h3><p>类型|扩展名|说明<br>-|-<br><code>Service unit</code>|<code>.service</code>|系统服务<br><code>Target  unit</code>|<code>.target</code>|对 Unit 文件进行逻辑分组，多个 Unit 构成的一个 Target<br><code>Device unit</code>|<code>.device</code>|硬件设备<br><code>Mount unit</code>|<code>.mount</code>|文件系统挂载点，可代替<code>/etc/fstab</code><br><code>Automount  unit</code>|<code>.automount</code>|自动挂载点<br><code>Socket unit</code>|<code>.socket</code>|进程间通信的socket<br><code>Path unit</code>|<code>.path</code>|文件或路径<br><code>Scope unit</code>|<code>.scope</code>|不是由Systemd启动的外部进程<br><code>Slice unit</code>|<code>.slice</code>|进程组<br><code>Snapshot unit</code>|<code>.snapshot</code>|Systemd快照，可以切回某个快照<br><code>Swap unit</code>|<code>.swap</code>|swap 文件<br><code>Timer unit</code>|<code>.timer</code>|定时器</p>
<h3 id="3-Unit-状态"><a href="#3-Unit-状态" class="headerlink" title="3 Unit 状态"></a>3 Unit 状态</h3><h4 id="1-Loaded（下次开机启动状态）"><a href="#1-Loaded（下次开机启动状态）" class="headerlink" title="1 Loaded（下次开机启动状态）"></a>1 Loaded（下次开机启动状态）</h4><table>
<thead>
<tr>
<th>状态</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>enabled</code></td>
<td>开机启动</td>
</tr>
<tr>
<td><code>disabled</code></td>
<td>开机不启动</td>
</tr>
<tr>
<td><code>static</code></td>
<td>不能自己启动，但有可能作为依赖被其它 <code>enabled</code> 服务启动</td>
</tr>
<tr>
<td><code>mask</code></td>
<td>禁止启动</td>
</tr>
</tbody></table>
<h4 id="2-Active（当前状态）"><a href="#2-Active（当前状态）" class="headerlink" title="2 Active（当前状态）"></a>2 Active（当前状态）</h4><table>
<thead>
<tr>
<th>状态</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>active（running）</code></td>
<td>持续运行</td>
</tr>
<tr>
<td><code>active（exited）</code></td>
<td>仅执行一次就正常结束的服务</td>
</tr>
<tr>
<td><code>active（waiting）</code></td>
<td>运行中，但要等待其它事件</td>
</tr>
<tr>
<td><code>inactive</code></td>
<td>没有运行</td>
</tr>
</tbody></table>
<h3 id="4-Unit-管理"><a href="#4-Unit-管理" class="headerlink" title="4 Unit 管理"></a>4 Unit 管理</h3><h4 id="1-查"><a href="#1-查" class="headerlink" title="1 查"></a>1 查</h4><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>systemctl list-units</code></td>
<td>显示所有正在运行的 Unit</td>
</tr>
<tr>
<td><code>systemctl list-units --all</code></td>
<td>显示所有Unit，包括没有找到配置文件的或者启动失败的</td>
</tr>
<tr>
<td><code>systemctl list-units --all --state=inactive</code></td>
<td>显示所有没有运行的 Unit</td>
</tr>
<tr>
<td><code>systemctl list-units --failed</code></td>
<td>显示所有加载失败的 Unit</td>
</tr>
<tr>
<td><code>systemctl list-units --type=service</code></td>
<td>显示所有正在运行的、类型为 service 的 Unit</td>
</tr>
<tr>
<td><code>systemctl list-unit-files</code></td>
<td>显示所有配置文件</td>
</tr>
<tr>
<td><code>systemctl list-unit-files --type=service</code></td>
<td>显示指定类型的配置文件</td>
</tr>
</tbody></table>
<h4 id="2-依赖关系"><a href="#2-依赖关系" class="headerlink" title="2 依赖关系"></a>2 依赖关系</h4><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>systemctl list-dependencies name.service</code></td>
<td>显示某个 Unit 的所有依赖</td>
</tr>
<tr>
<td><code>systemctl list-dependencies -all name.service</code></td>
<td>展开显示某个 Unit 的所有依赖</td>
</tr>
</tbody></table>
<h4 id="3-常用操作（以-service-为例）"><a href="#3-常用操作（以-service-为例）" class="headerlink" title="3 常用操作（以 service 为例）"></a>3 常用操作（以 service 为例）</h4><table>
<thead>
<tr>
<th>操作\版本</th>
<th>CentOS 7</th>
<th>CentOS 6</th>
</tr>
</thead>
<tbody><tr>
<td>启动服务</td>
<td><code>systemctl start name.service</code></td>
<td><code>service name start</code></td>
</tr>
<tr>
<td>关闭服务</td>
<td><code>systemctl stop name.service</code></td>
<td><code>service name stop</code></td>
</tr>
<tr>
<td>重启服务</td>
<td><code>systemctl restart name.service</code></td>
<td><code>service name restart</code></td>
</tr>
<tr>
<td>查看服务状态</td>
<td><code>systemctl status name.service</code></td>
<td><code>service name status</code></td>
</tr>
<tr>
<td>开机启动</td>
<td><code>systemctl enable name.service</code></td>
<td><code>chkconfig name on</code></td>
</tr>
<tr>
<td>开机不启动</td>
<td><code>systemctl disable name.service</code></td>
<td><code>chkconfig name off</code></td>
</tr>
<tr>
<td>是否启动</td>
<td><code>systemctl is-active name.service</code></td>
<td></td>
</tr>
<tr>
<td>是否开机启动</td>
<td><code>systemctl is-enabled name.service</code></td>
<td></td>
</tr>
<tr>
<td>重载某个配置文件</td>
<td><code>systemctl reload name.service</code></td>
<td></td>
</tr>
<tr>
<td>重载所有修改过的配置文件</td>
<td><code>systemctl daemon-reload</code></td>
<td></td>
</tr>
<tr>
<td>杀死服务所有子进程</td>
<td><code>systemctl kill name.service</code></td>
<td></td>
</tr>
</tbody></table>
<h2 id="1-4-Target"><a href="#1-4-Target" class="headerlink" title="1.4 Target"></a>1.4 Target</h2><h3 id="1-概述-1"><a href="#1-概述-1" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>启动系统时，需要启动大量的 Unit，非常不方便</li>
<li>Target 就是一个 Unit 组，包含许多相关的 Unit 。启动某个 Target 的时候，Systemd 就会启动里面所有的 Unit</li>
<li>System V 启动模式的 Runlevel 与 Target 作用类似，不同的是，RunLevel 是互斥的，不可能多个 RunLevel 同时启动，但是多个 Target 可以同时启动</li>
</ol>
<h3 id="2-运行级别-amp-Target"><a href="#2-运行级别-amp-Target" class="headerlink" title="2 运行级别 &amp; Target"></a>2 运行级别 &amp; Target</h3><p>CentOS 6|CentOS 7| 说明<br>—|—<br><code>Runlevel 0</code> | <code>runlevel0.target  -&gt;  poweroff.target</code>|关机模式，系统默认运行级别不能设置为0，否则不能正常启动<br><code>Runlevel 1</code> | <code>runlevel1.target  -&gt;  rescue.target</code>|单用户模式，root权限，用于系统维护，修改root密码等等，禁止远程登陆<br><code>Runlevel 2</code> |<code>runlevel2.target  -&gt;  multi-user.target</code>|多用户模式（没有NFS），没有网络<br><code>Runlevel 3</code> |<code>runlevel3.target  -&gt;  multi-user.target</code>|完全的多用户模式(有NFS)，登陆后进入控制台命令行模式<br><code>Runlevel 4</code> |<code>runlevel4.target  -&gt;  multi-user.target</code>|系统未使用，保留<br><code>Runlevel 5</code> |<code>runlevel5.target  -&gt;  graphical.target</code>|X11控制台，登陆后进入图形GUI模式<br><code>Runlevel 6</code> |<code>runlevel6.target  -&gt;  reboot.target</code>|重启模式，默认运行级别不能设为6，否则不能正常启动<br><code>emergency</code>|<code>emergency.target</code>|急救模式</p>
<h3 id="3-查看-修改默认运行级别"><a href="#3-查看-修改默认运行级别" class="headerlink" title="3 查看/修改默认运行级别"></a>3 查看/修改默认运行级别</h3><table>
<thead>
<tr>
<th>操作/版本</th>
<th>CentOS 6</th>
<th>CentOS 7</th>
</tr>
</thead>
<tbody><tr>
<td>查看</td>
<td><code>runlevel</code></td>
<td><code>systemctl get-default</code></td>
</tr>
<tr>
<td>修改</td>
<td><code>/etc/inittab</code></td>
<td><code>systemctl set-default name.target</code></td>
</tr>
</tbody></table>
<h3 id="4-切换运行级别"><a href="#4-切换运行级别" class="headerlink" title="4 切换运行级别"></a>4 切换运行级别</h3><table>
<thead>
<tr>
<th>CentOS 6</th>
<th>CentOS 7</th>
</tr>
</thead>
<tbody><tr>
<td><code>init 0</code></td>
<td><code>systemctl poweroff</code></td>
</tr>
<tr>
<td><code>init 1</code></td>
<td><code>systemctl  isolate rescue.target</code></td>
</tr>
<tr>
<td><code>init 2/3/4</code></td>
<td><code>systemctl  isolate  multi-user.target</code></td>
</tr>
<tr>
<td><code>init 5</code></td>
<td><code>systemctl  isolate graphical.target</code></td>
</tr>
<tr>
<td><code>init 6</code></td>
<td><code>systemctl  reboot</code></td>
</tr>
<tr>
<td>* <code>isolate</code></td>
<td></td>
</tr>
<tr>
<td>1. 切换 Target 时，默认不关闭前一个 Target 启动的进程</td>
<td></td>
</tr>
<tr>
<td>2. 加上 <code>isolate</code> 会关闭前一个 Target 里面所有不属于后一个 Target 的进程</td>
<td></td>
</tr>
</tbody></table>
<h1 id="二-启动流程"><a href="#二-启动流程" class="headerlink" title="二 启动流程"></a>二 启动流程</h1><h2 id="2-1-CentOS-6-启动流程"><a href="#2-1-CentOS-6-启动流程" class="headerlink" title="2.1 CentOS 6 启动流程"></a>2.1 CentOS 6 启动流程</h2><p>![](<a href="https://gitee.com/3noanswer/npics/raw/master/Linux/CentOS6" target="_blank" rel="noopener">https://gitee.com/3noanswer/npics/raw/master/Linux/CentOS6</a> 启动流程.png)</p>
<h3 id="1-POST（Power-On-Self-Test）"><a href="#1-POST（Power-On-Self-Test）" class="headerlink" title="1 POST（Power-On-Self-Test）"></a>1 POST（Power-On-Self-Test）</h3><ol>
<li>加电自检，是BIOS功能的一个主要部分，负责完成硬件情况的检测</li>
<li>自检后根据设置获取第一个开机引导设备，如：光驱，硬盘，网络，USB</li>
</ol>
<ul>
<li>BIOS（Basic Input Output System）<ul>
<li>它是一组固化到计算机主板一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、开机后自检程序和系统自启动程序，它可从CMOS中读写系统设置的具体信息。 其主要功能是为计算机提供最底层的、最直接的硬件设置和控制</li>
</ul>
</li>
</ul>
<h3 id="2-MBR（Master-Boot-Record）"><a href="#2-MBR（Master-Boot-Record）" class="headerlink" title="2 MBR（Master Boot Record）"></a>2 MBR（Master Boot Record）</h3><ul>
<li>主引导记录，存储于磁盘的 0 柱面 0 磁道 1 扇区，大小为 512 byte<ol>
<li><code>446 byte</code><ul>
<li>BootLoader（GRUB）</li>
</ul>
</li>
<li><code>64 byte</code><ul>
<li>分区表</li>
</ul>
</li>
<li><code>2 byte</code><ul>
<li>55AA（用于MBR的有效性检查）</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="3-GRUB（GRand-Unified-Bootloader）"><a href="#3-GRUB（GRand-Unified-Bootloader）" class="headerlink" title="3 GRUB（GRand Unified Bootloader）"></a>3 GRUB（GRand Unified Bootloader）</h3><ol>
<li>是一个来自GNU项目的多操作系统启动程序，分为两个阶段<ol>
<li>第一阶段，MBR的前446 byte</li>
<li>1.5 阶段</li>
<li>第二阶段 <code>/boot/grub</code></li>
</ol>
</li>
<li><code>BootLoader</code><ul>
<li>提供菜单，允许用户选择不同的内核版本，然后将内核装载到内存的特定空间中，解压，展开，并把系统控制权移交给内核</li>
</ul>
</li>
</ol>
<h3 id="4-加载内核（Kernel）"><a href="#4-加载内核（Kernel）" class="headerlink" title="4 加载内核（Kernel）"></a>4 加载内核（Kernel）</h3><ul>
<li>Kernel 会开始侦测硬件并加载驱动程序</li>
</ul>
<h3 id="5-启动系统第一个进程-init"><a href="#5-启动系统第一个进程-init" class="headerlink" title="5 启动系统第一个进程 init"></a>5 启动系统第一个进程 init</h3><ul>
<li>init 进程控制后续各种服务的启动，init 是按照配置顺序启动服务（串行）<ul>
<li><code># chkconfig: 2345 10 90</code><ul>
<li>表示此服务可以在 Runlevel 2345 下启动，启动顺序为 10，关闭顺序为 90</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="6-获取系统运行级别"><a href="#6-获取系统运行级别" class="headerlink" title="6 获取系统运行级别"></a>6 获取系统运行级别</h3><ul>
<li>init 读取<code>/etc/inittab</code>配置文件， 获取系统默认运行级别</li>
</ul>
<h3 id="7-系统初始化"><a href="#7-系统初始化" class="headerlink" title="7 系统初始化"></a>7 系统初始化</h3><ul>
<li>init 执行 <code>/etc/rc.d/rc.sysinit</code> 脚本来进行系统初始化，准备软件执行的作业环境 (如网络、时区等)</li>
</ul>
<h3 id="8-启动服务"><a href="#8-启动服务" class="headerlink" title="8 启动服务"></a>8 启动服务</h3><ul>
<li>init 执行系统运行级别对应的脚本，如 <code>/etc/rc.d/rc3.d</code>，及 <code>/etc/rc3.d/*</code> 下所有脚本</li>
</ul>
<h3 id="9-开机自启动程序"><a href="#9-开机自启动程序" class="headerlink" title="9 开机自启动程序"></a>9 开机自启动程序</h3><ul>
<li>init 执行 <code>/etc/rc.d/rc.local</code> 脚本</li>
</ul>
<h3 id="10-登录界面"><a href="#10-登录界面" class="headerlink" title="10 登录界面"></a>10 登录界面</h3><ul>
<li>运行 mingetty 进程，进入登录界面</li>
</ul>
<h2 id="2-2-CentOS-7-启动流程"><a href="#2-2-CentOS-7-启动流程" class="headerlink" title="2.2 CentOS 7 启动流程"></a>2.2 CentOS 7 启动流程</h2><p>![](<a href="https://gitee.com/3noanswer/npics/raw/master/Linux/CentOS7" target="_blank" rel="noopener">https://gitee.com/3noanswer/npics/raw/master/Linux/CentOS7</a> 启动流程.png)</p>
<h1 id="三-进程"><a href="#三-进程" class="headerlink" title="三 进程"></a>三 进程</h1><h2 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h2><ul>
<li>进程是已启动的可执行程序的运行实例，有以下组成部分：<ol>
<li>已分配内存的地址空间；</li>
<li>安全属性，包括所有权凭据和特权；</li>
<li>程序代码的一个或多个执行线程；</li>
<li>进程状态</li>
</ol>
</li>
</ul>
<h2 id="3-2-守护进程（Daemon）"><a href="#3-2-守护进程（Daemon）" class="headerlink" title="3.2 守护进程（Daemon）"></a>3.2 守护进程（Daemon）</h2><ol>
<li>Linux服务器的主要任务就是为本地或远程用户提供各种服务</li>
<li>Linux系统上提供服务的程序通常是守护进程</li>
<li>守护进程一直在系统后台运行，时刻地监听用户的服务请求，一旦用户发出了服务请求，守护进程便为它们提供服务</li>
</ol>
<h2 id="3-3-系统初始化进程"><a href="#3-3-系统初始化进程" class="headerlink" title="3.3 系统初始化进程"></a>3.3 系统初始化进程</h2><ol>
<li>系统初始化进程是一个特殊的的守护进程，其PID为1</li>
<li>是其他守护进程的父进程或者祖先进程，系统上所有的守护进程都是由系统初始化进程进行管理的（如启动、停止等）</li>
<li>在Linux的发展历史过程中，使用过3种初始化进程<ol>
<li><code>init</code></li>
<li><code>upstart</code></li>
<li><code>systemd</code></li>
</ol>
</li>
</ol>
<h2 id="3-4-进程状态"><a href="#3-4-进程状态" class="headerlink" title="3.4 进程状态"></a>3.4 进程状态</h2><table>
<thead>
<tr>
<th>状态</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>R（运行）</code></td>
<td>进程正在运行或在运行队列中等待</td>
</tr>
<tr>
<td><code>S（休眠）</code></td>
<td>可中断睡眠状态，可以被唤醒</td>
</tr>
<tr>
<td><code>D（不可中断）</code></td>
<td>不可中断睡眠状态，通常用于 I/O 情况</td>
</tr>
<tr>
<td><code>Z（僵死）</code></td>
<td>子进程退出，父进程还在运行，但是父进程没有读到子进程的退出状态，子进程进入僵死状态</td>
</tr>
<tr>
<td><code>T（暂停）</code></td>
<td>进程收到停止信号SIGSTOP后停止运行，可以发送SIGCONT信号让进程继续运行</td>
</tr>
<tr>
<td><code>X（死亡）</code></td>
<td>该状态是返回状态，在任务列表中看不到</td>
</tr>
<tr>
<td><code>t（追踪）</code></td>
<td>当利用gdb调试某个程序，程序停留在某个断点处时，就处于跟踪状态</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>状态组合符号</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>s</code></td>
<td>表示进程是控制进程</td>
</tr>
<tr>
<td><code>&lt;</code></td>
<td>表示进程运行在高优先级上</td>
</tr>
<tr>
<td><code>N</code></td>
<td>表示进程运行在低优先级上</td>
</tr>
<tr>
<td><code>L</code></td>
<td>表示进程有页面锁定在内存中</td>
</tr>
<tr>
<td><code>l</code></td>
<td>表示进程是多线程的</td>
</tr>
<tr>
<td><code>+</code></td>
<td>表示进程运行在前台</td>
</tr>
</tbody></table>
<h2 id="3-5-查看进程"><a href="#3-5-查看进程" class="headerlink" title="3.5 查看进程"></a>3.5 查看进程</h2><h3 id="1-ps"><a href="#1-ps" class="headerlink" title="1 ps"></a>1 ps</h3><h4 id="1-ps-aux"><a href="#1-ps-aux" class="headerlink" title="1 ps -aux"></a>1 ps -aux</h4><table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>user</code></td>
<td>启动进程的用户</td>
</tr>
<tr>
<td><code>PID</code></td>
<td>进程ID</td>
</tr>
<tr>
<td><code>%CPU</code></td>
<td>进程占用cpu百分比</td>
</tr>
<tr>
<td><code>%MEM</code></td>
<td>进程占用内存百分比</td>
</tr>
<tr>
<td><code>VSZ</code></td>
<td>进程占用虚拟内存大小（KB）</td>
</tr>
<tr>
<td><code>RSS</code></td>
<td>进程占用物理内存大小（KB）</td>
</tr>
<tr>
<td><code>TTY</code></td>
<td>进程启动终端</td>
</tr>
<tr>
<td><code>STAT</code></td>
<td>进程状态</td>
</tr>
<tr>
<td><code>START</code></td>
<td>进程启动时间</td>
</tr>
<tr>
<td><code>TIME</code></td>
<td>进程执行起到现在总的CPU占用时间</td>
</tr>
<tr>
<td><code>COMMAND</code></td>
<td>启动进程的命令</td>
</tr>
</tbody></table>
<h4 id="2-ps-ef"><a href="#2-ps-ef" class="headerlink" title="2 ps -ef"></a>2 ps -ef</h4><table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>UID</code></td>
<td>启动进程的用户</td>
</tr>
<tr>
<td><code>PID</code></td>
<td>进程 ID</td>
</tr>
<tr>
<td><code>PPID</code></td>
<td>父进程 ID</td>
</tr>
<tr>
<td><code>C</code></td>
<td>进程生命周期中的CPU利用率</td>
</tr>
<tr>
<td><code>STIME</code></td>
<td>进程启动时间</td>
</tr>
<tr>
<td><code>TTY</code></td>
<td>进程启动终端</td>
</tr>
<tr>
<td><code>TIME</code></td>
<td>进程执行起到现在总的CPU占用时间</td>
</tr>
<tr>
<td><code>CMD</code></td>
<td>启动进程的命令</td>
</tr>
<tr>
<td>* <code>TTY</code></td>
<td></td>
</tr>
<tr>
<td>1. <code>?</code></td>
<td></td>
</tr>
<tr>
<td>* 表示与终端无关，这种进程一般是内核态进程</td>
<td></td>
</tr>
<tr>
<td>2. <code>tty1~7</code></td>
<td></td>
</tr>
<tr>
<td>* 本地终端</td>
<td></td>
</tr>
<tr>
<td>3. <code>pts/0+</code></td>
<td></td>
</tr>
<tr>
<td>* 远程终端</td>
<td></td>
</tr>
</tbody></table>
<h4 id="3-ps-le"><a href="#3-ps-le" class="headerlink" title="3 ps -le"></a>3 ps -le</h4><ul>
<li>信息更详细</li>
</ul>
<h3 id="2-pstree"><a href="#2-pstree" class="headerlink" title="2 pstree"></a>2 pstree</h3><ul>
<li><code>pstree [OPTION] [PID | USER]</code><ul>
<li>以树形结构显示程序和进程之间的关系</li>
<li><code>OPTION</code><ul>
<li><code>-a</code><ul>
<li>显示启动每个进程对应的完整指令，包括启动进程的路径、参数等</li>
</ul>
</li>
<li><code>-c</code><ul>
<li>不使用精简法显示进程信息，即显示的进程中包含子进程和父进程</li>
</ul>
</li>
<li><code>-n</code><ul>
<li>根据进程 PID 号来排序输出，默认是以程序名排序输出的</li>
</ul>
</li>
<li><code>-p</code><ul>
<li>显示进程的 PID</li>
</ul>
</li>
<li><code>-u</code><ul>
<li>显示进程对应的用户名称</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="3-lsof（list-opened-files）"><a href="#3-lsof（list-opened-files）" class="headerlink" title="3 lsof（list opened files）"></a>3 lsof（list opened files）</h3><ul>
<li><code>lsof [OPTION]</code><ul>
<li>列出进程调用或打开的文件的信息</li>
<li><code>OPTION</code><ul>
<li><code>-u 用户名</code><ul>
<li>列出某个用户的进程打开的文件</li>
</ul>
</li>
<li><code>-p pid</code><ul>
<li>列出指定进程号所打开的文件</li>
</ul>
</li>
<li><code>-c 字符串</code><ul>
<li>列出以字符串开头的进程打开的文件</li>
</ul>
</li>
<li><code>-i 条件</code><ul>
<li>列出符合条件的进程</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-6-监听进程"><a href="#3-6-监听进程" class="headerlink" title="3.6 监听进程"></a>3.6 监听进程</h2><h3 id="1-top"><a href="#1-top" class="headerlink" title="1 top"></a>1 top</h3><ul>
<li><code>top [OPTION]</code><ul>
<li><code>OPTION</code><ul>
<li><code>-d 秒数</code><ul>
<li>指定每隔几秒刷新，默认3秒</li>
</ul>
</li>
<li><code>-n 次数</code><ul>
<li>指定 top 抿了执行次数</li>
</ul>
</li>
<li><code>-b</code><ul>
<li>使用批处理模式输出。</li>
<li>一般和 <code>-n</code> 选项合用，用于把 top 命令重定向到文件中</li>
</ul>
</li>
<li><code>-p PID</code><ul>
<li>仅查看的进程</li>
</ul>
</li>
<li><code>-u USER</code><ul>
<li>只监听某个用户的进程</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-top-输出窗口交互命令"><a href="#2-top-输出窗口交互命令" class="headerlink" title="2 top 输出窗口交互命令"></a>2 top 输出窗口交互命令</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>?, h</code></td>
<td>显示交互模式的帮助</td>
</tr>
<tr>
<td><code>空格</code></td>
<td>默认 3s 刷新一次，按空格立即刷新</td>
</tr>
<tr>
<td><code>P</code></td>
<td>按照 CPU 的使用率排序（默认）</td>
</tr>
<tr>
<td><code>M</code></td>
<td>按照内存的使用率排序</td>
</tr>
<tr>
<td><code>N</code></td>
<td>按照 PID 排序</td>
</tr>
<tr>
<td><code>T</code></td>
<td>按照 CPU 的累积运算时间排序，即按照 <code>TIME+</code> 项排序</td>
</tr>
<tr>
<td><code>q</code></td>
<td>退出 top 命令</td>
</tr>
</tbody></table>
<h3 id="3-top-输出信息"><a href="#3-top-输出信息" class="headerlink" title="3 top 输出信息"></a>3 top 输出信息</h3><h4 id="第一行（任务队列信息）"><a href="#第一行（任务队列信息）" class="headerlink" title="第一行（任务队列信息）"></a>第一行（任务队列信息）</h4><ul>
<li><code>系统当前时间，系统运行时间，登录用户数，CPU负载</code></li>
</ul>
<h4 id="第二行（进程信息）"><a href="#第二行（进程信息）" class="headerlink" title="第二行（进程信息）"></a>第二行（进程信息）</h4><ul>
<li><code>系统进程总数，运行进程数，睡眠进程数，停止进程数，僵尸进程数</code></li>
</ul>
<h4 id="第三行（CPU-信息）"><a href="#第三行（CPU-信息）" class="headerlink" title="第三行（CPU 信息）"></a>第三行（CPU 信息）</h4><table>
<thead>
<tr>
<th>内容</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>us</code></td>
<td>用户模式占用的 CPU 百分比</td>
</tr>
<tr>
<td><code>sy</code></td>
<td>系统模式占用的 CPU 百分比</td>
</tr>
<tr>
<td><code>ni</code></td>
<td>改变过优先级的用户进程占用的 CPU 百分比</td>
</tr>
<tr>
<td><code>id</code></td>
<td>空闲 CPU 占用的 CPU 百分比</td>
</tr>
<tr>
<td><code>wa</code></td>
<td>等待输入/输出的进程占用的 CPU 百分比</td>
</tr>
<tr>
<td><code>hi</code></td>
<td>硬中断请求服务占用的 CPU 百分比</td>
</tr>
<tr>
<td><code>si</code></td>
<td>软中断请求服务占用的 CPU 百分比</td>
</tr>
<tr>
<td><code>st</code></td>
<td>虚拟时间百分比，就是当有虚拟机时，虚拟 CPU 等待实际 CPU 的时间百分比</td>
</tr>
</tbody></table>
<h4 id="第四行（物理内存信息-Mem）"><a href="#第四行（物理内存信息-Mem）" class="headerlink" title="第四行（物理内存信息 Mem）"></a>第四行（物理内存信息 Mem）</h4><table>
<thead>
<tr>
<th>内容</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>total</code></td>
<td>物理内存的总量</td>
</tr>
<tr>
<td><code>free</code></td>
<td>空闲的物理内存数量</td>
</tr>
<tr>
<td><code>used</code></td>
<td>己经使用的物理内存数量</td>
</tr>
<tr>
<td><code>buff/cache</code></td>
<td>作为缓冲/缓存的内存数量</td>
</tr>
</tbody></table>
<h4 id="第五行（交互分区信息-Swap）"><a href="#第五行（交互分区信息-Swap）" class="headerlink" title="第五行（交互分区信息 Swap）"></a>第五行（交互分区信息 Swap）</h4><table>
<thead>
<tr>
<th>内容</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>total</code></td>
<td>交换分区（虚拟内存）的总大小</td>
</tr>
<tr>
<td><code>free</code></td>
<td>空闲交换分区的大小</td>
</tr>
<tr>
<td><code>used</code></td>
<td>已经使用的交换分区的大小</td>
</tr>
<tr>
<td><code>avail Mem</code></td>
<td>总的可利用内存是多少</td>
</tr>
</tbody></table>
<h4 id="剩余部分（进程信息）"><a href="#剩余部分（进程信息）" class="headerlink" title="剩余部分（进程信息）"></a>剩余部分（进程信息）</h4><table>
<thead>
<tr>
<th>内容</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>PID</code></td>
<td>进程的 ID</td>
</tr>
<tr>
<td><code>USER</code></td>
<td>进程所属的用户</td>
</tr>
<tr>
<td><code>PR</code></td>
<td>优先级，数值越小优先级越高（由内核动态调整，用户不能修改）</td>
</tr>
<tr>
<td><code>NI</code></td>
<td>优先级，数值越小优先级越高（用户可以自己调整）</td>
</tr>
<tr>
<td><code>VIRT</code></td>
<td>进程使用的虚拟内存的大小，单位为 KB</td>
</tr>
<tr>
<td><code>RES</code></td>
<td>进程使用的物理内存的大小，单位为 KB</td>
</tr>
<tr>
<td><code>SHR</code></td>
<td>共享内存大小，单位为 KB</td>
</tr>
<tr>
<td><code>S</code></td>
<td>进程状态</td>
</tr>
<tr>
<td><code>%CPU</code></td>
<td>进程占用 CPU 的百分比</td>
</tr>
<tr>
<td><code>%MEM</code></td>
<td>进程占用内存的百分比</td>
</tr>
<tr>
<td><code>TIME+</code></td>
<td>进程执行起到现在总的CPU占用时间</td>
</tr>
<tr>
<td><code>COMMAND</code></td>
<td>启动进程的命令</td>
</tr>
</tbody></table>
<h2 id="3-6-结束进程"><a href="#3-6-结束进程" class="headerlink" title="3.6 结束进程"></a>3.6 结束进程</h2><h3 id="1-kill"><a href="#1-kill" class="headerlink" title="1 kill"></a>1 kill</h3><h4 id="1-原理"><a href="#1-原理" class="headerlink" title="1 原理"></a>1 原理</h4><ul>
<li>kill 命令会向操作系统内核发送一个信号和目标进程的 PID，然后系统内核根据收到的信号类型，对指定进程进行相应的操作</li>
</ul>
<h4 id="2-语法"><a href="#2-语法" class="headerlink" title="2 语法"></a>2 语法</h4><ol>
<li><code>kill -l</code><ul>
<li>查看所有信号信息</li>
</ul>
</li>
<li><code>kill [信号编号] PID</code></li>
</ol>
<table>
<thead>
<tr>
<th>信号编号</th>
<th>信号名</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>1</code></td>
<td><code>SIGHUP</code></td>
<td>重启进程</td>
</tr>
<tr>
<td><code>2</code></td>
<td><code>SIGINT</code></td>
<td>非强制性结束进程，<code>ctrl + c</code> 发出的是 <code>kill -2</code> 的信号</td>
</tr>
<tr>
<td><code>9</code></td>
<td><code>SIGKILL</code></td>
<td>强制结束进程</td>
</tr>
<tr>
<td><code>15</code></td>
<td><code>SIGTERM</code></td>
<td>正常结束进程，默认信号</td>
</tr>
<tr>
<td><code>19</code></td>
<td><code>SIGSTOP</code></td>
<td>挂起一个进程，<code>ctrl + z</code> 发出的是 <code>kill -19</code> 信号</td>
</tr>
</tbody></table>
<h3 id="2-killall"><a href="#2-killall" class="headerlink" title="2 killall"></a>2 killall</h3><ul>
<li><code>killall [OPTION] [信号编号] 进程名</code><ul>
<li><code>kill</code> 命令使用 PID 结束进程，而 <code>killall</code> 使用进程名称来结束进程</li>
<li><code>OPTION</code><ul>
<li><code>-i</code><ul>
<li>交互式，询问是否要杀死某个进程</li>
</ul>
</li>
<li><code>-I</code><ul>
<li>忽略进程名的大小写</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="4-pkill"><a href="#4-pkill" class="headerlink" title="4 pkill"></a>4 pkill</h3><ol>
<li><code>pkill [OPTION] [信号编号] 进程名</code><ul>
<li>用来结束进程时，用法与 <code>killall</code> 一致</li>
</ul>
</li>
<li><code>pkill [信号编号] -t 终端号</code><ul>
<li>按照终端号踢出登陆用户</li>
</ul>
</li>
</ol>
<h1 id="四-硬件信息"><a href="#四-硬件信息" class="headerlink" title="四 硬件信息"></a>四 硬件信息</h1><h2 id="4-1-CPU"><a href="#4-1-CPU" class="headerlink" title="4.1 CPU"></a>4.1 CPU</h2><h3 id="1-CPU-信息"><a href="#1-CPU-信息" class="headerlink" title="1 CPU 信息"></a>1 CPU 信息</h3><ol>
<li>cpu 路数<ul>
<li>cpu 的物理个数</li>
</ul>
</li>
<li>cpu 核数<ul>
<li>cpu 的逻辑个数</li>
</ul>
</li>
<li>core<ul>
<li>一个物理 cpu 的核心数</li>
</ul>
</li>
<li><code>核数 = 路数 * core</code></li>
</ol>
<h3 id="2-查看-CPU-信息"><a href="#2-查看-CPU-信息" class="headerlink" title="2 查看 CPU 信息"></a>2 查看 CPU 信息</h3><ol>
<li><code>/proc/cpuinfo</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 每一核cpu信息以空行分隔</span><br><span class="line">model name:     # cpu型号</span><br><span class="line">physical id:    # cpu路数，从0开始编号</span><br><span class="line">cpu cores:      # 一路cpu的核数</span><br><span class="line">processor:      # cpu核数，从0开始编号</span><br></pre></td></tr></table></figure></li>
<li><code>lscpu</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">model name:            # cpu型号</span><br><span class="line">Socket(s):             # cpu路数，从0开始编号</span><br><span class="line">Core(s) per socket:    # 一路cpu的核数</span><br><span class="line">CPU(s):                # cpu核数，从0开始编号</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="3-CPU-负载"><a href="#3-CPU-负载" class="headerlink" title="3 CPU 负载"></a>3 CPU 负载</h3><ol>
<li>负载简单说就是 cpu 的任务量，任务队列的平均长度</li>
<li>负载值 与 cpu 核数有关，负载不应该超过核的数量</li>
<li>负载信息<ul>
<li><code>1分钟平均负载 5分钟平均负载 15分钟平均负载</code></li>
</ul>
</li>
</ol>
<h3 id="4-查看-CPU-负载"><a href="#4-查看-CPU-负载" class="headerlink" title="4 查看 CPU 负载"></a>4 查看 CPU 负载</h3><ol>
<li><code>/proc/loadavg</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.00 0.01 0.05 1/104 1445</span><br></pre></td></tr></table></figure></li>
<li><code>uptime</code><ul>
<li>显示 cpu 负载信息 <code>当前时间 系统运行时间 登录用户数 系统负载</code></li>
</ul>
</li>
<li><code>w</code><ul>
<li>显示 cpu 负载 及 登录用户信息</li>
</ul>
</li>
</ol>
<h2 id="4-2-内存"><a href="#4-2-内存" class="headerlink" title="4.2 内存"></a>4.2 内存</h2><h3 id="1-说明"><a href="#1-说明" class="headerlink" title="1 说明"></a>1 说明</h3><ol>
<li>通常 <code>空闲内存 &gt; 可用内存</code>，因为有时缓冲或缓存会空出一些内存，但是无法使用，这部分内存算在空闲内存上而不算在可用内存上<ul>
<li>空闲内存：没有使用的内存</li>
<li>可用内存：没有使用的内存中可以使用的内存</li>
</ul>
</li>
</ol>
<h3 id="2-查看内存信息"><a href="#2-查看内存信息" class="headerlink" title="2 查看内存信息"></a>2 查看内存信息</h3><ol>
<li><code>/proc/meminfo</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MemTotal:         # 总内存</span><br><span class="line">MemFree:          # 空闲内存</span><br><span class="line">MemAvailable:     # 可用内存</span><br><span class="line">Buffers:          # 缓冲</span><br><span class="line">Cached:           # 缓存</span><br><span class="line">SwapCached:       # 交换分区使用情况</span><br></pre></td></tr></table></figure></li>
<li><code>free [OPTION]</code><ul>
<li>显示内存信息</li>
<li><code>OPTION</code><ul>
<li><code>-h</code>, <code>--human</code><ul>
<li>以人类可读的方式显示信息</li>
</ul>
</li>
<li><code>-b</code>, <code>--bytes</code><ul>
<li>以 byte 为单位显示</li>
</ul>
</li>
<li><code>-k</code>, <code>--kilo</code><ul>
<li>以 kb 为单位显示，默认</li>
</ul>
</li>
<li><code>-m</code>, <code>--mega</code><ul>
<li>以 mb 为单位显示</li>
</ul>
</li>
<li><code>-g</code>, <code>--giga</code><ul>
<li>以 gb 为单位显示</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="4-3-磁盘"><a href="#4-3-磁盘" class="headerlink" title="4.3 磁盘"></a>4.3 磁盘</h2><h3 id="1-proc-mounts"><a href="#1-proc-mounts" class="headerlink" title="1 /proc/mounts"></a>1 <code>/proc/mounts</code></h3><ul>
<li>磁盘挂载信息</li>
</ul>
<h3 id="2-df"><a href="#2-df" class="headerlink" title="2 df"></a>2 df</h3><ul>
<li><code>df [OPTION] [file]</code><ul>
<li>查看磁盘信息及挂载信息</li>
<li><code>option</code><ul>
<li><code>-h</code>, <code>--human</code><ul>
<li>以人类可读的方式显示信息</li>
</ul>
</li>
<li><code>-a</code>, <code>--all</code><ul>
<li>显示所有文件系统信息</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="五-系统信息"><a href="#五-系统信息" class="headerlink" title="五 系统信息"></a>五 系统信息</h1><ol>
<li><code>/etc/reedat-release</code><ul>
<li>系统版本信息（简略）</li>
</ul>
</li>
<li><code>/etc/os-release</code><ul>
<li>系统版本信息（详细）</li>
</ul>
</li>
<li><code>uname -a</code><ul>
<li>查看系统与内核相关信息</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 目录结构</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h1 id="一-FHS"><a href="#一-FHS" class="headerlink" title="一 FHS"></a>一 FHS</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h2><ol>
<li><a href="http://www.pathname.com/fhs/" target="_blank" rel="noopener" title="官网">FHS</a></li>
<li><code>FileSystem Hierarchy Standard</code><ul>
<li>文件系统层次化标准，即目录结构规范</li>
</ul>
</li>
</ol>
<h2 id="1-2-两层规范"><a href="#1-2-两层规范" class="headerlink" title="1.2 两层规范"></a>1.2 两层规范</h2><ol>
<li><code>/</code> 目录下的各个目录应该放什么文件数据</li>
<li>针对 <code>/usr</code> 及 <code>/var</code> 这两个目录的子目录来定义</li>
</ol>
<h1 id="二-Linux目录结构"><a href="#二-Linux目录结构" class="headerlink" title="二 Linux目录结构"></a>二 Linux目录结构</h1><h2 id="2-1"><a href="#2-1" class="headerlink" title="2.1 /"></a>2.1 <code>/</code></h2><table>
<thead>
<tr>
<th>目录</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>/</code></td>
<td>根目录</td>
</tr>
<tr>
<td><code>/root</code></td>
<td>Home directory for the root user (optional)</td>
</tr>
<tr>
<td><code>/home</code></td>
<td>User home directories (optional)</td>
</tr>
<tr>
<td><code>/bin → /usr/bin</code></td>
<td>Essential command binaries</td>
</tr>
<tr>
<td><code>/sbin → /usr/sbin</code></td>
<td>Essential system binaries</td>
</tr>
<tr>
<td><code>/boot</code></td>
<td>Static files of the boot loader 是boot分区的挂载点</td>
</tr>
<tr>
<td><code>/dev</code></td>
<td>Device files</td>
</tr>
<tr>
<td><code>/etc</code></td>
<td>Host-specific system configuration</td>
</tr>
<tr>
<td><code>/media</code></td>
<td>Mount point for removeable media</td>
</tr>
<tr>
<td><code>/mnt</code></td>
<td>Mount point for mounting a filesystem temporarily</td>
</tr>
<tr>
<td><code>/tmp</code></td>
<td>Temporary files</td>
</tr>
<tr>
<td><code>/var</code></td>
<td>Variable data</td>
</tr>
<tr>
<td><code>/usr</code></td>
<td>Secondary hierarchy 系统软件和用户程序所在目录</td>
</tr>
<tr>
<td><code>/srv</code></td>
<td>Data for services provided by this system</td>
</tr>
<tr>
<td><code>/lib → /usr/lib</code></td>
<td>Essential shared libraries and kernel modules</td>
</tr>
<tr>
<td><code>/opt</code></td>
<td>Add-on application software packages</td>
</tr>
<tr>
<td><code>/proc</code></td>
<td>Kernel and process information virtual filesystem 目录中数据存在内存 重启丢失</td>
</tr>
<tr>
<td><code>/sys</code></td>
<td>虚拟文件系统，记录内核相关信息，不占磁盘空间</td>
</tr>
<tr>
<td><code>/run</code></td>
<td>正在运行的进程相关信息的文件</td>
</tr>
<tr>
<td><code>lost + found</code></td>
<td>磁盘、文件系统损坏 断电 临时存放文件</td>
</tr>
</tbody></table>
<h2 id="2-2-usr"><a href="#2-2-usr" class="headerlink" title="2.2 /usr"></a>2.2 <code>/usr</code></h2><ol>
<li>最初linux只有一个盘，此盘挂载在 <code>/</code> 目录</li>
<li>后来一个盘不够用，又加了一个盘，第二个盘挂载在<code>/usr</code>目录，并且规定：<ol>
<li>第一块盘用来存放系统程序相关</li>
<li>第二块盘用来存放用户自己程序相关。</li>
</ol>
</li>
<li><code>/</code> 和 <code>/usr</code> 目录结构完全相同</li>
</ol>
<table>
<thead>
<tr>
<th>目录</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>/usr/locl</code></td>
<td>源码编译安装软件的默认路径</td>
</tr>
<tr>
<td><code>/usr/src</code></td>
<td>存放源码的目录</td>
</tr>
<tr>
<td><code>/usr/share</code></td>
<td>帮助与说明文件，也可放置共享文件</td>
</tr>
</tbody></table>
<h2 id="2-3-var-log"><a href="#2-3-var-log" class="headerlink" title="2.3 /var/log"></a>2.3 <code>/var/log</code></h2><table>
<thead>
<tr>
<th>文件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>/var/log/messages</code></td>
<td>记录系统或服务运行的状态信息 和 错误信息</td>
</tr>
<tr>
<td><code>/var/log/secure</code></td>
<td>记录用户登录信息</td>
</tr>
<tr>
<td><code>/var/log/dmesg</code></td>
<td>记录了系统在开机时内核自检的信息（硬件加载）</td>
</tr>
<tr>
<td><code>/var/log/cron</code></td>
<td>记录了系统定时任务信息</td>
</tr>
</tbody></table>
<h2 id="2-4-etc"><a href="#2-4-etc" class="headerlink" title="2.4 /etc"></a>2.4 <code>/etc</code></h2><table>
<thead>
<tr>
<th>目录</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>/etc/sysconfig/network-scripts/ifcfg-ens33</code></td>
<td>网卡配置文件</td>
</tr>
<tr>
<td><code>/etc/resolv.conf</code></td>
<td>DNS客户端配置文件</td>
</tr>
<tr>
<td><code>/etc/hosts</code></td>
<td>系统本地的DNS解析文件</td>
</tr>
<tr>
<td><code>/etc/hostname</code></td>
<td>主机名配置文件</td>
</tr>
<tr>
<td><code>/etc/fstab</code></td>
<td>开机设备自动挂载配置文件</td>
</tr>
<tr>
<td><code>/etc/rc.local -&gt; /etc/rc.d/rc.local</code></td>
<td>开启自启动程序配置文件</td>
</tr>
<tr>
<td><code>/etc/bashrc</code> <code>/etc/profile</code></td>
<td>系统环境变量、别名等配置文件</td>
</tr>
<tr>
<td><code>/etc/init.d</code></td>
<td>软件启动程序所在目录（CentOS 6）</td>
</tr>
<tr>
<td><code>/etc/ininttab</code></td>
<td>系统运行级别配置文件（CentOS 6）</td>
</tr>
<tr>
<td><code>/etc/profile.d</code></td>
<td>用户登录后执行的脚本所在目录</td>
</tr>
<tr>
<td><code>/etc/issue</code></td>
<td>本地终端登录前欢迎信息</td>
</tr>
<tr>
<td><code>/etc/issue.net</code></td>
<td>远程终端登录前欢迎信息</td>
</tr>
<tr>
<td><code>/etc/motd</code></td>
<td>本地及远程登陆后欢迎信息</td>
</tr>
<tr>
<td><code>/etc/sysctl.conf</code></td>
<td>Linux系统内核的配置和优化</td>
</tr>
<tr>
<td><code>/etc/os-release</code></td>
<td>系统版本信息</td>
</tr>
<tr>
<td><code>/etc/redhat-release</code></td>
<td>系统版本信息</td>
</tr>
<tr>
<td><code>/etc/passwd</code></td>
<td>账号信息</td>
</tr>
<tr>
<td><code>/etc/shadow</code></td>
<td>密码信息</td>
</tr>
<tr>
<td><code>/etc/group</code></td>
<td>组信息</td>
</tr>
<tr>
<td><code>/etc/gshadow</code></td>
<td>组密码信息</td>
</tr>
<tr>
<td><code>/etc/sudoers</code></td>
<td>sudo 命令配置文件（权限提升）</td>
</tr>
<tr>
<td><code>/etc/login.defs</code></td>
<td>所有用户登录时的默认配置</td>
</tr>
<tr>
<td><code>/etc/selinux</code></td>
<td>selinux及其配置文件</td>
</tr>
<tr>
<td><code>/etc/locale.conf</code></td>
<td>系统语言及字符编码，环境变量<code>LANG</code></td>
</tr>
<tr>
<td><code>/etc/logrotate.conf</code></td>
<td>日志分割配置文件</td>
</tr>
<tr>
<td>* <code>/etc/rc.local -&gt; /etc/rc.d/rc.local</code></td>
<td></td>
</tr>
<tr>
<td>1. 开启自启动程序命令的配置文件，开机自动加载此文件</td>
<td></td>
</tr>
<tr>
<td>2. CentOS 7 需要先为此文件添加执行权限</td>
<td></td>
</tr>
</tbody></table>
<h2 id="2-5-proc"><a href="#2-5-proc" class="headerlink" title="2.5 /proc"></a>2.5 <code>/proc</code></h2><table>
<thead>
<tr>
<th>文件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>/proc/meminfo</code></td>
<td>内存信息</td>
</tr>
<tr>
<td><code>/proc/cpuinfo</code></td>
<td>cpu信息，每一核以空行隔开</td>
</tr>
<tr>
<td><code>/proc/loadavg</code></td>
<td>负载信息</td>
</tr>
<tr>
<td><code>/proc/mounts -&gt; /proc/self/mounts</code></td>
<td>挂载信息</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Shell</title>
    <url>/anyeansan.github.io/2020/03/29/Shell/</url>
    <content><![CDATA[<h1 id="一-Shell-概述"><a href="#一-Shell-概述" class="headerlink" title="一 Shell 概述"></a>一 Shell 概述</h1><ol>
<li><code>硬件 → 内核 → shell → 外层应用程序</code></li>
<li>shell 是命令解析器，将命令解析成二进制，是人和计算机交互的桥梁，linux 命令，windows 图形操作都需要shell来解析</li>
<li>shell 还是编程语言，解释型的脚本语言，在shell中可以直接调用 linux系统命令</li>
</ol>
<h1 id="二-Shell-分类"><a href="#二-Shell-分类" class="headerlink" title="二 Shell 分类"></a>二 Shell 分类</h1><h2 id="2-1-Bourne-Shell"><a href="#2-1-Bourne-Shell" class="headerlink" title="2.1 Bourne Shell"></a>2.1 Bourne Shell</h2><ol>
<li>1979年 unix 就开始使用，主文件名为<code>sh</code></li>
<li>Bourne Shell 家族<ul>
<li><code>sh</code></li>
<li><code>Bash</code><ul>
<li>与<code>sh</code>兼容，现在为linux的默认 shell</li>
</ul>
</li>
<li><code>ksh</code></li>
<li><code>psh</code></li>
<li><code>zsh</code></li>
</ul>
</li>
</ol>
<h2 id="2-2-C-Shell"><a href="#2-2-C-Shell" class="headerlink" title="2.2 C Shell"></a>2.2 C Shell</h2><ol>
<li>主要用在BSD版的unix中，与Bourne Shell不兼容</li>
<li>C shell家族<ul>
<li><code>csh</code></li>
<li><code>tcsh</code></li>
</ul>
</li>
</ol>
<h1 id="三-Shell-相关配置文件"><a href="#三-Shell-相关配置文件" class="headerlink" title="三 Shell 相关配置文件"></a>三 Shell 相关配置文件</h1><ol>
<li><code>/etc/shells</code><ul>
<li>所有shell类型</li>
<li>输入shell名即可切换shell</li>
</ul>
</li>
<li><code>/etc/password</code><ul>
<li>用户具体使用哪一个shell，取决于此文件每一行的最后一个字段</li>
</ul>
</li>
</ol>
<h1 id="四-快捷键"><a href="#四-快捷键" class="headerlink" title="四 快捷键"></a>四 快捷键</h1><table>
<thead>
<tr>
<th>快捷键</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>tab</code></td>
<td>补全</td>
</tr>
<tr>
<td><code>ctrl + c</code></td>
<td>终止正在执行的任务或者结束当前行的输入，发送 SIGINT 信号，终止一个进程</td>
</tr>
<tr>
<td><code>ctrl + d</code></td>
<td>退出当前shell，同 <code>exit</code></td>
</tr>
<tr>
<td><code>ctrl + z</code></td>
<td>暂停执行命令并放入后台，发送 SIGSTOP信号，挂起一个进程</td>
</tr>
<tr>
<td><code>ctrl + a</code></td>
<td>光标回到命令行首</td>
</tr>
<tr>
<td><code>ctrl + e</code></td>
<td>光标回到命令行尾</td>
</tr>
<tr>
<td><code>ctrl + ← →</code></td>
<td>在单词间左右移动光标</td>
</tr>
<tr>
<td><code>ctrl + u</code></td>
<td>剪切（删除）光标到行首的字符</td>
</tr>
<tr>
<td><code>ctrl + k</code></td>
<td>剪切（删除）光标到行尾的字符</td>
</tr>
<tr>
<td><code>ctrl + w</code></td>
<td>剪切（删除）一个空格分隔的字符串</td>
</tr>
<tr>
<td><code>ctrl + y</code></td>
<td>粘贴剪切的内容</td>
</tr>
<tr>
<td><code>ctrl + insert</code></td>
<td>复制命令行内容</td>
</tr>
<tr>
<td><code>shift + insert</code></td>
<td>粘贴命令行内容</td>
</tr>
<tr>
<td><code>ctrl + r</code></td>
<td>搜索命令行使用过的历史命令</td>
</tr>
<tr>
<td><code>ctrl + g</code></td>
<td>退出<code>ctrl + r</code> 搜索历史命令模式</td>
</tr>
<tr>
<td><code>Esc + .</code></td>
<td>获取上一条命令的最后部分（空格分隔）</td>
</tr>
<tr>
<td><code>ctrl + l</code></td>
<td>清屏 同<code>clear</code></td>
</tr>
<tr>
<td><code>ctrl + s</code></td>
<td>锁定终端，使之无法输入内容</td>
</tr>
<tr>
<td><code>ctrl + q</code></td>
<td>结束 <code>ctrl + s</code> 的锁定</td>
</tr>
<tr>
<td><code>!!</code></td>
<td>执行上一条命令</td>
</tr>
<tr>
<td><code>!xx</code></td>
<td>执行最近以xx开头的命令</td>
</tr>
<tr>
<td><code>!xx:p</code></td>
<td>仅打印最近以xx开头的命令，但不执行</td>
</tr>
<tr>
<td><code>!num</code></td>
<td>执行历史命令列表的第num条命令</td>
</tr>
<tr>
<td><code>!$</code></td>
<td>获取上一条命令的最后部分，同 <code>Esc + .</code></td>
</tr>
</tbody></table>
<h1 id="五-命令"><a href="#五-命令" class="headerlink" title="五 命令"></a>五 命令</h1><h2 id="5-1-内置命令-amp-外部命令"><a href="#5-1-内置命令-amp-外部命令" class="headerlink" title="5.1 内置命令 &amp; 外部命令"></a>5.1 内置命令 &amp; 外部命令</h2><h3 id="1-内置命令"><a href="#1-内置命令" class="headerlink" title="1 内置命令"></a>1 内置命令</h3><ol>
<li>内置命令和shell是一体的，它们作为shell工具的组成部分存在。</li>
<li>内置命令在系统启动时就调入内存，是常驻内存的</li>
<li>内置命令一般在系统中不存在文件，而存在于bash解释器里</li>
<li>执行内置命令时不需要通过衍生出子进程来执行，也不需要打开程序文件。所以内置命令的执行速度要更快，效率也更高</li>
</ol>
<h3 id="2-外部命令"><a href="#2-外部命令" class="headerlink" title="2 外部命令"></a>2 外部命令</h3><ol>
<li>外部命令也称为文件系统命令，是bash shell之外的程序，它并不是shell 的一部分。</li>
<li>外部命令是系统软件的功能，用户需要时才从硬盘中读入内存</li>
<li>外部命令在系统路径下有相应的可执行文件，一般位于<code>/bin</code>、<code>/usr/bin</code>、<code>/sbin</code> 或 <code>/usr/sbin</code>。</li>
<li>执行外部命令时，Linux系统会创建出一个子进程（这种操作被称为衍生），Linux系统需要消耗资源来设置新子进程的环境，所以执行外部命令有额外的代价。</li>
</ol>
<h3 id="3-type"><a href="#3-type" class="headerlink" title="3 type"></a>3 type</h3><ul>
<li><code>type [-a] 命令</code><ul>
<li>查看命令类型<ul>
<li><code>pwd is a shell builtin</code><ul>
<li>内置命令</li>
</ul>
</li>
<li><code>pwd is /usr/bin/pwd</code><ul>
<li>显示命令路径则为外部命令</li>
</ul>
</li>
</ul>
</li>
<li><code>-a</code><ul>
<li>查看所有信息，有的命令如 <code>pwd</code>，即是内置命令又是外部命令</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="5-2-别名（alias）"><a href="#5-2-别名（alias）" class="headerlink" title="5.2 别名（alias）"></a>5.2 别名（alias）</h2><ol>
<li><code>alias</code><ul>
<li>查看别名列表</li>
</ul>
</li>
<li><code>alias 别名 = 命令</code><ul>
<li>为指定命令创建别名（临时）</li>
</ul>
</li>
<li><code>unalias 别名</code><ul>
<li>删除别名</li>
</ul>
</li>
<li>屏蔽别名<ol>
<li><code>\命令</code></li>
<li>命令绝对路径</li>
<li>删除别名</li>
</ol>
</li>
</ol>
<h2 id="5-3-命令执行流程"><a href="#5-3-命令执行流程" class="headerlink" title="5.3 命令执行流程"></a>5.3 命令执行流程</h2><p><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/linux%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B.png" alt=""></p>
<ol>
<li>判断输入的命令是否是绝对路径命令，是则直接执行，否 →2</li>
<li>判断输入的命令是否是别名命令，是则操作别名代表的真实命令，否操作输入的命令，无论是否，操作的命令 → 3</li>
<li>判断命令是否是内置命令，是则直接执行，否 → 4</li>
<li>判断外部命令是否有缓存，是则直接执行，否 → 5</li>
<li>根据系统环境变量 <code>PATH</code> 定义的路径依次查找命令的可执行文件，找到则执行，没找到则报错<ul>
<li>执行过的外部命令会保存在内部缓存中，当再次执行相同的命令，会通过缓存调取执行</li>
</ul>
</li>
</ol>
<h1 id="六-配置文件"><a href="#六-配置文件" class="headerlink" title="六 配置文件"></a>六 配置文件</h1><h2 id="6-1-login-shell-amp-non-login-shell"><a href="#6-1-login-shell-amp-non-login-shell" class="headerlink" title="6.1 login shell &amp; non-login shell"></a>6.1 login shell &amp; non-login shell</h2><h3 id="1-login-shell"><a href="#1-login-shell" class="headerlink" title="1 login shell"></a>1 login shell</h3><ul>
<li>取得 shell 时需要完整的登陆流程的，就称为 login shell。</li>
</ul>
<h3 id="2-non-login-shell"><a href="#2-non-login-shell" class="headerlink" title="2 non-login shell"></a>2 non-login shell</h3><ul>
<li>取得 shell 没有通过登录流程，就称为 non-loagin shee</li>
<li>比如在原本的 bash 环境下再次使用 bash 这个命令，建立了一个bash子进程，没有输入账号密码， 那第二个 bash 就是 non-login shell 。</li>
</ul>
<h4 id="3-一个判断的方式"><a href="#3-一个判断的方式" class="headerlink" title="3 一个判断的方式"></a>3 一个判断的方式</h4><ul>
<li><code>echo $0</code><ul>
<li><code>-bash</code>：login shell</li>
<li><code>bash</code>：non-login shell</li>
</ul>
</li>
</ul>
<h2 id="6-2-Interactive-shell-amp-non-interactive-shell"><a href="#6-2-Interactive-shell-amp-non-interactive-shell" class="headerlink" title="6.2 Interactive shell &amp; non-interactive shell"></a>6.2 Interactive shell &amp; non-interactive shell</h2><h3 id="1-Interactive-shell（交互式shell）"><a href="#1-Interactive-shell（交互式shell）" class="headerlink" title="1 Interactive shell（交互式shell）"></a>1 Interactive shell（交互式shell）</h3><ul>
<li>shell中的命令时由用户从键盘交互式地输入的，运行的结果也能够输出到终端显示给用户看。</li>
</ul>
<h3 id="2-non-interactive-shell（非交互式shell）"><a href="#2-non-interactive-shell（非交互式shell）" class="headerlink" title="2 non-interactive shell（非交互式shell）"></a>2 non-interactive shell（非交互式shell）</h3><ul>
<li>shell可能由某些自动化过程启动，不能直接接收用户的输入，也不能直接输出结果给终端用户看。</li>
</ul>
<h2 id="6-3-配置文件加载过程"><a href="#6-3-配置文件加载过程" class="headerlink" title="6.3 配置文件加载过程"></a>6.3 配置文件加载过程</h2><p><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/login-shell%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B.png" alt=""></p>
<h3 id="1-login-shell-1"><a href="#1-login-shell-1" class="headerlink" title="1 login shell"></a>1 login shell</h3><ol>
<li><code>/etc/profile</code><ul>
<li>加载系统配置文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 配置了一些环境变量 `USER LOGNAME MAIL PATH HOSTNAME HISTSIZE`</span><br><span class="line">2 配置了默认 umask</span><br><span class="line">3 调用 /etc/profile.d 下的脚本文件</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><code>~/.bash_profile | ~/.bash_login | ~/.profile</code><ul>
<li>加载用户配置文件，三者按照顺序只会读取其中的一个<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1 加载 ~/.bashrc</span><br><span class="line">if [ -f ~/.bashrc ]; then</span><br><span class="line">	. ~/.bashrc </span><br><span class="line">fi</span><br><span class="line"># 2 由于脚本是顺序执行，所以首先加载 ~.bashrc，之后执行下边内容</span><br><span class="line">PATH=$PATH:$HOME/bin</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><code>~/.bashrc</code><ul>
<li>用户配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1 定义了一些别名</span><br><span class="line">alias rm=&apos;rm -i&apos;</span><br><span class="line">alias cp=&apos;cp -i&apos;</span><br><span class="line">alias mv=&apos;mv -i&apos;</span><br><span class="line"># 2 加载 /etc/bashrc</span><br><span class="line">if [ -f /etc/bashrc ]; then</span><br><span class="line">	. /etc/bashrc</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><code>/etc/bashrc</code><ul>
<li>系统配置，配置了环境变量 <code>PS1</code></li>
</ul>
</li>
</ol>
<h3 id="2-non-login-shell-1"><a href="#2-non-login-shell-1" class="headerlink" title="2 non-login shell"></a>2 non-login shell</h3><ol>
<li><code>~/.bashrc</code><ul>
<li>只会读取 <code>~/.bashrc</code> 这一个文件</li>
</ul>
</li>
<li><code>/etc/bashrc</code><ol>
<li>配置了环境变量 <code>PS1 PATH</code></li>
<li>配置了 umask</li>
<li>调用 <code>/etc/profile.d</code> 下的脚本文件 <code>.sh</code></li>
</ol>
</li>
</ol>
<h2 id="6-4-重载配置文件"><a href="#6-4-重载配置文件" class="headerlink" title="6.4 重载配置文件"></a>6.4 重载配置文件</h2><ol>
<li><code>source 配置文件</code> </li>
<li><code>. 配置文件</code></li>
</ol>
<h1 id="七-Shell-中的符号"><a href="#七-Shell-中的符号" class="headerlink" title="七 Shell 中的符号"></a>七 Shell 中的符号</h1><h2 id="7-1-基本符号"><a href="#7-1-基本符号" class="headerlink" title="7.1 基本符号"></a>7.1 基本符号</h2><table>
<thead>
<tr>
<th>符号</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>\</code></td>
<td>转义符</td>
</tr>
<tr>
<td><code>$</code></td>
<td>用于调用变量的值</td>
</tr>
<tr>
<td><code>&#39;&#39;</code></td>
<td>单引号，所见即所得。</td>
</tr>
<tr>
<td><code>&quot;&quot;</code></td>
<td>双引号，在双引号中<code>$ &#96; &lt;/code> 有特殊含义</td>
</tr>
<tr>
<td><code>&#96;&#96;</code></td>
<td>反引号，解析命令</td>
</tr>
<tr>
<td><code>$()</code></td>
<td>同反引号，解析命令</td>
</tr>
<tr>
<td><code>&#124;</code></td>
<td>管道符，将前一个命令的正确输出输入到后一个命令</td>
</tr>
<tr>
<td><code>;</code></td>
<td>前后命令没有逻辑关系，顺序执行</td>
</tr>
<tr>
<td><code>&amp;&amp;</code></td>
<td>逻辑与，前命令成功，后命令才执行</td>
</tr>
<tr>
<td><code>&#124;&#124;</code></td>
<td>逻辑或，前命令成功，后命令不执行；前命令不成功，后命令执行</td>
</tr>
</tbody></table>
<h2 id="7-2-集合-amp-序列"><a href="#7-2-集合-amp-序列" class="headerlink" title="7.2 集合 &amp; 序列"></a>7.2 集合 &amp; 序列</h2><h3 id="1-集合"><a href="#1-集合" class="headerlink" title="1 集合"></a>1 集合</h3><ul>
<li><code>{ele1, ele2, ele3, ...}</code></li>
</ul>
<h3 id="2-序列"><a href="#2-序列" class="headerlink" title="2 序列"></a>2 序列</h3><ul>
<li><code>{first .. last .. increment}</code><ul>
<li>从 <code>first</code> 开始，每次增长 <code>increment</code> ，不超过 <code>last</code></li>
</ul>
</li>
</ul>
<h3 id="3-集合或序列可与外部字符、集合或序列相结合"><a href="#3-集合或序列可与外部字符、集合或序列相结合" class="headerlink" title="3 集合或序列可与外部字符、集合或序列相结合"></a>3 集合或序列可与外部字符、集合或序列相结合</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo a&#123;,2&#125; # a a2</span><br><span class="line">echo a&#123;1,2&#125; # a1 a2</span><br><span class="line">echo a&#123;1..3&#125; # a1 a2 a3</span><br><span class="line">echo &#123;1,2&#125;&#123;1..3&#125; # 11 12 13 21 22 23</span><br></pre></td></tr></table></figure>

<h2 id="7-3-通配符"><a href="#7-3-通配符" class="headerlink" title="7.3 通配符"></a>7.3 通配符</h2><table>
<thead>
<tr>
<th>符号</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>?</code></td>
<td>1个 任意字符</td>
</tr>
<tr>
<td><code>*</code></td>
<td>0 或多个 任意字符</td>
</tr>
<tr>
<td>### 通配符 &amp; 正则</td>
<td></td>
</tr>
<tr>
<td>#### 1 通配符</td>
<td></td>
</tr>
<tr>
<td>1. 通配符根据文件名称进行筛选，是完全匹配</td>
<td></td>
</tr>
<tr>
<td>2. <code>ls、find、cp...</code> 这些命令不支持正则表达式，所以只能使用shell自己的通配符来进行匹配</td>
<td></td>
</tr>
</tbody></table>
<h4 id="2-正则"><a href="#2-正则" class="headerlink" title="2 正则"></a>2 正则</h4><ol>
<li>正则根据文件内容进行筛选，是包含匹配</li>
<li><code>grep、awk、se...</code> 等命令可以支持正则表达式</li>
</ol>
<h4 id="3-Shell的-和正则的"><a href="#3-Shell的-和正则的" class="headerlink" title="3 Shell的 * 和正则的 *"></a>3 Shell的 <code>*</code> 和正则的 <code>*</code></h4><ol>
<li>Shell 中的 <code>*</code> 表示匹配任意数量的任意字符，是文本，能单独出现</li>
<li>正则中的 <code>*</code> 代表数量，表示前一个字符或组连续出现 0 次或多次，不能单独出现</li>
</ol>
<h2 id="7-4-重定向"><a href="#7-4-重定向" class="headerlink" title="7.4 重定向"></a>7.4 重定向</h2><h3 id="1-标准输入-输出"><a href="#1-标准输入-输出" class="headerlink" title="1 标准输入/输出"></a>1 标准输入/输出</h3><table>
<thead>
<tr>
<th>类型</th>
<th>设备</th>
<th>设备文件名</th>
<th>文件描述符</th>
</tr>
</thead>
<tbody><tr>
<td>标准输入</td>
<td>键盘</td>
<td>/dev/stdin</td>
<td>0</td>
</tr>
<tr>
<td>标准输出</td>
<td>显示器</td>
<td>/dev/stdout</td>
<td>1</td>
</tr>
<tr>
<td>标准错误输出</td>
<td>显示器</td>
<td>/dev/stderr</td>
<td>2</td>
</tr>
<tr>
<td>* 文件描述符</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1. 是内核为了高效管理已被打开的文件所创建的索引，用于指向被打开的文件</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2. 对文件描述符的操作就是对文件本身的操作。 可以直接通过操作文件描述来修改文件</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="2-标准输入重定向"><a href="#2-标准输入重定向" class="headerlink" title="2 标准输入重定向"></a>2 标准输入重定向</h3><table>
<thead>
<tr>
<th>语法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>命令 [0]&lt; 文件</code></td>
<td>将文件作为命令的输入</td>
</tr>
<tr>
<td><code>命令 [0]&lt;&lt; EOF ... EOF</code></td>
<td>把标识符之间内容作为命令的输入</td>
</tr>
<tr>
<td>* <code>EOF</code></td>
<td></td>
</tr>
<tr>
<td>* <code>end of file</code></td>
<td></td>
</tr>
<tr>
<td>* 可自定义，必须成对，后一个必须顶格（行首部）</td>
<td></td>
</tr>
</tbody></table>
<h3 id="3-标准输出重定向"><a href="#3-标准输出重定向" class="headerlink" title="3 标准输出重定向"></a>3 标准输出重定向</h3><table>
<thead>
<tr>
<th>语法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>命令 [1]&gt; 文件</code></td>
<td>将命令的正确输出添加到文件（覆盖）</td>
</tr>
<tr>
<td><code>命令 [1]&gt;&gt; 文件</code></td>
<td>将命令的正确输出追加到文件</td>
</tr>
</tbody></table>
<h3 id="4-标准错误输出重定向"><a href="#4-标准错误输出重定向" class="headerlink" title="4 标准错误输出重定向"></a>4 标准错误输出重定向</h3><table>
<thead>
<tr>
<th>语法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>命令 2&gt; 文件</code></td>
<td>将命令的错误输出添加到文件（覆盖）</td>
</tr>
<tr>
<td><code>命令 2&gt;&gt; 文件</code></td>
<td>将命令的错误输出追加到文件</td>
</tr>
</tbody></table>
<h3 id="5-标准输出重定向（正确输出-错误输出）"><a href="#5-标准输出重定向（正确输出-错误输出）" class="headerlink" title="5 标准输出重定向（正确输出+错误输出）"></a>5 标准输出重定向（正确输出+错误输出）</h3><table>
<thead>
<tr>
<th>语法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>命令 &amp;&gt; 文件</code></td>
<td>将命令的输出（正确和错误）添加到文件（覆盖）</td>
</tr>
<tr>
<td><code>命令 &amp;&gt;&gt; 文件</code></td>
<td>将命令的输出（正确和错误）追加到文件</td>
</tr>
<tr>
<td><code>命令 &gt; 文件 2&gt;&amp;1</code></td>
<td>将命令的输出（正确和错误）添加到文件（覆盖）</td>
</tr>
<tr>
<td><code>命令 &gt;&gt; 文件 2&gt;&amp;1</code></td>
<td>将命令的输出（正确和错误）追加到文件</td>
</tr>
<tr>
<td><code>命令&gt;文件1 2&gt;文件2</code></td>
<td>把命令正确的输出添加到文件1中，错误的输出添加到文件2中（覆盖）</td>
</tr>
<tr>
<td><code>命令&gt;&gt;文件1 2&gt;&gt;文件2</code></td>
<td>把命令正确的输出追加到文件1中，错误的输出追加到文件2中</td>
</tr>
<tr>
<td>1. <code>1&gt;&amp;2</code></td>
<td></td>
</tr>
<tr>
<td>* 把正确输出输出到错误输出中</td>
<td></td>
</tr>
<tr>
<td>2. <code>2&gt;&amp;1</code></td>
<td></td>
</tr>
<tr>
<td>* 把错误输出输出到正确输出中</td>
<td></td>
</tr>
<tr>
<td>3. <code>命令 &gt;&gt; 文件 2&gt;&amp;1</code></td>
<td></td>
</tr>
<tr>
<td>* 没错误就把正确输出追加到文件</td>
<td></td>
</tr>
<tr>
<td>* 有错误就先把错误输出到正确输出中，然后一起追加到文件</td>
<td></td>
</tr>
</tbody></table>
<h1 id="八-变量"><a href="#八-变量" class="headerlink" title="八 变量"></a>八 变量</h1><h2 id="8-1-规则"><a href="#8-1-规则" class="headerlink" title="8.1 规则"></a>8.1 规则</h2><ol>
<li>变量名不能以数字开头，由数字，字母，下划线组成</li>
<li>变量默认类型都是字符串，如果要进行数值运算，必须指定变量为数值型</li>
<li>变量赋值时等号两边不能有空格</li>
<li>变量的值有空格，需要单引号或者双引号</li>
</ol>
<h2 id="8-2-普通变量（局部变量）"><a href="#8-2-普通变量（局部变量）" class="headerlink" title="8.2 普通变量（局部变量）"></a>8.2 普通变量（局部变量）</h2><ol>
<li>只对当前shell有效，临时变量，重启失效</li>
<li><code>set</code><ul>
<li>查看变量</li>
</ul>
</li>
<li><code>变量名=值</code><ul>
<li>定义变量</li>
</ul>
</li>
<li><code>unset 变量名</code><ul>
<li>删除变量</li>
</ul>
</li>
<li><code>$变量名</code><ul>
<li>取值</li>
</ul>
</li>
</ol>
<h2 id="8-3-环境变量（全局变量）"><a href="#8-3-环境变量（全局变量）" class="headerlink" title="8.3 环境变量（全局变量）"></a>8.3 环境变量（全局变量）</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>命令行定义时，对当前shell及其子shell有效，临时变量，重启失效</li>
<li>写入配置文件中，根据配置文件决定对哪个shell有效，永久变量</li>
</ol>
<h3 id="2-命令"><a href="#2-命令" class="headerlink" title="2 命令"></a>2 命令</h3><ol>
<li><code>env</code><ul>
<li>查询环境变量</li>
</ul>
</li>
<li><code>export 变量名=值</code><ul>
<li>定义环境变量</li>
</ul>
</li>
<li><code>unset 变量名</code><ul>
<li>删除变量</li>
</ul>
</li>
<li><code>$变量名</code><ul>
<li>获取值</li>
</ul>
</li>
</ol>
<h3 id="3-常见环境变量"><a href="#3-常见环境变量" class="headerlink" title="3 常见环境变量"></a>3 常见环境变量</h3><table>
<thead>
<tr>
<th>环境变量</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>PATH</code></td>
<td>定义命令行解释器搜索执行命令的路径</td>
</tr>
<tr>
<td><code>HOME</code></td>
<td>用户家目录</td>
</tr>
<tr>
<td><code>SHELL</code></td>
<td>用户使用的 Shell 解释器名称</td>
</tr>
<tr>
<td><code>LANG</code></td>
<td>系统语言及字符编码</td>
</tr>
<tr>
<td><code>EDITOR</code></td>
<td>用户默认的文本编辑器</td>
</tr>
<tr>
<td><code>PS1</code></td>
<td>Shell 的命令提示符</td>
</tr>
<tr>
<td><code>RANDOM</code></td>
<td>生成一个随机数字</td>
</tr>
<tr>
<td><code>HISTSIZE</code></td>
<td>输出的历史命令记录条数</td>
</tr>
<tr>
<td><code>HISTFILESIZE</code></td>
<td>保存的历史命令记录条数</td>
</tr>
<tr>
<td><code>MAIL</code></td>
<td>邮件保存路径</td>
</tr>
</tbody></table>
<h3 id="4-位置参数变量"><a href="#4-位置参数变量" class="headerlink" title="4 位置参数变量"></a>4 位置参数变量</h3><table>
<thead>
<tr>
<th>位置参数变量</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>$0</code></td>
<td>代表命令本身</td>
</tr>
<tr>
<td><code>$n</code></td>
<td>代表第 n 个参数，如果 n&gt;=10，用大括号包含，如 <code>${10}</code></td>
</tr>
<tr>
<td><code>$#</code></td>
<td>参数总个数</td>
</tr>
<tr>
<td><code>$@</code></td>
<td>获取所有参数，每个参数独立，默认用空格分隔</td>
</tr>
<tr>
<td><code>$*</code></td>
<td>不加双引号同 <code>$@</code>，加上双引号，把所有参数视为一个整体</td>
</tr>
<tr>
<td><code>$?</code></td>
<td>获取上一个命令的执行返回值，0 成功，非 0 失败。</td>
</tr>
<tr>
<td><code>$$</code></td>
<td>当前脚本的进程号（PID）</td>
</tr>
<tr>
<td><code>$!</code></td>
<td>后台运行的最后一个脚本的进程号（PID）</td>
</tr>
<tr>
<td><code>$_</code></td>
<td>获取命令行最后一个参数，相当于 <code>ESC .</code></td>
</tr>
</tbody></table>
<h3 id="5-变量值操作"><a href="#5-变量值操作" class="headerlink" title="5 变量值操作 ${}"></a>5 变量值操作 <code>${}</code></h3><ol>
<li><code>${变量#pattern}</code><ul>
<li><code>#</code><ul>
<li>从前往后匹配并删除</li>
</ul>
</li>
<li><code>##</code><ul>
<li>贪婪匹配</li>
</ul>
</li>
</ul>
</li>
<li><code>${变量%pattern}</code><ul>
<li><code>%</code><ul>
<li>从后往前匹配并删除</li>
</ul>
</li>
<li><code>%%</code><ul>
<li>贪婪匹配    </li>
</ul>
</li>
</ul>
</li>
<li><code>${变量/oldStr/newStr}</code><ul>
<li>替换一个匹配</li>
</ul>
</li>
<li><code>${变量//oldStr/newStr}</code><ul>
<li>替换所有匹配</li>
</ul>
</li>
</ol>
<h3 id="6-数值运算"><a href="#6-数值运算" class="headerlink" title="6 数值运算"></a>6 数值运算</h3><ol>
<li><code>$(())</code><ul>
<li>整数运算</li>
<li>可以用在引号中，不会直接输出</li>
</ul>
</li>
<li><code>$[]</code><ul>
<li>整数运算</li>
<li>可以用在引号中，不会直接输出</li>
</ul>
</li>
<li><code>expr 1 + 1</code><ul>
<li>整数运算，需要数字与运算符间要加空格</li>
<li>不能用在引号中，会直接输出</li>
</ul>
</li>
<li><code>echo 1+1|bc</code><ul>
<li>整数/小数运算</li>
</ul>
</li>
</ol>
<h1 id="九-Shell-编程"><a href="#九-Shell-编程" class="headerlink" title="九 Shell 编程"></a>九 Shell 编程</h1><h2 id="9-1-执行脚本方式"><a href="#9-1-执行脚本方式" class="headerlink" title="9.1 执行脚本方式"></a>9.1 执行脚本方式</h2><ol>
<li><code>sh/bash 脚本</code><ul>
<li>借助解释器执行，脚本可以不用是绝对路径</li>
</ul>
</li>
<li><code>脚本绝对路径</code><ul>
<li>把脚本当成命令执行（必须赋予执行权限）</li>
</ul>
</li>
</ol>
<h2 id="9-2-windows-脚本在linux执行"><a href="#9-2-windows-脚本在linux执行" class="headerlink" title="9.2 windows 脚本在linux执行"></a>9.2 windows 脚本在linux执行</h2><ol>
<li>问题<ul>
<li>linux 换行符识别为<code>$</code>，而windows 换行符识别为<code>^M$</code><ol>
<li><code>:set list</code><ul>
<li>在文件中查看</li>
</ul>
</li>
<li><code>cat -A FIle</code><ul>
<li>在外部查看</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
<li>解决<ol>
<li>安装 <code>dos2unix</code></li>
<li><code>dos2unix FILE</code><ul>
<li>把文件从 dos 转为 unix，也就修改了换行符</li>
</ul>
</li>
</ol>
</li>
</ol>
<h2 id="9-3-脚本语法"><a href="#9-3-脚本语法" class="headerlink" title="9.3 脚本语法"></a>9.3 脚本语法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 注释</span><br></pre></td></tr></table></figure>

<h2 id="9-4-条件表达式"><a href="#9-4-条件表达式" class="headerlink" title="9.4 条件表达式"></a>9.4 条件表达式</h2><h3 id="1-语法"><a href="#1-语法" class="headerlink" title="1 语法"></a>1 语法</h3><ol>
<li><code>[ 条件表达式 ]</code><ul>
<li>两侧各有一个空格</li>
<li>条件成立返回 0，反之 1</li>
</ul>
</li>
<li><code>test 条件表达式</code></li>
</ol>
<h3 id="2-文件"><a href="#2-文件" class="headerlink" title="2 文件"></a>2 文件</h3><table>
<thead>
<tr>
<th>表达式</th>
<th>单词</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-e FILE</code></td>
<td><code>exit</code></td>
<td>判断该文件是否存在</td>
</tr>
<tr>
<td><code>-f FILE</code></td>
<td><code>file</code></td>
<td>判断该文件是否存在，且是否是文件</td>
</tr>
<tr>
<td><code>-d FILE</code></td>
<td><code>directory</code></td>
<td>判断该文件是否存在，且是否是目录</td>
</tr>
<tr>
<td><code>-l FILE</code></td>
<td><code>link</code></td>
<td>判断该文件是否存在，且是否是链接文件</td>
</tr>
<tr>
<td><code>-r FILE</code></td>
<td><code>read</code></td>
<td>判断该文件是否存在，且是否有读权限</td>
</tr>
<tr>
<td><code>-w FILE</code></td>
<td><code>write</code></td>
<td>判断该文件是否存在，且是否有写权限</td>
</tr>
<tr>
<td><code>-x FILE</code></td>
<td><code>execute</code></td>
<td>判断该文件是否存在，且是否有执行权限</td>
</tr>
<tr>
<td><code>FILE1 -ef FILE2</code></td>
<td><code>equals file</code></td>
<td>判断两个文件是否一样（硬链接）</td>
</tr>
<tr>
<td><code>FILE1 -nt FILE2</code></td>
<td><code>new than</code></td>
<td>判断文件1是否比文件2新（最后修改时间）</td>
</tr>
<tr>
<td><code>FILE1 -ot FILE2</code></td>
<td><code>old than</code></td>
<td>判断文件1是否比文件2旧（最后修改时间）</td>
</tr>
</tbody></table>
<h3 id="3-数值"><a href="#3-数值" class="headerlink" title="3 数值"></a>3 数值</h3><table>
<thead>
<tr>
<th><code>[[表达式]]</code></th>
<th><code>[表达式]</code></th>
<th>单词</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>==</code></td>
<td><code>-eq</code></td>
<td><code>equal</code></td>
<td>等于</td>
</tr>
<tr>
<td><code>!=</code></td>
<td><code>-ne</code></td>
<td><code>not equal</code></td>
<td>不等于</td>
</tr>
<tr>
<td><code>&gt;</code></td>
<td><code>-gt</code></td>
<td><code>greater than</code></td>
<td>大于</td>
</tr>
<tr>
<td><code>&gt;=</code></td>
<td><code>-ge</code></td>
<td><code>greater equal</code></td>
<td>大于等于</td>
</tr>
<tr>
<td><code>&lt;</code></td>
<td><code>-lt</code></td>
<td><code>less than</code></td>
<td>小于</td>
</tr>
<tr>
<td><code>&lt;=</code></td>
<td><code>-le</code></td>
<td><code>less equal</code></td>
<td>小于等于</td>
</tr>
</tbody></table>
<h3 id="4-字符串"><a href="#4-字符串" class="headerlink" title="4 字符串"></a>4 字符串</h3><table>
<thead>
<tr>
<th>表达式</th>
<th>单词</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-z STRING</code></td>
<td><code>zero</code></td>
<td>判断字符串长度是否为 0</td>
</tr>
<tr>
<td><code>-n STRING</code></td>
<td><code>not zero</code></td>
<td>判断字符串长度是否不为 0</td>
</tr>
<tr>
<td><code>STR1 = STR2</code></td>
<td><code>equal</code></td>
<td>判断字符串是否相等</td>
</tr>
<tr>
<td><code>STR1 != STR2</code></td>
<td><code>not equal</code></td>
<td>判断字符串是否不相等</td>
</tr>
</tbody></table>
<h3 id="5-逻辑表达式"><a href="#5-逻辑表达式" class="headerlink" title="5 逻辑表达式"></a>5 逻辑表达式</h3><table>
<thead>
<tr>
<th>表达式</th>
<th>单词</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>EXPR1 -a EXPR2</code></td>
<td><code>and</code></td>
<td>逻辑与</td>
</tr>
<tr>
<td><code>EXPR1 -o EXPR2</code></td>
<td><code>or</code></td>
<td>逻辑或</td>
</tr>
<tr>
<td><code>! EXPR</code></td>
<td><code>not</code></td>
<td>逻辑非</td>
</tr>
</tbody></table>
<h3 id="6-正则表达式（使用-）"><a href="#6-正则表达式（使用-）" class="headerlink" title="6 正则表达式（使用 [[]]）"></a>6 正则表达式（使用 <code>[[]]</code>）</h3><table>
<thead>
<tr>
<th>表达式</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>=~ PATTERN</code></td>
<td>判断是否匹配</td>
</tr>
</tbody></table>
<h2 id="9-5-语句"><a href="#9-5-语句" class="headerlink" title="9.5 语句"></a>9.5 语句</h2><h3 id="1-if"><a href="#1-if" class="headerlink" title="1 if"></a>1 if</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if [条件]</span><br><span class="line">	then code</span><br><span class="line">elif [条件]</span><br><span class="line">	then code</span><br><span class="line">......</span><br><span class="line">else</span><br><span class="line">	code</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if [条件]; then</span><br><span class="line">	code</span><br><span class="line">elif [条件]; then</span><br><span class="line">	code</span><br><span class="line">......</span><br><span class="line">else</span><br><span class="line">	code</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<h3 id="2-for"><a href="#2-for" class="headerlink" title="2 for"></a>2 for</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for 变量名 in 取值列表 # 值用空格或换行隔开</span><br><span class="line">	do</span><br><span class="line">		code...</span><br><span class="line">	done</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for((初始值;循环条件;变量变换))</span><br><span class="line">	do</span><br><span class="line">		code</span><br><span class="line">	done</span><br></pre></td></tr></table></figure>

<h3 id="3-while"><a href="#3-while" class="headerlink" title="3 while"></a>3 while</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">while [条件]</span><br><span class="line">	do</span><br><span class="line">		code</span><br><span class="line">	done</span><br></pre></td></tr></table></figure>

<h3 id="4-until"><a href="#4-until" class="headerlink" title="4 until"></a>4 until</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">until [条件]</span><br><span class="line">	do</span><br><span class="line">		code</span><br><span class="line">	done</span><br></pre></td></tr></table></figure>
<ul>
<li>一直执行直到条件成立，即条件不成立就无限循环，与while相反</li>
</ul>
<h3 id="5-case"><a href="#5-case" class="headerlink" title="5 case"></a>5 case</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">case $变量 in</span><br><span class="line">	模式1)</span><br><span class="line">		code</span><br><span class="line">		;;</span><br><span class="line">	模式2)</span><br><span class="line">		code</span><br><span class="line">		;;</span><br><span class="line">	*)</span><br><span class="line">		code（皆不符合时执行）</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>

<h3 id="6-shell-内置语句"><a href="#6-shell-内置语句" class="headerlink" title="6 shell 内置语句"></a>6 shell 内置语句</h3><ol>
<li><code>continue</code><ul>
<li>跳出本次循环，继续下一次</li>
</ul>
</li>
<li><code>break</code><ul>
<li>跳出循环</li>
</ul>
</li>
<li><code>exit</code><ul>
<li>结束，类似 <code>return</code></li>
</ul>
</li>
</ol>
<h2 id="9-6-函数"><a href="#9-6-函数" class="headerlink" title="9.6 函数"></a>9.6 函数</h2><h3 id="1-定义方式"><a href="#1-定义方式" class="headerlink" title="1 定义方式"></a>1 定义方式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">function test() &#123; return 返回值&#125;</span><br><span class="line">2</span><br><span class="line">test() &#123;return 返回值&#125;</span><br><span class="line">3</span><br><span class="line">function test &#123;return 返回值&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-变量定义"><a href="#2-变量定义" class="headerlink" title="2 变量定义"></a>2 变量定义</h3><ol>
<li>shell脚本定义的变量默认都是全局的（包括在函数中定义）</li>
<li><code>local 变量=值</code><ul>
<li>使用local表示只在当前作用域有效</li>
</ul>
</li>
<li><code>let</code><ul>
<li>用来执行算术运算，等价于 <code>((运算式))</code></li>
</ul>
</li>
</ol>
<h3 id="3-传参"><a href="#3-传参" class="headerlink" title="3 传参"></a>3 传参</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">test $1 $2 ...</span><br><span class="line"># 注意 $1 指的是脚本传参的顺序</span><br></pre></td></tr></table></figure>

<h3 id="4-外部调用"><a href="#4-外部调用" class="headerlink" title="4 外部调用"></a>4 外部调用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">test.sh test $1 $2 ...</span><br></pre></td></tr></table></figure>

<h2 id="9-7-数组"><a href="#9-7-数组" class="headerlink" title="9.7 数组"></a>9.7 数组</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1 定义"></a>1 定义</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arrName=(val1 val2 ... valN)</span><br></pre></td></tr></table></figure>

<h3 id="2-获取属组长度"><a href="#2-获取属组长度" class="headerlink" title="2 获取属组长度"></a>2 获取属组长度</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$&#123;#arrName[*|@]&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-获取值"><a href="#3-获取值" class="headerlink" title="3 获取值"></a>3 获取值</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 $&#123;arrName[index]&#125; # 获取指定值</span><br><span class="line">2 $&#123;arrName[*|@]:startIndex:length&#125; # 获取从startIndex开始的length个值</span><br></pre></td></tr></table></figure>

<h3 id="4-设置值"><a href="#4-设置值" class="headerlink" title="4 设置值"></a>4 设置值</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arrName[index]=value</span><br></pre></td></tr></table></figure>

<h3 id="5-删除"><a href="#5-删除" class="headerlink" title="5 删除"></a>5 删除</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 unset arrName[index] # 删除指定值</span><br><span class="line">2 unset arrName # 清空数组</span><br></pre></td></tr></table></figure>

<h3 id="6-替换"><a href="#6-替换" class="headerlink" title="6 替换"></a>6 替换</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$&#123;arrName[@|*]/pattern/new&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 安装和配置</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="一-概述"><a href="#一-概述" class="headerlink" title="一 概述"></a>一 概述</h1><h2 id="1-1-硬件"><a href="#1-1-硬件" class="headerlink" title="1.1 硬件"></a>1.1 硬件</h2><ol>
<li>电源</li>
<li>CPU<ol>
<li>路数：即CPU的个数，1 路 = 1 CPU</li>
<li>核数</li>
</ol>
</li>
<li>内存<ol>
<li>缓冲（buffer）<ul>
<li>写：<code>数据 → 内存 → 磁盘</code></li>
</ul>
</li>
<li>缓存（cache）<ul>
<li>读：<code>磁盘 → 内存 → 数据</code></li>
</ul>
</li>
</ol>
</li>
<li>磁盘</li>
<li>主板</li>
<li>显卡</li>
<li>声卡</li>
<li>键鼠</li>
</ol>
<h2 id="1-2-服务器"><a href="#1-2-服务器" class="headerlink" title="1.2 服务器"></a>1.2 服务器</h2><ol>
<li>硬件服务器<ol>
<li>机架服务器</li>
<li>刀片服务器</li>
<li>塔式服务器</li>
</ol>
</li>
<li>虚拟服务器<ol>
<li>阿里云</li>
<li>亚马逊（AWS）</li>
<li>腾讯云</li>
</ol>
</li>
</ol>
<h2 id="1-3-操作系统"><a href="#1-3-操作系统" class="headerlink" title="1.3 操作系统"></a>1.3 操作系统</h2><ul>
<li><code>硬件 + 内核 + shell + 软件</code></li>
</ul>
<h2 id="1-4-Linux发展历史"><a href="#1-4-Linux发展历史" class="headerlink" title="1.4 Linux发展历史"></a>1.4 Linux发展历史</h2><ol>
<li><code>FSF</code><ul>
<li><code>free software foundation</code> 自由软件基金会，主要项目是GNU</li>
</ul>
</li>
<li><code>GNU</code><ul>
<li><code>GNU是“GNU is Not Unix”的递归缩写</code>，目标是建立可自由发布和移值的类unix操作系统</li>
<li>GNU类UNIX操作系统是由一系列应用程序，系统库和开发工具构成的软件集合（如Emacs，gcc，bash，gawk），并加上了用于资源分配和硬件管理的内核。</li>
</ul>
</li>
<li><code>GPL</code><ul>
<li><code>general public license</code>：通用公共许可，是一个开源许可协议</li>
</ul>
</li>
</ol>
<ul>
<li><code>linux 操作系统 = linux内核 + GNU软件和系统软件 + 必要的应用程序</code></li>
</ul>
<h2 id="1-5-Linux-发行版"><a href="#1-5-Linux-发行版" class="headerlink" title="1.5 Linux 发行版"></a>1.5 Linux 发行版</h2><ol>
<li><code>Fedora</code><ul>
<li>免费，新功能，小白鼠</li>
</ul>
</li>
<li><code>Red Hat</code><ul>
<li>收费</li>
</ul>
</li>
<li><code>CentOS</code><ul>
<li>去掉Red Hat的logo，收费软件被重新打包编译</li>
<li>后被Red Hat 收购</li>
</ul>
</li>
<li><code>Ubuntu</code><ul>
<li>桌面</li>
</ul>
</li>
<li><code>Debian FreeBSD</code><ul>
<li>安全 稳定</li>
</ul>
</li>
</ol>
<h2 id="1-6-语录"><a href="#1-6-语录" class="headerlink" title="1.6 语录"></a>1.6 语录</h2><ol>
<li>Linux 一切从根开始</li>
<li>Linux 一切皆文件</li>
<li>Linux 系统中命令行的修改大部分都是临时修改，配置文件是永久修改。</li>
<li>Linux 系统服务配置文件修改后，需要重启服务（重新加载配置文件）</li>
</ol>
<h1 id="二-CentOS-7-安装"><a href="#二-CentOS-7-安装" class="headerlink" title="二 CentOS 7 安装"></a>二 CentOS 7 安装</h1><h2 id="2-1-下载镜像"><a href="#2-1-下载镜像" class="headerlink" title="2.1 下载镜像"></a>2.1 下载镜像</h2><ol>
<li><a href="https://www.centos.org/" target="_blank" rel="noopener" title="CentOS 官网">CentoOS project</a></li>
<li><a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener" title="阿里云官方镜像站">Aliyun mirror</a></li>
</ol>
<h2 id="2-2-准备虚拟环境"><a href="#2-2-准备虚拟环境" class="headerlink" title="2.2 准备虚拟环境"></a>2.2 准备虚拟环境</h2><ol>
<li>虚拟软件 <code>VMware Workstation</code></li>
</ol>
<h2 id="2-3-安装配置"><a href="#2-3-安装配置" class="headerlink" title="2.3 安装配置"></a>2.3 安装配置</h2><h3 id="1-软件安装"><a href="#1-软件安装" class="headerlink" title="1 软件安装"></a>1 软件安装</h3><ul>
<li><code>Minimal Insatll</code><ul>
<li><code>Debugging Tools</code></li>
<li><code>Compatibility Libraries</code></li>
<li><code>Development Tools</code></li>
<li><code>System Administration Tools</code></li>
</ul>
</li>
</ul>
<h3 id="2-网络（NAT）"><a href="#2-网络（NAT）" class="headerlink" title="2 网络（NAT）"></a>2 网络（NAT）</h3><ol>
<li>主机名</li>
<li><code>config</code><ol>
<li><code>General</code><ul>
<li>勾选自动连接</li>
</ul>
</li>
<li><code>IPv4 settings</code><ol>
<li><code>Method</code> <ul>
<li><code>Manual</code> （手动）</li>
</ul>
</li>
<li>ip 子网掩码 网关 <ul>
<li>根据虚拟机网络编辑器中 <code>VMnet8</code> 网卡设置</li>
</ul>
</li>
<li>dns <ul>
<li>如 <code>223.5.5.5</code>，<code>8.8.8.8</code></li>
</ul>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<h3 id="3-磁盘分区（standard-partition）"><a href="#3-磁盘分区（standard-partition）" class="headerlink" title="3 磁盘分区（standard partition）"></a>3 磁盘分区（standard partition）</h3><ul>
<li><code>/boot</code><ul>
<li>引导分区，256Mb</li>
</ul>
</li>
<li><code>swap</code><ul>
<li>交换分区，</li>
<li>内存 &gt; 8G，swap = 8G，内存 &lt; 8G，swap = 内存 * 1.5</li>
</ul>
</li>
<li><code>/</code><ul>
<li>根分区，剩余大小</li>
</ul>
</li>
</ul>
<h3 id="4-关闭安全策略"><a href="#4-关闭安全策略" class="headerlink" title="4 关闭安全策略"></a>4 关闭安全策略</h3><ol>
<li><code>KDUMP</code></li>
<li><code>SECURITY POLICY</code></li>
</ol>
<h1 id="三-初始化配置"><a href="#三-初始化配置" class="headerlink" title="三 初始化配置"></a>三 初始化配置</h1><h2 id="3-1-配置-yum-源"><a href="#3-1-配置-yum-源" class="headerlink" title="3.1 配置 yum 源"></a>3.1 配置 yum 源</h2><h3 id="1-安装-wget"><a href="#1-安装-wget" class="headerlink" title="1 安装 wget"></a>1 安装 wget</h3><ul>
<li><code>yum install wget -y</code></li>
</ul>
<h3 id="2-备份"><a href="#2-备份" class="headerlink" title="2 备份"></a>2 备份</h3><ul>
<li><code>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</code></li>
</ul>
<h3 id="3-下载基本-yum-源"><a href="#3-下载基本-yum-源" class="headerlink" title="3 下载基本 yum 源"></a>3 下载基本 yum 源</h3><ol>
<li><code>curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></li>
<li><code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></li>
</ol>
<h3 id="4-下载扩展-yum-源-EPEL"><a href="#4-下载扩展-yum-源-EPEL" class="headerlink" title="4 下载扩展 yum 源 EPEL"></a>4 下载扩展 yum 源 EPEL</h3><ul>
<li><code>wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</code></li>
</ul>
<h2 id="3-2-更新系统和软件"><a href="#3-2-更新系统和软件" class="headerlink" title="3.2 更新系统和软件"></a>3.2 更新系统和软件</h2><ul>
<li><code>yum update -y</code></li>
</ul>
<h2 id="3-3-安装企业运维常用基础工具包"><a href="#3-3-安装企业运维常用基础工具包" class="headerlink" title="3.3 安装企业运维常用基础工具包"></a>3.3 安装企业运维常用基础工具包</h2><h3 id="1-CentOS-6-amp-7-都要安装的"><a href="#1-CentOS-6-amp-7-都要安装的" class="headerlink" title="1 CentOS 6 &amp; 7 都要安装的"></a>1 CentOS 6 &amp; 7 都要安装的</h3><ul>
<li><code>yum install tree nmap dos2unix lrzsz nc lsof tcpdump htop iftop iotop sysstat nethogs -y</code></li>
</ul>
<table>
<thead>
<tr>
<th>软件包名</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>tree</code></td>
<td>树形结构显示文件和目录</td>
</tr>
<tr>
<td><code>nmap</code></td>
<td>扫描端口的工具</td>
</tr>
<tr>
<td><code>dos2unix</code></td>
<td>转换脚本格式的工具</td>
</tr>
<tr>
<td><code>lrzsz</code></td>
<td>包含上传（rz）和下载（sz）文件工具</td>
</tr>
<tr>
<td><code>nc</code></td>
<td>文件传输、端口检查工具</td>
</tr>
<tr>
<td><code>lsof</code></td>
<td>反查端口进程，以及服务开发文件工具</td>
</tr>
<tr>
<td><code>wget</code></td>
<td>网络下载工具</td>
</tr>
<tr>
<td><code>tcpdump</code></td>
<td>抓包、监听等重要排错工具</td>
</tr>
<tr>
<td><code>htop</code></td>
<td>系统进程相关信息查看工具</td>
</tr>
<tr>
<td><code>iftop</code></td>
<td>主机网卡宽带查看工具</td>
</tr>
<tr>
<td><code>sysstat</code></td>
<td>含有sar iostat 等重要系统性能查看工具</td>
</tr>
<tr>
<td><code>nethogs</code></td>
<td>显示进程的网络流量</td>
</tr>
</tbody></table>
<h3 id="2-CentOS-7-安装的"><a href="#2-CentOS-7-安装的" class="headerlink" title="2 CentOS 7 安装的"></a>2 CentOS 7 安装的</h3><ul>
<li><code>yum install psmisc net-tools bash-completion bash-completion-extras vim-enhanced -y</code></li>
</ul>
<table>
<thead>
<tr>
<th>软件包名</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>psmisc</code></td>
<td>含有 <code>killalll pstree</code> 等命令</td>
</tr>
<tr>
<td><code>net-tools</code></td>
<td>含有 <code>netstat ifconfig route arp</code> 等命令</td>
</tr>
<tr>
<td><code>bash-completion</code></td>
<td>tab补全功能工具包</td>
</tr>
<tr>
<td><code>bash-completion-extras</code></td>
<td>tab补全功能扩展工具包</td>
</tr>
<tr>
<td><code>vim-enhanced</code></td>
<td>vim</td>
</tr>
</tbody></table>
<h2 id="3-4-修改网卡名称"><a href="#3-4-修改网卡名称" class="headerlink" title="3.4 修改网卡名称"></a>3.4 修改网卡名称</h2><h3 id="1-安装系统时"><a href="#1-安装系统时" class="headerlink" title="1 安装系统时"></a>1 安装系统时</h3><ol>
<li>菜单界面 按 <code>tab</code></li>
<li>输入 <code>net.ifnames=0 biosdevname=0</code></li>
</ol>
<h3 id="2-安装系统后"><a href="#2-安装系统后" class="headerlink" title="2 安装系统后"></a>2 安装系统后</h3><ol>
<li>修改网卡配置文件内容及文件名 <code>/etc/sysconfig/netword-scripts/ens33</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 修改内容</span><br><span class="line">	vim /etc/sysconfig/netword-scripts/ens33</span><br><span class="line">	name=eth0</span><br><span class="line">	device=eth0</span><br><span class="line">2 修改文件名</span><br><span class="line">	mv /etc/sysconfig/netword-scripts/ens33 /etc/sysconfig/netword-scripts/eth0</span><br></pre></td></tr></table></figure></li>
<li>修改网卡名称规则内核文件 <code>/etc/default/grub</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/default/grub</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;rhgb quiet&quot; 改为</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;net.ifnames=0 biosdevname=0 rhgb quiet&quot;</span><br><span class="line">```	</span><br><span class="line">3. 系统重新加载 grup 配置文件</span><br><span class="line">	* `grub2-mkconfig -o /boot/grub2/grub.cfg`</span><br><span class="line"></span><br><span class="line">## 3.5 系统优化</span><br><span class="line">### 1 selinux</span><br><span class="line">#### 1 概述</span><br><span class="line">* `Security-Enhanced Linux`</span><br><span class="line">	* 它是一个 Linux 内核模块，也是 Linux 的一个安全子系统。</span><br><span class="line">	* Selinux 用于对 root 用户的权限进行控制</span><br><span class="line"></span><br><span class="line">#### 2 操作</span><br><span class="line">1. `getenforce`</span><br><span class="line">	* 查看状态</span><br><span class="line">2. `setenforce 0`</span><br><span class="line">	* 临时关闭</span><br><span class="line">3. `/etc/selinux/config`</span><br></pre></td></tr></table></figure>
<h1 id="SELINUX-enforcing"><a href="#SELINUX-enforcing" class="headerlink" title="SELINUX=enforcing"></a>SELINUX=enforcing</h1>SELINUX=disabled # 永久关闭<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 2 关闭防火墙</span><br><span class="line">1. `systemctl stop firewalld`</span><br><span class="line">2. `systemctl disable firewalld`</span><br><span class="line"></span><br><span class="line">### 3 字符编码</span><br><span class="line">1. 修改环境变量 `LANG`（优先级高）</span><br><span class="line">2. 修改 `/etc/locale.conf`</span><br><span class="line">3. `localectl set-locale en_US.UTF-8`</span><br><span class="line"></span><br><span class="line">### 4 优化远程连接速度</span><br><span class="line">1. 修改ssh服务配置文件 `/etc/ssh/sshd_config`</span><br></pre></td></tr></table></figure>
79  GSSAPIAuthentication no<br>116 UseDNS no<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2. 配置本地 hosts 文件 `/etc/hosts`</span><br></pre></td></tr></table></figure>
服务器ip 服务器主机名hostname</li>
<li>168.13.24 anyeansan<br>```</li>
<li>重启 ssh 服务<ul>
<li><code>systemctl restart sshd</code></li>
</ul>
</li>
</ol>
<h3 id="4-配置Shell命令提示符样式-PS1"><a href="#4-配置Shell命令提示符样式-PS1" class="headerlink" title="4 配置Shell命令提示符样式 PS1"></a>4 配置Shell命令提示符样式 PS1</h3><h4 id="1-设置格式"><a href="#1-设置格式" class="headerlink" title="1 设置格式"></a>1 设置格式</h4><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>\h</code></td>
<td>hostname（short）</td>
</tr>
<tr>
<td><code>\H</code></td>
<td>hostname（full）</td>
</tr>
<tr>
<td><code>\w</code></td>
<td>current working directory</td>
</tr>
<tr>
<td><code>\W</code></td>
<td>current working directory（basename）</td>
</tr>
<tr>
<td><code>\t</code></td>
<td>24小时格式显示时间 <code>HH:MM:SS</code></td>
</tr>
<tr>
<td><code>\d</code></td>
<td>日期 <code>weekday month date</code></td>
</tr>
<tr>
<td><code>\u</code></td>
<td>当前用户名</td>
</tr>
<tr>
<td><code>\$</code></td>
<td>root 显示 <code>#</code> 普通用户显示 <code>$</code></td>
</tr>
</tbody></table>
<h4 id="2-颜色"><a href="#2-颜色" class="headerlink" title="2 颜色"></a>2 颜色</h4><ul>
<li><code>\[\e[F;Bm\]内容\[\e[0m\]</code><ul>
<li><code>\[\e[F;Bm\]</code><ul>
<li>颜色开始<ul>
<li>F<ul>
<li>表示字体颜色，30~37</li>
</ul>
</li>
<li>B<ul>
<li>表示背景颜色，40~47</li>
</ul>
</li>
</ul>
</li>
<li>特殊显示<ul>
<li>0 关闭颜色</li>
<li>1 高亮</li>
<li>4 下划线</li>
<li>5 闪烁</li>
<li>7 反白</li>
<li>8 颜色不可见</li>
</ul>
</li>
</ul>
</li>
<li><code>\[\e[0m\]</code><ul>
<li>颜色结束</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="3-式样"><a href="#3-式样" class="headerlink" title="3 式样"></a>3 式样</h3><ol>
<li><code>export PS1=&#39;\[\e[32;1m\][\u@\h \W]\$ \[\e[0m\]&#39;</code></li>
<li><code>export PS1=&#39;\[\e[32;1m\][\u@\h \[\e[34;1m\]\W\[\e[32;1m\]]\$ \[\e[0m\]&#39;</code></li>
</ol>
<h1 id="四-远程连接"><a href="#四-远程连接" class="headerlink" title="四 远程连接"></a>四 远程连接</h1><h2 id="4-1-远程连接软件"><a href="#4-1-远程连接软件" class="headerlink" title="4.1 远程连接软件"></a>4.1 远程连接软件</h2><table>
<thead>
<tr>
<th>软件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>xShell</code></td>
<td>免费（实用）</td>
</tr>
<tr>
<td><code>ScureCRT</code></td>
<td>收费</td>
</tr>
<tr>
<td><code>Putty</code></td>
<td>免费 功能简单</td>
</tr>
</tbody></table>
<h2 id="4-2-xShell-相关配置"><a href="#4-2-xShell-相关配置" class="headerlink" title="4.2 xShell 相关配置"></a>4.2 xShell 相关配置</h2><h3 id="1-窗口外观"><a href="#1-窗口外观" class="headerlink" title="1 窗口外观"></a>1 窗口外观</h3><p><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E7%AA%97%E5%8F%A3%E5%A4%96%E8%A7%82.png" alt=""></p>
<h3 id="2-默认会话属性"><a href="#2-默认会话属性" class="headerlink" title="2 默认会话属性"></a>2 默认会话属性</h3><p><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%AF%9D%E5%B1%9E%E6%80%A7-01.png" alt=""><br><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%AF%9D%E5%B1%9E%E6%80%A7-02.png" alt=""><br><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%AF%9D%E5%B1%9E%E6%80%A7-03.png" alt=""><br><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%AF%9D%E5%B1%9E%E6%80%A7-04.png" alt=""><br><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%AF%9D%E5%B1%9E%E6%80%A7-05.png" alt=""><br><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%AF%9D%E5%B1%9E%E6%80%A7-06.png" alt=""><br><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%AF%9D%E5%B1%9E%E6%80%A7-07.png" alt=""><br><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E9%BB%98%E8%AE%A4%E4%BC%9A%E8%AF%9D%E5%B1%9E%E6%80%A7-08.png" alt=""></p>
<h3 id="3-使用密钥连接"><a href="#3-使用密钥连接" class="headerlink" title="3 使用密钥连接"></a>3 使用密钥连接</h3><ol>
<li>将公钥上传至服务端 <code>~/.ssh/authorized_keys</code>，权限 <code>600</code></li>
<li>配置 xShell<br><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/xShell/%E5%AF%86%E9%92%A5%E8%BF%9E%E6%8E%A5.png" alt=""></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 命令</title>
    <url>/anyeansan.github.io/2020/03/29/Linux-%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="一-帮助命令"><a href="#一-帮助命令" class="headerlink" title="一 帮助命令"></a>一 帮助命令</h1><h2 id="1-1-man（manual）"><a href="#1-1-man（manual）" class="headerlink" title="1.1 man（manual）"></a>1.1 man（manual）</h2><ul>
<li><code>man [OPTION] 命令</code><ul>
<li>查看外部命令的功能 参数 帮助信息等等</li>
<li><code>OPTION</code><ul>
<li><code>1</code><ul>
<li>查看命令帮助文档</li>
</ul>
</li>
<li><code>5</code><ul>
<li>查看配置帮助文档，当命令和配置同名时，使用15来区分，如<code>passwd</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>文档操作</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>空格, f</code></td>
<td>向下翻页</td>
</tr>
<tr>
<td><code>b</code></td>
<td>向上翻页</td>
</tr>
<tr>
<td><code>回车</code></td>
<td>向下一行</td>
</tr>
<tr>
<td><code>k</code></td>
<td>向上一行</td>
</tr>
<tr>
<td><code>/key</code></td>
<td>向下查找key，n 下一个匹配，N 上一个匹配</td>
</tr>
<tr>
<td><code>?key</code></td>
<td>向上查找key</td>
</tr>
</tbody></table>
<h2 id="1-2-–help"><a href="#1-2-–help" class="headerlink" title="1.2 –help"></a>1.2 –help</h2><ul>
<li><code>命令 --help</code><ul>
<li>查看外部命令帮助</li>
</ul>
</li>
</ul>
<h2 id="1-3-help"><a href="#1-3-help" class="headerlink" title="1.3 help"></a>1.3 help</h2><ul>
<li><code>help 命令</code><ul>
<li>查看shell内置命令的帮助信息，如<code>cd, pwd, history..</code></li>
</ul>
</li>
</ul>
<h1 id="二-开关机命令"><a href="#二-开关机命令" class="headerlink" title="二 开关机命令"></a>二 开关机命令</h1><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>shutdown</code></td>
<td>开启一个一分钟后关机的计划</td>
</tr>
<tr>
<td><code>shutdown -c</code></td>
<td>取消关机计划</td>
</tr>
<tr>
<td><code>shutdown -h Time</code></td>
<td>指定时间关机，Time 可以是 <code>now</code> 或具体时间</td>
</tr>
<tr>
<td><code>shutdown -r Time</code></td>
<td>指定时间重启</td>
</tr>
<tr>
<td><code>systemctl poweroff</code></td>
<td>关机</td>
</tr>
<tr>
<td><code>systemctl reboot</code></td>
<td>重启</td>
</tr>
</tbody></table>
<h1 id="三-其它命令"><a href="#三-其它命令" class="headerlink" title="三 其它命令"></a>三 其它命令</h1><h2 id="3-1-echo（display-a-line-of-text）"><a href="#3-1-echo（display-a-line-of-text）" class="headerlink" title="3.1 echo（display a line of text）"></a>3.1 echo（display a line of text）</h2><ul>
<li><code>echo [OPTION] String</code><ul>
<li>显示文本</li>
<li><code>OPTION</code><ul>
<li><code>-n</code><ul>
<li>不换行输出</li>
</ul>
</li>
<li><code>-e</code><ul>
<li>支持转义字符<code>\b \t \r \n \e(escape键)...</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-2-xargs"><a href="#3-2-xargs" class="headerlink" title="3.2 xargs"></a>3.2 xargs</h2><ul>
<li><code>xargs [OPTION] &lt; input</code><ul>
<li>将标准输入的所有行一行显示，xargs 会自动忽略别名</li>
<li><code>OPTION</code><ul>
<li><code>-n num</code><ul>
<li>每一行显示原num行</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-3-column"><a href="#3-3-column" class="headerlink" title="3.3 column"></a>3.3 column</h2><ul>
<li><code>column -t</code><ul>
<li>按表格显示</li>
</ul>
</li>
</ul>
<h2 id="3-4-tr"><a href="#3-4-tr" class="headerlink" title="3.4 tr"></a>3.4 tr</h2><ul>
<li><code>tr  oldStr newStr</code><ul>
<li>从标准输入中替换、缩减或删除字符，并将结果写到标准输出</li>
<li>tr 是一对一的替换<ol>
<li>oldStr 字符数 &lt; newStr 字符数，多的新字符忽略，如 <code>echo &quot;abc&quot;|tr &quot;abc&quot; &quot;12345&quot;</code>，结果为 123</li>
<li>oldStr 字符数 &gt; newStr 字符数，多的旧字符都用最后一个新字符替换，如 <code>echo &quot;abcde&quot;|tr &quot;abcde&quot; &quot;123&quot;</code>，结果为 12333</li>
<li>如果 oldStr 中有重复字符则使用最后一个对应的新字符，如<code>echo &quot;abcdba|tr &quot;abcdba&quot; &quot;123456&quot;</code>，结果为 653456        </li>
</ol>
</li>
</ul>
</li>
</ul>
<h2 id="3-5-tee"><a href="#3-5-tee" class="headerlink" title="3.5 tee"></a>3.5 tee</h2><ul>
<li><code>tee [-a] File</code><ul>
<li>读取标准输入的数据，并将其内容输出成文件</li>
<li><code>-a</code><ul>
<li>追加`</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-6-read"><a href="#3-6-read" class="headerlink" title="3.6 read"></a>3.6 read</h2><ul>
<li><code>read [OPTION] 变量名</code><ul>
<li>接收标准输入并赋值给变量</li>
<li><code>OPTION</code><ul>
<li><code>-p &quot;提示信息&quot;</code><ul>
<li>在等待read输入时，输出提示信息</li>
</ul>
</li>
<li><code>-t 秒数</code><ul>
<li>read命令会一直等待用户输入，指定等待时间</li>
</ul>
</li>
<li><code>-n 字符数</code><ul>
<li>read命令只接受指定的字符数</li>
</ul>
</li>
<li><code>-s</code><ul>
<li>隐藏输入的数据，适用于机密信息的输入</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-7-cut"><a href="#3-7-cut" class="headerlink" title="3.7 cut"></a>3.7 cut</h2><ul>
<li><code>cut [OPTION] [File]</code><ul>
<li>按“列”提取文本字符</li>
<li><code>OPTION</code><ul>
<li><code>-f 列号</code><ul>
<li>提取第几列</li>
</ul>
</li>
<li><code>-d 分隔符</code><ul>
<li>按照指定分隔符分割列</li>
<li>默认为制表符</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-8-sort"><a href="#3-8-sort" class="headerlink" title="3.8 sort"></a>3.8 sort</h2><ul>
<li><code>sort [OPTION] [File]</code><ul>
<li><code>OPTION</code><ul>
<li><code>-f, --ignore-case</code><ul>
<li>忽略大小写</li>
</ul>
</li>
<li><code>-n, --numeric-sort</code><ul>
<li>依照数值的大小排序</li>
</ul>
</li>
<li><code>-r, --reverse</code><ul>
<li>反向排序</li>
</ul>
</li>
<li><code>-t, --field-separator=SEP</code><ul>
<li>指定排序时所用的分隔符</li>
</ul>
</li>
<li><code>-k n[,m]</code><ul>
<li>按照指定的字段范围排序。从第n字段开始，m字段结束（默认到行尾）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-9-history"><a href="#3-9-history" class="headerlink" title="3.9 history"></a>3.9 history</h2><ul>
<li><code>history [OPTION] [历史命令保存文件]</code><ul>
<li><code>OPTION</code><ul>
<li><code>-c</code><ul>
<li>清空历史命令</li>
</ul>
</li>
<li><code>-w</code><ul>
<li>把缓存中的历史命令写入历史命令保存文件</li>
<li>默认用户正常退出后才会保存</li>
<li>默认保存在家目录下<code>~/.bash_history</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="3-10-dd"><a href="#3-10-dd" class="headerlink" title="3.10 dd"></a>3.10 dd</h2><ul>
<li><code>dd if=输入文件 of=输出文件 bs=块大小 count=块个数</code><ul>
<li>按照指定大小和个数的数据块来复制文件或转换文件</li>
<li><code>if</code>（input file）<ul>
<li>指定输入文件或设备</li>
<li>如果不指定if，默认就会从 stdin 中读取输入</li>
</ul>
</li>
<li><code>of</code>（output file）<ul>
<li>指定输出文件或设备</li>
<li>如果不指定of，默认就会将 stdout 作为默认输出</li>
</ul>
</li>
<li><code>bs</code>（block size）<ul>
<li>数据块 block 大小，默认单位为 byte</li>
</ul>
</li>
<li><code>count</code><ul>
<li>数据块 block 数量</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="四-文件-amp-目录命令"><a href="#四-文件-amp-目录命令" class="headerlink" title="四 文件 &amp; 目录命令"></a>四 文件 &amp; 目录命令</h1><h2 id="4-1-pwd（print-working-directory）"><a href="#4-1-pwd（print-working-directory）" class="headerlink" title="4.1 pwd（print working directory）"></a>4.1 pwd（print working directory）</h2><ul>
<li><code>pwd</code><ul>
<li>显示当前工作目录</li>
</ul>
</li>
</ul>
<h2 id="4-2-cd（change-directory）"><a href="#4-2-cd（change-directory）" class="headerlink" title="4.2 cd（change directory）"></a>4.2 cd（change directory）</h2><ul>
<li><code>cd dir</code><ul>
<li>切换目录</li>
<li><code>dir</code><ul>
<li><code>.</code><ul>
<li>当前目录</li>
</ul>
</li>
<li><code>..</code><ul>
<li>上级目录</li>
</ul>
</li>
<li><code>~</code><ul>
<li>根目录</li>
</ul>
</li>
<li><code>-</code><ul>
<li>前一个目录</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-3-mkdir（make-directories）"><a href="#4-3-mkdir（make-directories）" class="headerlink" title="4.3 mkdir（make directories）"></a>4.3 mkdir（make directories）</h2><ul>
<li><code>mkdir [OPTION] dir</code><ul>
<li>创建一个或多个空目录，linux一切皆文件，目录也是文件，目录与文件不能重名</li>
<li><code>OPTION</code><ul>
<li><code>-p, --parents</code><ul>
<li>递归创建</li>
<li>目录有多层时，如果父目录不存在，首先创建父目录</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-4-ls（list-directory-contents）"><a href="#4-4-ls（list-directory-contents）" class="headerlink" title="4.4 ls（list directory contents）"></a>4.4 ls（list directory contents）</h2><ul>
<li><code>ls [OPTION] [File]</code><ul>
<li>显示文件名或者目录下的内容（默认为当前目录）</li>
<li><code>OPTION</code><ul>
<li><code>-a</code>, <code>--all</code><ul>
<li>显示目录下所有文件，包含隐藏文件（以 <code>.</code> 开头的文件）</li>
</ul>
</li>
<li><code>-A</code>, <code>--almost-all</code><ul>
<li>同 <code>-a</code> 但不包含 <code>.</code> 和 <code>..</code></li>
</ul>
</li>
<li><code>-l</code><ul>
<li>显示详细信息</li>
</ul>
</li>
<li><code>-d</code>, <code>--directory</code><ul>
<li>显示目录本身的信息（而非目录下的内容）</li>
</ul>
</li>
<li><code>-t</code><ul>
<li>根据最后修改时间排序，newest first</li>
</ul>
</li>
<li><code>-r</code>, <code>--reverse</code><ul>
<li>反向排序</li>
</ul>
</li>
<li><code>-h</code>, <code>--human-readable</code><ul>
<li>以人类可读的信息显示大小</li>
</ul>
</li>
<li><code>-S</code><ul>
<li>文件从大到小排序</li>
</ul>
</li>
<li><code>-i</code>, <code>--inode</code><ul>
<li>显示inode number</li>
</ul>
</li>
<li><code>p</code><ul>
<li>区分文件和目录（目录名后添加 <code>/</code>）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-5-tree（list-contents-of-directories-in-a-tree-like-format）"><a href="#4-5-tree（list-contents-of-directories-in-a-tree-like-format）" class="headerlink" title="4.5 tree（list contents of directories in a tree-like format）"></a>4.5 tree（list contents of directories in a tree-like format）</h2><ul>
<li><code>tree [OPTION] dir</code><ul>
<li>树形显示目录，需要安装 <code>tree</code> 软件</li>
<li><code>OPTION</code><ul>
<li><code>-L level</code><ul>
<li>指定显示层级，如<code>-L 1</code> 显示一层</li>
</ul>
</li>
<li><code>-d</code><ul>
<li>只显示目录</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-6-touch（change-file-timestamps）"><a href="#4-6-touch（change-file-timestamps）" class="headerlink" title="4.6 touch（change file timestamps）"></a>4.6 touch（change file timestamps）</h2><ul>
<li><code>touch File</code><ul>
<li>创建一个或多个空文件，如果文件存在则修改文件的最后访问时间和最后修改时间</li>
<li><code>File</code><ul>
<li>可以使用区间 <code>{begin..end}</code></li>
<li>如<code>touch {1..10}.txt</code>，即创建<code>1.txt 2.txt ...10.txt</code>10个文件</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-7-cp（copy-files-and-directories）"><a href="#4-7-cp（copy-files-and-directories）" class="headerlink" title="4.7 cp（copy files and directories）"></a>4.7 cp（copy files and directories）</h2><ul>
<li><code>cp [OPTION] Source Destdir</code><ul>
<li>复制一个或多个文件到指定目录</li>
<li><code>OPTION</code><ul>
<li><code>-r</code>, <code>--recursive</code><ul>
<li>递归复制，用于复制目录</li>
</ul>
</li>
<li><code>-p</code><ul>
<li>复制时保留文件属性（所有者、权限信息、时间…）</li>
</ul>
</li>
<li><code>-d</code><ul>
<li>复制时保留链接</li>
</ul>
</li>
<li><code>-a</code><ul>
<li>等同于 <code>-dpr</code> </li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><code>cp test.txt{,.bak}</code><ul>
<li>例用 <code>{}</code> 的结合特性快捷复制，等价于 <code>cp test.txt test.txt.bak</code></li>
</ul>
</li>
</ul>
<h2 id="4-8-rm（remove-empty-directories）"><a href="#4-8-rm（remove-empty-directories）" class="headerlink" title="4.8 rm（remove empty directories）"></a>4.8 rm（remove empty directories）</h2><ul>
<li><code>rm [OPTION] File</code><ul>
<li>删除一个或多个文件</li>
<li><code>OPTION</code><ul>
<li><code>-r</code>, <code>--recursive</code><ul>
<li>递归删除，用于删除目录</li>
</ul>
</li>
<li><code>-f</code>, <code>--force</code><ul>
<li>确认</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-9-mv（move-rename-files）"><a href="#4-9-mv（move-rename-files）" class="headerlink" title="4.9 mv（move (rename) files）"></a>4.9 mv（move (rename) files）</h2><ul>
<li><code>mv Source Dest</code><ul>
<li>如果不在同一个目录则是剪切</li>
<li>如果在同一个目录则是重命名</li>
</ul>
</li>
</ul>
<h2 id="4-10-cat（concatenate-files-and-print-on-the-standard-output）"><a href="#4-10-cat（concatenate-files-and-print-on-the-standard-output）" class="headerlink" title="4.10 cat（concatenate files and print on the standard output）"></a>4.10 cat（concatenate files and print on the standard output）</h2><ul>
<li><code>cat [OPTION] File</code><ul>
<li>查看文件内容</li>
<li><code>OPTION</code><ul>
<li><code>-n</code>, <code>--number</code><ul>
<li>显示行号</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><code>tac File</code><ul>
<li>反向查看内容</li>
</ul>
</li>
</ul>
<h2 id="4-11-more（file-perusal-filter-for-crt-viewing）"><a href="#4-11-more（file-perusal-filter-for-crt-viewing）" class="headerlink" title="4.11 more（file perusal filter for crt viewing）"></a>4.11 more（file perusal filter for crt viewing）</h2><ul>
<li><code>more File</code><ul>
<li>分页显示内容，只能向下</li>
</ul>
</li>
</ul>
<h2 id="4-12-less（opposite-of-more）"><a href="#4-12-less（opposite-of-more）" class="headerlink" title="4.12 less（opposite of more）"></a>4.12 less（opposite of more）</h2><ul>
<li><code>less [OPTION] File</code><ul>
<li>分页显示内容，可向上向下</li>
<li><code>OPTION</code><ul>
<li><code>-N</code>, <code>--LINE-NUMBERS</code><ul>
<li>显示行号</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>指令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>f</code></td>
<td>下一页</td>
</tr>
<tr>
<td><code>b</code></td>
<td>上一页</td>
</tr>
<tr>
<td><code>回车</code></td>
<td>下一行</td>
</tr>
<tr>
<td><code>k</code></td>
<td>上一行</td>
</tr>
<tr>
<td><code>g</code></td>
<td>跳到第一行</td>
</tr>
<tr>
<td><code>G</code></td>
<td>跳到最后一行</td>
</tr>
<tr>
<td><code>p num%</code></td>
<td>跳到百分之num</td>
</tr>
</tbody></table>
<h2 id="4-13-head（output-the-first-part-of-files）"><a href="#4-13-head（output-the-first-part-of-files）" class="headerlink" title="4.13 head（output the first part of files）"></a>4.13 head（output the first part of files）</h2><ul>
<li><code>head [OPTION] File</code><ul>
<li>默认显示前10行</li>
<li><code>OPTION</code><ul>
<li><code>-n</code><ul>
<li>显示前 n 行</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-14-tail（output-the-last-part-of-files）"><a href="#4-14-tail（output-the-last-part-of-files）" class="headerlink" title="4.14 tail（output the last part of files）"></a>4.14 tail（output the last part of files）</h2><ul>
<li><code>tail [OPTION] file</code><ul>
<li>默认显示后10行</li>
<li><code>OPTION</code><ul>
<li><code>-n</code><ul>
<li>显示后n行</li>
</ul>
</li>
<li><code>-f</code>, <code>--follow</code><ul>
<li>实时监控文件尾部变化，如查看日志</li>
<li>如果文件被删除或移动，没有信息提示，想要监控需要重新追踪</li>
</ul>
</li>
<li><code>-F</code><ul>
<li>实时监控文件尾部变化</li>
<li>如果文件被删除或移动，有信息提示，如果文件恢复会继续追踪</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-15-file（determine-file-type）"><a href="#4-15-file（determine-file-type）" class="headerlink" title="4.15 file（determine file type）"></a>4.15 file（determine file type）</h2><ul>
<li><code>file [OPTION] File</code><ul>
<li>查看文件类型及编码</li>
<li><code>OPTION</code><ul>
<li><code>-i</code><ul>
<li>查看文件MIME类型及编码</li>
</ul>
</li>
<li><code>-L</code><ul>
<li>查看软链接文件时，查看的是软链接指向的目标文件的信息</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-16-diff（compare-files-line-by-line）"><a href="#4-16-diff（compare-files-line-by-line）" class="headerlink" title="4.16 diff（compare files line by line）"></a>4.16 diff（compare files line by line）</h2><ul>
<li><code>diff [OPTION] File</code><ul>
<li>比较文件内容的差异</li>
<li><code>OPTION</code><ul>
<li><code>-q</code><ul>
<li>仅输出文件是否有差异，不报告详细差异</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-17-stat"><a href="#4-17-stat" class="headerlink" title="4.17 stat"></a>4.17 stat</h2><ul>
<li><code>stat File</code><ul>
<li>查看文件 inode 信息</li>
</ul>
</li>
</ul>
<h2 id="4-18-wc"><a href="#4-18-wc" class="headerlink" title="4.18 wc"></a>4.18 wc</h2><ul>
<li><code>wc [OPTION] FILE | Input</code><ul>
<li>统计行数、字数、字节数</li>
<li><code>OPTION</code><ul>
<li><code>-c</code><ul>
<li>统计字节数</li>
</ul>
</li>
<li><code>-w</code><ul>
<li>统计单词数</li>
</ul>
</li>
<li><code>-l</code><ul>
<li>统计行数</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4-19-rename"><a href="#4-19-rename" class="headerlink" title="4.19 rename"></a>4.19 rename</h2><ul>
<li><code>rename expr replacement File</code><ul>
<li>将替换文件中匹配部分</li>
<li><code>expr</code><ul>
<li>File 中需要重命名的部分</li>
</ul>
</li>
<li><code>replacement</code><ul>
<li>expression 修改成的结果</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="五-时间命令"><a href="#五-时间命令" class="headerlink" title="五 时间命令"></a>五 时间命令</h1><h2 id="5-1-date"><a href="#5-1-date" class="headerlink" title="5.1 date"></a>5.1 date</h2><ul>
<li><code>date [OPTION] [Format]</code><ul>
<li>以默认格式查看时间</li>
<li><code>OPTION</code><ul>
<li><code>-s</code><ul>
<li>修改时间</li>
</ul>
</li>
</ul>
</li>
<li><code>Format</code><ul>
<li><code>&quot;+%y-%m-%d %H:%M:%S&quot;</code><ul>
<li><code>Y-M-D H:M:S</code></li>
</ul>
</li>
<li><code>+%F</code><ul>
<li><code>full date</code> 等价于 <code>%Y-%m-%d</code></li>
</ul>
</li>
<li><code>+%T</code><ul>
<li><code>time</code> 等价于 <code>%H:%M:%S</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="5-2-ntpdate"><a href="#5-2-ntpdate" class="headerlink" title="5.2 ntpdate"></a>5.2 ntpdate</h2><ul>
<li><code>ntpdate ip</code><ul>
<li>时间同步，需要安装 <code>ntpdate</code> 软件包</li>
<li><code>ip</code>（ntp 服务器）<ul>
<li><code>ntp.aliyun.com</code></li>
<li><code>cn.pool.ntp.org</code></li>
<li><code>cn.ntp.org.cn</code></li>
<li><code>time.asia.apple.com</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="六-打包压缩解压命令"><a href="#六-打包压缩解压命令" class="headerlink" title="六 打包压缩解压命令"></a>六 打包压缩解压命令</h1><h2 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h2><ol>
<li>Linux 中打包文件一般以 <code>.tar</code> 结尾，压缩命令一般以<code>.gz</code>结尾</li>
<li>通常打包和压缩是一起进行的，打包并压缩后的文件后缀一般为 <code>.tar.gz</code></li>
</ol>
<h2 id="6-2-打包压缩"><a href="#6-2-打包压缩" class="headerlink" title="6.2 打包压缩"></a>6.2 打包压缩</h2><ul>
<li><code>tar -zcvf 压缩包 文件</code><ul>
<li>将一个或多个文件打包压缩</li>
<li><code>-z, --gzip</code><ul>
<li>使用Gzip压缩，后缀名建议<code>.tar.gz</code></li>
</ul>
</li>
<li><code>-c, --create</code><ul>
<li>创建压缩包文件</li>
</ul>
</li>
<li><code>-v, --verbose</code><ul>
<li>显示过程</li>
</ul>
</li>
<li><code>-f, --file=</code><ul>
<li>指定压缩包文件路径</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="6-3-解压"><a href="#6-3-解压" class="headerlink" title="6.3 解压"></a>6.3 解压</h2><ul>
<li><code>tar -xvf 压缩包 [-C 解压路径]</code><ul>
<li>默认解压到当前路径</li>
<li><code>x</code>, <code>--extract</code>, <code>--get</code><ul>
<li>解压</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="6-4-查看压缩包中的文件"><a href="#6-4-查看压缩包中的文件" class="headerlink" title="6.4 查看压缩包中的文件"></a>6.4 查看压缩包中的文件</h2><ul>
<li><code>tar -tf 压缩包</code><ul>
<li><code>-t</code>, <code>--list</code></li>
</ul>
</li>
</ul>
<h1 id="七-搜索命令"><a href="#七-搜索命令" class="headerlink" title="七 搜索命令"></a>七 搜索命令</h1><h2 id="7-1-find（search-for-files-in-a-directory-hierarchy）"><a href="#7-1-find（search-for-files-in-a-directory-hierarchy）" class="headerlink" title="7.1 find（search for files in a directory hierarchy）"></a>7.1 find（search for files in a directory hierarchy）</h2><ul>
<li><code>find [路径] [条件] [操作]</code><ul>
<li>在指定路径根据条件查找文件，并对找到的文件执行指定操作</li>
<li><code>路径</code><ul>
<li>find 命令查找路径，默认为当前目录</li>
</ul>
</li>
<li><code>条件</code><ul>
<li>查找的条件，可以有多个</li>
<li><code>-a</code><ul>
<li>多个条件 逻辑与 关系，默认</li>
</ul>
</li>
<li><code>-o</code><ul>
<li>逻辑或</li>
</ul>
</li>
<li><code>-not</code><ul>
<li>逻辑非</li>
</ul>
</li>
</ul>
</li>
<li><code>操作</code><ul>
<li><code>-print</code><ul>
<li>打印找到的结果，默认</li>
</ul>
</li>
<li><code>-exec 命令 {} \;</code><ul>
<li>对匹配的结果逐个执行命令<ul>
<li><code>{}</code><ul>
<li>代表查到的内容</li>
</ul>
</li>
<li><code>\;</code><ul>
<li>匹配的文件可能有多个，即要执行多次命令，用分号隔开</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>条件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-name Pattern</code></td>
<td>根据文件名查找（精准匹配，可以用正则）</td>
</tr>
<tr>
<td><code>-iname Pattern</code></td>
<td>根据文件名查找，不区分大小写</td>
</tr>
<tr>
<td><code>-perm Mode</code></td>
<td>根据文件权限查找</td>
</tr>
<tr>
<td><code>-user User</code></td>
<td>根据文件属主查找</td>
</tr>
<tr>
<td><code>-group Group</code></td>
<td>根据文件属组查找</td>
</tr>
<tr>
<td><code>-type Type</code></td>
<td>根据文件类型查找</td>
</tr>
<tr>
<td><code>-size n/+n/-n</code></td>
<td>根据文件大小查找</td>
</tr>
<tr>
<td><code>-atime/ctime/mtime n/-n/+n</code></td>
<td>根据文件时间查找</td>
</tr>
<tr>
<td><code>-inum Num</code></td>
<td>根据文件 inode 号查找</td>
</tr>
<tr>
<td><code>-maxdepth level</code></td>
<td>指定目录查找层次深度</td>
</tr>
</tbody></table>
<h2 id="7-2-locate（find-files-by-name）"><a href="#7-2-locate（find-files-by-name）" class="headerlink" title="7.2 locate（find files by name）"></a>7.2 locate（find files by name）</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>此命令需要安装 <code>mlocate</code> 软件包</li>
<li>建立文件索引数据库，快速查找文件位置</li>
<li><code>/var/lib/mlocate/mlocate.db</code><ul>
<li>维护的数据库（文件资料库）</li>
</ul>
</li>
<li><code>/tmp</code> 不在数据库范围</li>
</ol>
<h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2 使用"></a>2 使用</h3><ol>
<li><code>updatedb</code><ul>
<li>更新数据库（建立文件和目录结构的对应关系）</li>
<li>如果没有更新过或者是新建立的文件，文件资料库没有，使用locate查找不到</li>
</ul>
</li>
<li><code>locate File</code><ul>
<li>查找文件绝对路径</li>
</ul>
</li>
</ol>
<h2 id="7-3-which（shows-the-full-path-of-shell-commands）"><a href="#7-3-which（shows-the-full-path-of-shell-commands）" class="headerlink" title="7.3 which（shows the full path of (shell) commands）"></a>7.3 which（shows the full path of (shell) commands）</h2><ul>
<li><code>which Command</code><ul>
<li>查看命令文件的绝对路径及别名信息</li>
<li>查找的范围是 <code>PATH</code> 所配置的路径</li>
</ul>
</li>
</ul>
<h2 id="7-4-whereis（locate-the-binary-source-and-manual-page-files-for-a-command）"><a href="#7-4-whereis（locate-the-binary-source-and-manual-page-files-for-a-command）" class="headerlink" title="7.4 whereis（locate the binary, source, and manual page files for a command）"></a>7.4 whereis（locate the binary, source, and manual page files for a command）</h2><ul>
<li><code>whereis Command</code><ul>
<li>查看命令文件的绝对路径及相关帮助文档绝对路径</li>
</ul>
</li>
</ul>
<h1 id="八-磁盘命令"><a href="#八-磁盘命令" class="headerlink" title="八 磁盘命令"></a>八 磁盘命令</h1><h2 id="8-1-df（report-file-system-disk-space-usage）"><a href="#8-1-df（report-file-system-disk-space-usage）" class="headerlink" title="8.1 df（report file system disk space usage）"></a>8.1 df（report file system disk space usage）</h2><ul>
<li><code>df [OPTION] [File]</code><ul>
<li>查看文件系统的磁盘空间使用信息及挂载信息</li>
<li><code>OPTION</code><ul>
<li><code>-a, --all</code><ul>
<li>显示所有文件系统信息，包括系统特有的 /proc、/sysfs 等文件系统</li>
</ul>
</li>
<li><code>-h, --human-readable</code><ul>
<li>使用人们习惯的 KB、MB 或 GB 等单位自行显示容量</li>
</ul>
</li>
<li><code>-k</code><ul>
<li>以 KB 为单位显示容量（默认）</li>
</ul>
</li>
<li><code>-m</code><ul>
<li>以 MB 为单位显示容量</li>
</ul>
</li>
<li><code>-T, --print-type</code><ul>
<li>显示文件系统类型</li>
</ul>
</li>
<li><code>-i, --inodes</code><ul>
<li>不用硬盘容量显示，而是以含有 inode 的数量来显示</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="8-2-du（disk-usage）"><a href="#8-2-du（disk-usage）" class="headerlink" title="8.2 du（disk usage）"></a>8.2 du（disk usage）</h2><ul>
<li><code>du [OPTION] [File]</code><ul>
<li>统计目录或文件所占磁盘空间大小</li>
<li>如果是目录，默认显示目录和子目录的磁盘占用量</li>
<li><code>OPTION</code><ul>
<li><code>-a, --all</code><ul>
<li>显示目录、子目录和子文件的磁盘占用量</li>
</ul>
</li>
<li><code>-s, --summarize</code><ul>
<li>只统计总磁盘占用量，而不列出子目录和子文件的磁盘占用量</li>
<li>即只显示目录的磁盘占用量</li>
</ul>
</li>
<li><code>-h, --human-readable</code><ul>
<li>以人类可读的单位显示磁盘占用量</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="注"><a href="#注" class="headerlink" title="注"></a>注</h3><ol>
<li><code>ls -l</code> 命令统计的是目录下的子文件名称和子目录名称所占大小</li>
<li><code>du</code> 命令统计占用磁盘空间</li>
<li>文件大小<ul>
<li>文件的实际大小，比如 <code>13KB</code></li>
</ul>
</li>
<li>文件占用磁盘空间<ol>
<li>文件占用磁盘空间取决于文件系统的 block 大小（linux 默认为 4 KB）</li>
<li>1 个block 只能被 1 个文件占用，如果 1 个 block 没有占满，其它空间也不能存储其它文件</li>
<li>1 个文件大小是 <code>13 KB</code>，<code>13 / 4 = 3.25</code>，文件占用磁盘空间就是 4 个block 即 <code>16 KB</code></li>
</ol>
</li>
</ol>
<h1 id="九-网络命令"><a href="#九-网络命令" class="headerlink" title="九 网络命令"></a>九 网络命令</h1><h2 id="9-1-curl"><a href="#9-1-curl" class="headerlink" title="9.1 curl"></a>9.1 curl</h2><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>crul url</code></td>
<td>访问一个网址，获取该网址的文本信息</td>
</tr>
<tr>
<td><code>curl -i url</code></td>
<td>获取该网址的文本信息以及协议头部信息</td>
</tr>
<tr>
<td><code>curl -I url</code></td>
<td>只获取请求头</td>
</tr>
<tr>
<td><code>curl -O url</code></td>
<td>下载指定资源到当前目录，名称默认，<code>--progress</code> 显示进度</td>
</tr>
<tr>
<td><code>curl -o name url</code></td>
<td>下载指定资源到当前目录，名称name，</td>
</tr>
</tbody></table>
<h2 id="9-2-wget"><a href="#9-2-wget" class="headerlink" title="9.2 wget"></a>9.2 wget</h2><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>wget url</code></td>
<td>下载文件</td>
</tr>
<tr>
<td><code>wget -O name url</code></td>
<td>下载文件并指定名称为name</td>
</tr>
</tbody></table>
<h2 id="9-3-net-tools-amp-iproute2"><a href="#9-3-net-tools-amp-iproute2" class="headerlink" title="9.3 net-tools &amp; iproute2"></a>9.3 net-tools &amp; iproute2</h2><p><img src="https://gitee.com/3noanswer/npics/raw/master/Linux/Linux-Nettools-vs-Iproute2.webp" alt=""></p>
<h3 id="1-netstat"><a href="#1-netstat" class="headerlink" title="1 netstat"></a>1 netstat</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>netstat -lntup</code></td>
<td>查看本机监听的端口</td>
</tr>
<tr>
<td><code>netstat -an</code></td>
<td>查看本机所有的网络连接</td>
</tr>
<tr>
<td><code>netstat -rn</code></td>
<td>查看本机路由表</td>
</tr>
</tbody></table>
<h3 id="2-route"><a href="#2-route" class="headerlink" title="2 route"></a>2 route</h3><h4 id="1-查"><a href="#1-查" class="headerlink" title="1 查"></a>1 查</h4><ul>
<li><code>route [-nee]</code><ul>
<li>查看路由表信息</li>
<li><code>-n</code><ul>
<li>不使用名字而使用IP和Port</li>
</ul>
</li>
<li><code>-ee</code><ul>
<li>更详细的信息</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="2-增删默认路由"><a href="#2-增删默认路由" class="headerlink" title="2 增删默认路由"></a>2 增删默认路由</h4><ol>
<li><code>route add/del  default gw 网关</code></li>
<li><code>route add/del  default dev 接口</code></li>
</ol>
<h4 id="3-增删网络路由"><a href="#3-增删网络路由" class="headerlink" title="3 增删网络路由"></a>3 增删网络路由</h4><ol>
<li><code>route add/del -net 目标网络地址 netmask 子网掩码 gw 网关</code></li>
<li><code>route add/del -net 目标网络地址 netmask 子网掩码 dev 接口</code></li>
</ol>
<h4 id="4-增删主机路由"><a href="#4-增删主机路由" class="headerlink" title="4 增删主机路由"></a>4 增删主机路由</h4><ol>
<li><code>route add/del -host 目标主机地址 netmask 子网掩码 gw 网关</code></li>
<li><code>route add/del -host 目标主机地址 netmask 子网掩码 dev 接口</code></li>
</ol>
<h3 id="3-ip"><a href="#3-ip" class="headerlink" title="3 ip"></a>3 ip</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>ip addr show [eth0]</code></td>
<td>显示网卡及配置的地址信息</td>
</tr>
<tr>
<td><code>ip addr add/del IP/子网掩码 dev 网卡接口</code></td>
<td>临时添加删除IP</td>
</tr>
<tr>
<td><code>ip link set eth0 up/down</code></td>
<td>启用/禁用网卡</td>
</tr>
<tr>
<td><code>ip route show</code></td>
<td>查看策略路由，路由表 <code>/etc/iproute2/rt_tables</code></td>
</tr>
<tr>
<td><code>ip route get IP</code></td>
<td>通过IP地址查询路由包从哪条路由来</td>
</tr>
<tr>
<td><code>ip route add/del default via 网关</code></td>
<td>增删默认路由</td>
</tr>
<tr>
<td><code>ip route add/del -net 目标网络地址 netmask 子网掩码 via 网关</code></td>
<td>增删网络路由</td>
</tr>
<tr>
<td><code>ip route add/del -host 目标主机地址 netmask 子网掩码 via 网关</code></td>
<td>增删主机路由</td>
</tr>
<tr>
<td><code>ip -s link</code></td>
<td>显示所有网络接口的统计数据</td>
</tr>
<tr>
<td><code>ip -s -s link ls 网卡接口</code></td>
<td>获取一个特定网络接口的信息</td>
</tr>
</tbody></table>
<h3 id="4-ss"><a href="#4-ss" class="headerlink" title="4 ss"></a>4 ss</h3><ul>
<li><code>ss -lntup</code><ul>
<li>查看本机监听的端口</li>
</ul>
</li>
</ul>
<h1 id="十-三剑客"><a href="#十-三剑客" class="headerlink" title="十 三剑客"></a>十 三剑客</h1><h2 id="10-1-grep（print-lines-matching-a-pattern）"><a href="#10-1-grep（print-lines-matching-a-pattern）" class="headerlink" title="10.1 grep（print lines matching a pattern）"></a>10.1 grep（print lines matching a pattern）</h2><ul>
<li><code>grep [OPTION] Pattern [File]</code><ul>
<li>打印匹配行</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>OPTION</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-v, --invert-match</code></td>
<td>反向选择，即仅列出不匹配的行</td>
</tr>
<tr>
<td><code>-i</code>, <code>--ignore-case</code></td>
<td>忽略大小写</td>
</tr>
<tr>
<td><code>-n</code>, <code>--line-number</code></td>
<td>显示在原文件中的行号</td>
</tr>
<tr>
<td><code>-w</code>, <code>--word-regexp</code></td>
<td>单词必须完全匹配</td>
</tr>
<tr>
<td><code>-c</code>, <code>--count</code></td>
<td>统计匹配的行数</td>
</tr>
<tr>
<td><code>-o</code>, <code>--only-matching</code></td>
<td>只输出匹配内容，而非行</td>
</tr>
<tr>
<td><code>-E</code>, <code>--extended-regexp</code></td>
<td>扩展的grep，等同于 <code>egrep</code></td>
</tr>
<tr>
<td><code>-A num</code>, <code>--after-context=num</code></td>
<td>显示匹配行及其之后的 num 行</td>
</tr>
<tr>
<td><code>-B num</code>, <code>--before-context=num</code></td>
<td>显示匹配行及其之前的 num 行</td>
</tr>
<tr>
<td><code>-C num</code>, <code>num</code>, <code>--context=num</code></td>
<td>显示匹配行及其前后 num 行</td>
</tr>
</tbody></table>
<h2 id="10-2-sed（stream-editor-for-filtering-and-transforming-text）"><a href="#10-2-sed（stream-editor-for-filtering-and-transforming-text）" class="headerlink" title="10.2 sed（stream editor for filtering and transforming text）"></a>10.2 sed（stream editor for filtering and transforming text）</h2><h3 id="1-概述-1"><a href="#1-概述-1" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li>sed 是一种几乎包括在所有 UNIX 平台的轻量级流编辑器。</li>
<li>sed主要是用来对文本数据增、删、改、查。（以<strong>行</strong>为单位）</li>
</ol>
<h3 id="2-原理"><a href="#2-原理" class="headerlink" title="2 原理"></a>2 原理</h3><ol>
<li>Sed默认并不直接修改源文件，而是将一行内容读取到内存中（模式空间 <code>pattern space</code>），然后判断内容是否符合条件，如果不符合则读取下一行，如果符合则执行相应指令。</li>
<li>所有的指令操作执行后，模式空间的内容默认输出至标准输出(即屏幕上)</li>
</ol>
<h3 id="3-语法"><a href="#3-语法" class="headerlink" title="3 语法"></a>3 语法</h3><ul>
<li><code>sed [OPTION] [address] command [File]</code><ul>
<li><code>OPTION</code><ul>
<li><code>-n</code><ul>
<li>sed 默认会完整输出所有内容</li>
<li><code>-n</code> 表示只输出经过sed命令处理的行</li>
</ul>
</li>
<li><code>-e script</code><ul>
<li>允许多个脚本指令被执行<ul>
<li><code>-e script1 -e script2</code></li>
<li><code>script1;scrpt2</code></li>
</ul>
</li>
</ul>
</li>
<li><code>-f script-file</code><ul>
<li>从文件中读取脚本指令</li>
</ul>
</li>
<li><code>-r</code><ul>
<li>识别扩展正则表达式</li>
</ul>
</li>
<li><code>-i[suffix]</code><ul>
<li>慎用，直接修改源文件（将内存中的信息覆盖到磁盘）</li>
<li>注意：<code>i</code> 和 <code>n</code> 一起使用相当于清空，因为 n 不输出内容</li>
<li><code>suffix</code><ul>
<li>代表为原文件生成一个指定后缀的备份文件</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><code>address</code> （默认为全文）<ul>
<li><code>-number</code><ul>
<li>指定行号number</li>
</ul>
</li>
<li><code>$</code><ul>
<li>表示最后一行</li>
</ul>
</li>
<li><code>-first~step</code><ul>
<li>指定以first开始，步长为step</li>
</ul>
</li>
<li><code>addr1,addr2</code><ul>
<li>匹配从addr1到addr2的所有行</li>
</ul>
</li>
<li><code>addr1,+N</code><ul>
<li>匹配地址1以及后面的N行</li>
</ul>
</li>
<li><code>/regexp/</code><ul>
<li>正则</li>
</ul>
</li>
</ul>
</li>
<li><code>command</code><ul>
<li><code>p</code><ul>
<li>打印</li>
</ul>
</li>
<li><code>a</code><ul>
<li>在当前行下一行添加，可以使用 <code>\n</code> 来添加多行</li>
</ul>
</li>
<li><code>i</code><ul>
<li>在当前行上一行添加，可以使用 <code>\n</code> 来添加多行</li>
</ul>
</li>
<li><code>d</code><ul>
<li>删除指定行</li>
</ul>
</li>
<li><code>c</code><ul>
<li>替换指定行</li>
</ul>
</li>
<li><code>s</code><ul>
<li>替换字符串</li>
<li><code>s/pattern/replacement/flags</code><ul>
<li><code>replacment</code><ul>
<li><code>&amp;</code><ul>
<li>代表正则所匹配的内容</li>
</ul>
</li>
<li><code>\num</code><ul>
<li>引用num组</li>
</ul>
</li>
</ul>
</li>
<li><code>flags</code><ul>
<li><code>g</code><ul>
<li>对一行中所有匹配替换（默认只替换第一个匹配）</li>
</ul>
</li>
<li><code>n</code><ul>
<li>1~512的数字，表示对一行中第n个匹配替换</li>
</ul>
</li>
<li><code>p</code><ul>
<li>打印模式空间的内容</li>
</ul>
</li>
<li><code>-w file</code><ul>
<li>将模式空间的内容写到文件file中</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="10-3-awk（pattern-scanning-and-processing-language）"><a href="#10-3-awk（pattern-scanning-and-processing-language）" class="headerlink" title="10.3 awk（pattern scanning and processing language）"></a>10.3 awk（pattern scanning and processing language）</h2><h3 id="1-概述-2"><a href="#1-概述-2" class="headerlink" title="1 概述"></a>1 概述</h3><ol>
<li><code>/usr/bin/awk -&gt; /usr/bin/gawk</code><ul>
<li><code>g</code> 代表GNU组织</li>
</ul>
</li>
<li>awk 不仅仅是强大的文本分析工具，还是一种编程语言</li>
<li>awk 主要用来分析文本（以<strong>行</strong>为单位）</li>
</ol>
<h3 id="2-原理-1"><a href="#2-原理-1" class="headerlink" title="2 原理"></a>2 原理</h3><ol>
<li>若有 <code>BEGIN</code> 代码块，则执行一次</li>
<li>awk读取一行内容，判断是否符合条件，若符合则使用相应动作进行处理，否则读取下一行。</li>
<li>若有 <code>END</code> 代码块，则执行一次</li>
</ol>
<h3 id="3-语法-1"><a href="#3-语法-1" class="headerlink" title="3 语法"></a>3 语法</h3><ul>
<li><code>awk [OPTION] BEGIN{} [patten] {action} END{} [file]</code><ul>
<li><code>OPTION</code><ul>
<li><code>-F</code><ul>
<li>指定字段（列）分隔符（默认为空格）</li>
<li>指定分隔符时有加号 <code>+</code> 表示有连续多个分隔符只算一个</li>
<li><code>-F &quot;[分隔符列表]+&quot;</code><ul>
<li>使用多个分隔符</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><code>BEGIN{}</code><ul>
<li>初始化代码块，只在处理数据前执行一次，可以用来修改内置变量等等</li>
</ul>
</li>
<li><code>END{}</code><ul>
<li>结尾代码块，只在处理数据后执行一次</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="1-运算符"><a href="#1-运算符" class="headerlink" title="1 运算符"></a>1 运算符</h4><table>
<thead>
<tr>
<th>运算符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>?</code></td>
<td>条件表达操作符</td>
</tr>
<tr>
<td><code>&#124;&#124; && !</code></td>
<td>逻辑或 与 非</td>
</tr>
<tr>
<td><code>~</code></td>
<td>匹配，非精确比较（<code>==</code> 是精确比较）</td>
</tr>
<tr>
<td><code>!~</code></td>
<td>不匹配，非精确比较</td>
</tr>
<tr>
<td><code>+ - * / % ++ --</code></td>
<td>算术运算符</td>
</tr>
<tr>
<td><code>= += -= *= /= %=</code></td>
<td>赋值运算符</td>
</tr>
<tr>
<td><code>&lt; &lt;= &gt; &gt;= == !=</code></td>
<td>比较运算符</td>
</tr>
</tbody></table>
<h4 id="2-内置变量"><a href="#2-内置变量" class="headerlink" title="2 内置变量"></a>2 内置变量</h4><table>
<thead>
<tr>
<th>变量</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>FS</code></td>
<td>字段分隔符，默认为空格</td>
</tr>
<tr>
<td><code>NF</code></td>
<td>当前行字段个数，即有多少列，<code>$NF</code> 表示最后一列</td>
</tr>
<tr>
<td><code>NR</code></td>
<td>已经读取的记录数，即当前行是第几行，从1开始</td>
</tr>
<tr>
<td><code>FNR</code></td>
<td>记录总数</td>
</tr>
<tr>
<td><code>FILENAME</code></td>
<td>当前文件名</td>
</tr>
<tr>
<td><code>OFS</code></td>
<td>输出字段分隔符， 默认是空格</td>
</tr>
<tr>
<td><code>ORS</code></td>
<td>输出的记录分隔符，默认是换行符</td>
</tr>
<tr>
<td><code>RS</code></td>
<td>控制记录分隔符，默认为换行符</td>
</tr>
<tr>
<td><code>ARGC</code></td>
<td>命令行参数个数</td>
</tr>
<tr>
<td><code>ARGV</code></td>
<td>命令行参数排列</td>
</tr>
<tr>
<td><code>$0</code></td>
<td>表示整行</td>
</tr>
<tr>
<td><code>$n</code></td>
<td>n&gt;0 代表第n列</td>
</tr>
<tr>
<td>* 自定义变量</td>
<td></td>
</tr>
<tr>
<td>* <code>awk &#39;name=&quot;zsan&quot;{print name}&#39; file</code></td>
<td></td>
</tr>
</tbody></table>
<h4 id="3-内置函数"><a href="#3-内置函数" class="headerlink" title="3 内置函数"></a>3 内置函数</h4><table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>gsub(r,s)</code></td>
<td>在整个$0中用s替代r</td>
</tr>
<tr>
<td><code>gsub(r,s,t)</code></td>
<td>在整个t中用s替代r</td>
</tr>
<tr>
<td><code>index(s,t)</code></td>
<td>返回s中字符串t的第一位置</td>
</tr>
<tr>
<td><code>length(s)</code></td>
<td>返回s长度</td>
</tr>
<tr>
<td><code>match(s,r)</code></td>
<td>测试s是否包含匹配r的字符串</td>
</tr>
<tr>
<td><code>split(s,a,fs)</code></td>
<td>在fs上将s分成序列a</td>
</tr>
<tr>
<td><code>sprint(fmt,exp)</code></td>
<td>返回经fmt格式化后的exp</td>
</tr>
<tr>
<td><code>sub(r,s)</code></td>
<td>用$0中最左边最长的子串代替s</td>
</tr>
<tr>
<td><code>substr(s,p)</code></td>
<td>返回字符串s中从p开始的后缀部分</td>
</tr>
<tr>
<td><code>substr(s,p,n)</code></td>
<td>返回字符串s中从p开始长度为n的后缀部分</td>
</tr>
</tbody></table>
<h4 id="4-print-amp-printf"><a href="#4-print-amp-printf" class="headerlink" title="4 print &amp; printf"></a>4 print &amp; printf</h4><ol>
<li><code>printf</code> 是标准格式输出命令，不会自动换行</li>
<li><code>print</code> 会自动添加换行符（linux 默认没有print）</li>
</ol>
<h5 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h5><ul>
<li><code>printf &#39;输出类型输出格式&#39; 输出内容</code><ul>
<li>输出类型<ul>
<li><code>%ns</code><ul>
<li>输出字符串。n是数字指输出几个字符</li>
</ul>
</li>
<li><code>%ni</code><ul>
<li>输出整数。n是数字指输出几个数字</li>
</ul>
</li>
<li><code>%m.nf</code><ul>
<li>输出浮点数。m和n是数字，指输出总位数(m)和小数位数(n)</li>
</ul>
</li>
</ul>
</li>
<li>输出格式<ul>
<li><code>\r</code></li>
<li><code>\n</code></li>
<li><code>\t</code><ul>
<li>水平tab</li>
</ul>
</li>
<li><code>\v</code><ul>
<li>垂直tab</li>
</ul>
</li>
<li><code>\b</code><ul>
<li>退格Backspaced</li>
</ul>
</li>
<li><code>\f</code><ul>
<li>清屏</li>
</ul>
</li>
<li><code>\a</code><ul>
<li>输出警告声音</li>
</ul>
</li>
</ul>
</li>
<li>输出内容<ul>
<li><code>$()</code><ul>
<li>使用命令获取内容</li>
<li>不能直接用文件，管道符也不行</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="print"><a href="#print" class="headerlink" title="print"></a>print</h5><ul>
<li><code>print 输出内容</code><ul>
<li>输出内容如果用逗号隔开则代表显示结果使用空格隔开<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print &apos;a b&apos; # ab</span><br><span class="line">print &apos;a,b&apos; # a b</span><br><span class="line">print &apos;a&quot;,&quot;b&apos; # a,b</span><br><span class="line">print &apos;a123b&apos; # a123b</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo</title>
    <url>/anyeansan.github.io/2019/11/12/Hexo/</url>
    <content><![CDATA[<h1 id="一-搭建"><a href="#一-搭建" class="headerlink" title="一 搭建"></a>一 搭建</h1><h2 id="1-GitHub"><a href="#1-GitHub" class="headerlink" title="1 GitHub"></a>1 GitHub</h2><ol>
<li>注册账号</li>
<li>创建仓库，名为<code>yourname.github.io</code></li>
</ol>
<h2 id="2-Git"><a href="#2-Git" class="headerlink" title="2 Git"></a>2 Git</h2><ol>
<li>安装git及gitbash</li>
<li>配置github账号及ssh key</li>
</ol>
<h2 id="3-NodeJs"><a href="#3-NodeJs" class="headerlink" title="3 NodeJs"></a>3 NodeJs</h2><h2 id="4-Hexo"><a href="#4-Hexo" class="headerlink" title="4 Hexo"></a>4 Hexo</h2><h3 id="4-1-安装"><a href="#4-1-安装" class="headerlink" title="4.1 安装"></a>4.1 安装</h3><ul>
<li><code>npm install -g hexo</code></li>
</ul>
<h3 id="4-2-初始化"><a href="#4-2-初始化" class="headerlink" title="4.2 初始化"></a>4.2 初始化</h3><ul>
<li><code>hexo init</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node_modules：依赖包</span><br><span class="line">public：存放生成的页面</span><br><span class="line">scaffolds：命令生成文章等的模板</span><br><span class="line">source：用命令创建的各种文章（post下为原始md文件）</span><br><span class="line">themes：主题</span><br><span class="line">_config.yml：整个博客的配置</span><br><span class="line">db.json：source解析所得到的</span><br><span class="line">package.json：项目所需模块项目的配置信息</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="4-3-root-config-yml配置deploy"><a href="#4-3-root-config-yml配置deploy" class="headerlink" title="4.3 root config.yml配置deploy"></a>4.3 root config.yml配置deploy</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:anyeansan/anyeansan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<h1 id="二-命令"><a href="#二-命令" class="headerlink" title="二 命令"></a>二 命令</h1><h2 id="1-hexo-n"><a href="#1-hexo-n" class="headerlink" title="1 hexo n"></a>1 hexo n</h2><ul>
<li><code>hexo n xxx</code><ul>
<li>在<code>source/post</code>目录下根据<code>scaffolds/post.md</code>模板创建<code>xxx.md</code></li>
</ul>
</li>
<li><code>hexo n page xxx</code><ul>
<li>在<code>source</code>目录下根据<code>scaffolds/page.md</code>模板创建<code>xxx</code>文件夹并生成<code>index.md</code></li>
</ul>
</li>
</ul>
<h2 id="2-hexo-clean"><a href="#2-hexo-clean" class="headerlink" title="2 hexo clean"></a>2 hexo clean</h2><ul>
<li>删除根下<code>public</code>目录</li>
</ul>
<h2 id="3-hexo-g"><a href="#3-hexo-g" class="headerlink" title="3 hexo g"></a>3 hexo g</h2><ul>
<li>在根下创建<code>public</code>目录并生成静态文件</li>
<li><code>source</code>目录下的所有文件都会原样复制（除了md文件会转成html）到<code>public</code>目录</li>
</ul>
<h2 id="4-hexo-d"><a href="#4-hexo-d" class="headerlink" title="4 hexo d"></a>4 hexo d</h2><ul>
<li>部署到服务端</li>
<li><code>ERROR Deployer not found: git</code><ul>
<li>需要安装<code>npm install hexo-deployer-git --save</code></li>
</ul>
</li>
</ul>
<h2 id="5-hexo-s"><a href="#5-hexo-s" class="headerlink" title="5 hexo s"></a>5 hexo s</h2><ul>
<li>启动服务</li>
<li><code>http://localhost:4000</code></li>
</ul>
<h1 id="三-配置"><a href="#三-配置" class="headerlink" title="三 配置"></a>三 配置</h1><h2 id="1-root-config-yml"><a href="#1-root-config-yml" class="headerlink" title="1 root _config.yml"></a>1 root _config.yml</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 安₃</span><br><span class="line">subtitle: 我未成名君未嫁 可能俱是不如人</span><br><span class="line">description: 一蓑烟雨任平生</span><br><span class="line">keywords:</span><br><span class="line">author: 安₃</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">skip_render: README.md</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">url: https://anyeansan.github.io</span><br><span class="line">root: /anyeansan.github.io</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">deploy:</span><br><span class="line">	type: git</span><br><span class="line">	repository: git@github.com:anyeansan/anyeansan.github.io.git</span><br><span class="line">	branch: master</span><br></pre></td></tr></table></figure>

<h2 id="2-本地搜索local-search"><a href="#2-本地搜索local-search" class="headerlink" title="2 本地搜索local-search"></a>2 本地搜索local-search</h2><ol>
<li><code>npm install hexo-generator-searchdb</code></li>
<li><code>root _config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">	path: search.xml</span><br><span class="line">	field: post</span><br><span class="line">	content: true</span><br><span class="line">	format: html</span><br></pre></td></tr></table></figure></li>
<li><code>_config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">		enable: true</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="3-RSS"><a href="#3-RSS" class="headerlink" title="3 RSS"></a>3 RSS</h2><ol>
<li><code>npm install hexo-generator-feed --save</code></li>
<li><code>root _config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">feed:</span><br><span class="line">	type: atom</span><br><span class="line">	path: atom.xml</span><br><span class="line">	limit: 20</span><br></pre></td></tr></table></figure></li>
<li><code>_config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="4-目录编号"><a href="#4-目录编号" class="headerlink" title="4 目录编号"></a>4 目录编号</h2><ul>
<li><code>_config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">	number: true/false</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="5-文章底部标签和结束语"><a href="#5-文章底部标签和结束语" class="headerlink" title="5 文章底部标签和结束语"></a>5 文章底部标签和结束语</h2><h3 id="5-1-底部标签"><a href="#5-1-底部标签" class="headerlink" title="5.1 底部标签"></a>5.1 底部标签</h3><ul>
<li><code>next/layout/_macro/post.swig</code>中搜索<code>rel=&quot;tag</code>去掉标签或修改标签样式<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rel=&quot;tag&quot;&gt; &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="5-2-结束语"><a href="#5-2-结束语" class="headerlink" title="5.2 结束语"></a>5.2 结束语</h3><ol>
<li><code>next/layout/_macro</code>添加<code>passage-end-tag.swig</code>，内容如下<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #66ccff;font-size:14px;&quot;&gt;-------------The End&amp;nbsp;&amp;nbsp;&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;客官请自便-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div</span><br></pre></td></tr></table></figure></li>
<li><code>next/layout/_macro/post.swig</code>在<code>post-body</code>和<code>post-footer</code>之间添加<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">	&#123;% if not is_index %&#125;</span><br><span class="line">		&#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">	&#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="6-中英文"><a href="#6-中英文" class="headerlink" title="6 中英文"></a>6 中英文</h2><ul>
<li><code>next/languages/zh-CN.yml</code>酌情修改</li>
</ul>
<h2 id="7-图片"><a href="#7-图片" class="headerlink" title="7 图片"></a>7 图片</h2><h3 id="7-1-Logo"><a href="#7-1-Logo" class="headerlink" title="7.1 Logo"></a>7.1 Logo</h3><ul>
<li><code>_config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">favicon:</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="7-2-头像"><a href="#7-2-头像" class="headerlink" title="7.2 头像"></a>7.2 头像</h3><ul>
<li><code>_config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">	url: /images/lbb.png 头像</span><br><span class="line">	rounded: true 是否为圆形</span><br><span class="line">	rotated: true 是否鼠标放上去旋转</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="8-页面底部"><a href="#8-页面底部" class="headerlink" title="8 页面底部"></a>8 页面底部</h2><ul>
<li><code>_config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">	since: 2019</span><br><span class="line">	icon:</span><br><span class="line">	copyright:</span><br><span class="line">	powered:</span><br><span class="line">	theme:</span><br><span class="line">	beian:</span><br><span class="line">	creative_commons:</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="9-menu-amp-sidebar"><a href="#9-menu-amp-sidebar" class="headerlink" title="9 menu &amp; sidebar"></a>9 menu &amp; sidebar</h2><ul>
<li><code>_config.yml</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">sidebar:</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h1 id="四-技巧"><a href="#四-技巧" class="headerlink" title="四 技巧"></a>四 技巧</h1><h2 id="1-博文不显示全部内容"><a href="#1-博文不显示全部内容" class="headerlink" title="1 博文不显示全部内容"></a>1 博文不显示全部内容</h2><ul>
<li>在合适的位置加上<code>&lt;!--more--&gt;</code>即可</li>
</ul>
<h2 id="2-创建tags和categories"><a href="#2-创建tags和categories" class="headerlink" title="2 创建tags和categories"></a>2 创建tags和categories</h2><ol>
<li><code>hexo n page tages</code></li>
<li><code>source/tages/index.md</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2019-11-12 12:46:04</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure></li>
<li>文章中使用<ul>
<li>tags为多个标签<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tags:</span><br><span class="line">-空格one</span><br><span class="line">-空格two</span><br><span class="line">-空格three</span><br><span class="line">-空格...</span><br><span class="line">结果为：#one #two #three #...</span><br></pre></td></tr></table></figure></li>
<li>categorys为层级<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categorys:</span><br><span class="line">-空格爷</span><br><span class="line">-空格父</span><br><span class="line">-空格孙</span><br><span class="line">-空格...</span><br><span class="line">结果为：爷 &gt; 父 &gt; 孙 &gt;...</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h2 id="3-绑定域名"><a href="#3-绑定域名" class="headerlink" title="3 绑定域名"></a>3 绑定域名</h2><h3 id="3-1-购买域名"><a href="#3-1-购买域名" class="headerlink" title="3.1 购买域名"></a>3.1 购买域名</h3><ul>
<li><a href="https://www.namesilo.com" target="_blank" rel="noopener">namesilo</a></li>
</ul>
<h3 id="3-2-设置dns"><a href="#3-2-设置dns" class="headerlink" title="3.2 设置dns"></a>3.2 设置dns</h3><ul>
<li>dns默认有四个<code>A A A CNAME</code>，只需要两个即可</li>
</ul>
<h4 id="1-A-A"><a href="#1-A-A" class="headerlink" title="1 A + A"></a>1 A + A</h4><table>
<thead>
<tr>
<th>类型</th>
<th>HOSTNAME</th>
<th>ADDRESS</th>
<th>TTL</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td>空</td>
<td>ip</td>
<td>3600</td>
</tr>
<tr>
<td>A</td>
<td>www</td>
<td>ip</td>
<td>3600</td>
</tr>
<tr>
<td>* ip通过<code>ping yourname.github.io</code>获取</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h4 id="2-A-CNAME"><a href="#2-A-CNAME" class="headerlink" title="2 A + CNAME"></a>2 A + CNAME</h4><table>
<thead>
<tr>
<th>类型</th>
<th>HOSTNAME</th>
<th>ADDRESS</th>
<th>TTL</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td>空</td>
<td>ip</td>
<td>3600</td>
</tr>
<tr>
<td>CNAME</td>
<td>www</td>
<td>yourname.github.io</td>
<td>3600</td>
</tr>
<tr>
<td>* 创建CNAME</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>* 在<code>source</code>目录创建<code>CNAME</code>文件，内容为你的域名</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="3-3-配置仓库"><a href="#3-3-配置仓库" class="headerlink" title="3.3 配置仓库"></a>3.3 配置仓库</h3><ul>
<li>在<code>yourname.github.io</code>仓库的<code>setting</code>中配置域名<ul>
<li><code>GitHub Pages -&gt; Custom domain</code></li>
<li>不确定是否必须0.0</li>
</ul>
</li>
</ul>
<h2 id="4-README-md"><a href="#4-README-md" class="headerlink" title="4 README.md"></a>4 README.md</h2><h3 id="4-1-原因"><a href="#4-1-原因" class="headerlink" title="4.1 原因"></a>4.1 原因</h3><ol>
<li><code>hexo g</code>会把<code>source</code>目录下的md文件(包括<code>Readme.md</code>)渲染为html文件并放到<code>public</code>目录下</li>
<li><code>hexo d</code>会把<code>public</code>目录下所有文件提交到<code>yourname.github.io</code>仓库</li>
<li>由于<code>public</code>目录下并没有<code>README.md</code>而只有<code>Readme.html</code>，所以deploy后<code>yourname.github.io</code>是没有<code>Readme.md</code>的</li>
</ol>
<h3 id="4-2-解决"><a href="#4-2-解决" class="headerlink" title="4.2 解决"></a>4.2 解决</h3><ol>
<li><code>source</code>目录下创建<code>README.md</code></li>
<li><code>root_config.yml</code><ul>
<li><code>skip_render: README.md</code></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>技</category>
        <category>hexo</category>
      </categories>
  </entry>
</search>
