{"meta":{"title":"安₃","subtitle":"我未成名君未嫁 可能俱是不如人","description":"一蓑烟雨任平生","author":"安₃","url":"https://anyeansan.github.io","root":"/anyeansan.github.io/"},"pages":[{"title":"categories","date":"2019-11-12T04:47:40.000Z","updated":"2019-11-12T04:48:21.027Z","comments":true,"path":"categories/index.html","permalink":"https://anyeansan.github.io/categories/","excerpt":"","text":""},{"title":"tags","date":"2019-11-12T04:46:04.000Z","updated":"2019-11-12T04:47:01.286Z","comments":true,"path":"tags/index.html","permalink":"https://anyeansan.github.io/tags/","excerpt":"","text":""}],"posts":[{"title":"Linux 安装和配置","slug":"Linux-安装和配置","date":"2020-03-29T02:09:49.000Z","updated":"2020-03-29T02:10:51.754Z","comments":true,"path":"2020/03/29/Linux-安装和配置/","link":"","permalink":"https://anyeansan.github.io/2020/03/29/Linux-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/","excerpt":"","text":"一 概述1.1 硬件 电源 CPU 路数：即CPU的个数，1 路 = 1 CPU 核数 内存 缓冲（buffer） 写：数据 → 内存 → 磁盘 缓存（cache） 读：磁盘 → 内存 → 数据 磁盘 主板 显卡 声卡 键鼠 1.2 服务器 硬件服务器 机架服务器 刀片服务器 塔式服务器 虚拟服务器 阿里云 亚马逊（AWS） 腾讯云 1.3 操作系统 硬件 + 内核 + shell + 软件 1.4 Linux发展历史 FSF free software foundation 自由软件基金会，主要项目是GNU GNU GNU是“GNU is Not Unix”的递归缩写，目标是建立可自由发布和移值的类unix操作系统 GNU类UNIX操作系统是由一系列应用程序，系统库和开发工具构成的软件集合（如Emacs，gcc，bash，gawk），并加上了用于资源分配和硬件管理的内核。 GPL general public license：通用公共许可，是一个开源许可协议 linux 操作系统 = linux内核 + GNU软件和系统软件 + 必要的应用程序 1.5 Linux 发行版 Fedora 免费，新功能，小白鼠 Red Hat 收费 CentOS 去掉Red Hat的logo，收费软件被重新打包编译 后被Red Hat 收购 Ubuntu 桌面 Debian FreeBSD 安全 稳定 1.6 语录 Linux 一切从根开始 Linux 一切皆文件 Linux 系统中命令行的修改大部分都是临时修改，配置文件是永久修改。 Linux 系统服务配置文件修改后，需要重启服务（重新加载配置文件） 二 CentOS 7 安装2.1 下载镜像 CentoOS project Aliyun mirror 2.2 准备虚拟环境 虚拟软件 VMware Workstation 2.3 安装配置1 软件安装 Minimal Insatll Debugging Tools Compatibility Libraries Development Tools System Administration Tools 2 网络（NAT） 主机名 config General 勾选自动连接 IPv4 settings Method Manual （手动） ip 子网掩码 网关 根据虚拟机网络编辑器中 VMnet8 网卡设置 dns 如 223.5.5.5，8.8.8.8 3 磁盘分区（standard partition） /boot 引导分区，256Mb swap 交换分区， 内存 &gt; 8G，swap = 8G，内存 &lt; 8G，swap = 内存 * 1.5 / 根分区，剩余大小 4 关闭安全策略 KDUMP SECURITY POLICY 三 初始化配置3.1 配置 yum 源1 安装 wget yum install wget -y 2 备份 mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup 3 下载基本 yum 源 curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 4 下载扩展 yum 源 EPEL wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo 3.2 更新系统和软件 yum update -y 3.3 安装企业运维常用基础工具包1 CentOS 6 &amp; 7 都要安装的 yum install tree nmap dos2unix lrzsz nc lsof tcpdump htop iftop iotop sysstat nethogs -y 软件包名 说明 tree 树形结构显示文件和目录 nmap 扫描端口的工具 dos2unix 转换脚本格式的工具 lrzsz 包含上传（rz）和下载（sz）文件工具 nc 文件传输、端口检查工具 lsof 反查端口进程，以及服务开发文件工具 wget 网络下载工具 tcpdump 抓包、监听等重要排错工具 htop 系统进程相关信息查看工具 iftop 主机网卡宽带查看工具 sysstat 含有sar iostat 等重要系统性能查看工具 nethogs 显示进程的网络流量 2 CentOS 7 安装的 yum install psmisc net-tools bash-completion bash-completion-extras vim-enhanced -y 软件包名 说明 psmisc 含有 killalll pstree 等命令 net-tools 含有 netstat ifconfig route arp 等命令 bash-completion tab补全功能工具包 bash-completion-extras tab补全功能扩展工具包 vim-enhanced vim 3.4 修改网卡名称1 安装系统时 菜单界面 按 tab 输入 net.ifnames=0 biosdevname=0 2 安装系统后 修改网卡配置文件内容及文件名 /etc/sysconfig/netword-scripts/ens331234561 修改内容 vim /etc/sysconfig/netword-scripts/ens33 name=eth0 device=eth02 修改文件名 mv /etc/sysconfig/netword-scripts/ens33 /etc/sysconfig/netword-scripts/eth0 修改网卡名称规则内核文件 /etc/default/grub1234567891011121314151617181920vim /etc/default/grubGRUB_CMDLINE_LINUX=&quot;rhgb quiet&quot; 改为GRUB_CMDLINE_LINUX=&quot;net.ifnames=0 biosdevname=0 rhgb quiet&quot;``` 3. 系统重新加载 grup 配置文件 * `grub2-mkconfig -o /boot/grub2/grub.cfg`## 3.5 系统优化### 1 selinux#### 1 概述* `Security-Enhanced Linux` * 它是一个 Linux 内核模块，也是 Linux 的一个安全子系统。 * Selinux 用于对 root 用户的权限进行控制#### 2 操作1. `getenforce` * 查看状态2. `setenforce 0` * 临时关闭3. `/etc/selinux/config` SELINUX=enforcingSELINUX=disabled # 永久关闭123456789101112### 2 关闭防火墙1. `systemctl stop firewalld`2. `systemctl disable firewalld`### 3 字符编码1. 修改环境变量 `LANG`（优先级高）2. 修改 `/etc/locale.conf`3. `localectl set-locale en_US.UTF-8`### 4 优化远程连接速度1. 修改ssh服务配置文件 `/etc/ssh/sshd_config` 79 GSSAPIAuthentication no116 UseDNS no12. 配置本地 hosts 文件 `/etc/hosts` 服务器ip 服务器主机名hostname 168.13.24 anyeansan``` 重启 ssh 服务 systemctl restart sshd 4 配置Shell命令提示符样式 PS11 设置格式 参数 说明 \\h hostname（short） \\H hostname（full） \\w current working directory \\W current working directory（basename） \\t 24小时格式显示时间 HH:MM:SS \\d 日期 weekday month date \\u 当前用户名 \\$ root 显示 # 普通用户显示 $ 2 颜色 \\[\\e[F;Bm\\]内容\\[\\e[0m\\] \\[\\e[F;Bm\\] 颜色开始 F 表示字体颜色，30~37 B 表示背景颜色，40~47 特殊显示 0 关闭颜色 1 高亮 4 下划线 5 闪烁 7 反白 8 颜色不可见 \\[\\e[0m\\] 颜色结束 3 式样 export PS1=&#39;\\[\\e[32;1m\\][\\u@\\h \\W]\\$ \\[\\e[0m\\]&#39; export PS1=&#39;\\[\\e[32;1m\\][\\u@\\h \\[\\e[34;1m\\]\\W\\[\\e[32;1m\\]]\\$ \\[\\e[0m\\]&#39; 四 远程连接4.1 远程连接软件 软件 说明 xShell 免费（实用） ScureCRT 收费 Putty 免费 功能简单 4.2 xShell 相关配置1 窗口外观 2 默认会话属性 3 使用密钥连接 将公钥上传至服务端 ~/.ssh/authorized_keys，权限 600 配置 xShell","categories":[{"name":"Linux","slug":"Linux","permalink":"https://anyeansan.github.io/categories/Linux/"}],"tags":[]},{"title":"Linux 命令","slug":"Linux-命令","date":"2020-03-29T02:04:35.000Z","updated":"2020-03-29T02:08:53.350Z","comments":true,"path":"2020/03/29/Linux-命令/","link":"","permalink":"https://anyeansan.github.io/2020/03/29/Linux-%E5%91%BD%E4%BB%A4/","excerpt":"","text":"一 帮助命令1.1 man（manual） man [OPTION] 命令 查看外部命令的功能 参数 帮助信息等等 OPTION 1 查看命令帮助文档 5 查看配置帮助文档，当命令和配置同名时，使用15来区分，如passwd 文档操作 说明 空格, f 向下翻页 b 向上翻页 回车 向下一行 k 向上一行 /key 向下查找key，n 下一个匹配，N 上一个匹配 ?key 向上查找key 1.2 –help 命令 --help 查看外部命令帮助 1.3 help help 命令 查看shell内置命令的帮助信息，如cd, pwd, history.. 二 开关机命令 命令 说明 shutdown 开启一个一分钟后关机的计划 shutdown -c 取消关机计划 shutdown -h Time 指定时间关机，Time 可以是 now 或具体时间 shutdown -r Time 指定时间重启 systemctl poweroff 关机 systemctl reboot 重启 三 其它命令3.1 echo（display a line of text） echo [OPTION] String 显示文本 OPTION -n 不换行输出 -e 支持转义字符\\b \\t \\r \\n \\e(escape键)... 3.2 xargs xargs [OPTION] &lt; input 将标准输入的所有行一行显示，xargs 会自动忽略别名 OPTION -n num 每一行显示原num行 3.3 column column -t 按表格显示 3.4 tr tr oldStr newStr 从标准输入中替换、缩减或删除字符，并将结果写到标准输出 tr 是一对一的替换 oldStr 字符数 &lt; newStr 字符数，多的新字符忽略，如 echo &quot;abc&quot;|tr &quot;abc&quot; &quot;12345&quot;，结果为 123 oldStr 字符数 &gt; newStr 字符数，多的旧字符都用最后一个新字符替换，如 echo &quot;abcde&quot;|tr &quot;abcde&quot; &quot;123&quot;，结果为 12333 如果 oldStr 中有重复字符则使用最后一个对应的新字符，如echo &quot;abcdba|tr &quot;abcdba&quot; &quot;123456&quot;，结果为 653456 3.5 tee tee [-a] File 读取标准输入的数据，并将其内容输出成文件 -a 追加` 3.6 read read [OPTION] 变量名 接收标准输入并赋值给变量 OPTION -p &quot;提示信息&quot; 在等待read输入时，输出提示信息 -t 秒数 read命令会一直等待用户输入，指定等待时间 -n 字符数 read命令只接受指定的字符数 -s 隐藏输入的数据，适用于机密信息的输入 3.7 cut cut [OPTION] [File] 按“列”提取文本字符 OPTION -f 列号 提取第几列 -d 分隔符 按照指定分隔符分割列 默认为制表符 3.8 sort sort [OPTION] [File] OPTION -f, --ignore-case 忽略大小写 -n, --numeric-sort 依照数值的大小排序 -r, --reverse 反向排序 -t, --field-separator=SEP 指定排序时所用的分隔符 -k n[,m] 按照指定的字段范围排序。从第n字段开始，m字段结束（默认到行尾） 3.9 history history [OPTION] [历史命令保存文件] OPTION -c 清空历史命令 -w 把缓存中的历史命令写入历史命令保存文件 默认用户正常退出后才会保存 默认保存在家目录下~/.bash_history 3.10 dd dd if=输入文件 of=输出文件 bs=块大小 count=块个数 按照指定大小和个数的数据块来复制文件或转换文件 if（input file） 指定输入文件或设备 如果不指定if，默认就会从 stdin 中读取输入 of（output file） 指定输出文件或设备 如果不指定of，默认就会将 stdout 作为默认输出 bs（block size） 数据块 block 大小，默认单位为 byte count 数据块 block 数量 四 文件 &amp; 目录命令4.1 pwd（print working directory） pwd 显示当前工作目录 4.2 cd（change directory） cd dir 切换目录 dir . 当前目录 .. 上级目录 ~ 根目录 - 前一个目录 4.3 mkdir（make directories） mkdir [OPTION] dir 创建一个或多个空目录，linux一切皆文件，目录也是文件，目录与文件不能重名 OPTION -p, --parents 递归创建 目录有多层时，如果父目录不存在，首先创建父目录 4.4 ls（list directory contents） ls [OPTION] [File] 显示文件名或者目录下的内容（默认为当前目录） OPTION -a, --all 显示目录下所有文件，包含隐藏文件（以 . 开头的文件） -A, --almost-all 同 -a 但不包含 . 和 .. -l 显示详细信息 -d, --directory 显示目录本身的信息（而非目录下的内容） -t 根据最后修改时间排序，newest first -r, --reverse 反向排序 -h, --human-readable 以人类可读的信息显示大小 -S 文件从大到小排序 -i, --inode 显示inode number p 区分文件和目录（目录名后添加 /） 4.5 tree（list contents of directories in a tree-like format） tree [OPTION] dir 树形显示目录，需要安装 tree 软件 OPTION -L level 指定显示层级，如-L 1 显示一层 -d 只显示目录 4.6 touch（change file timestamps） touch File 创建一个或多个空文件，如果文件存在则修改文件的最后访问时间和最后修改时间 File 可以使用区间 {begin..end} 如touch {1..10}.txt，即创建1.txt 2.txt ...10.txt10个文件 4.7 cp（copy files and directories） cp [OPTION] Source Destdir 复制一个或多个文件到指定目录 OPTION -r, --recursive 递归复制，用于复制目录 -p 复制时保留文件属性（所有者、权限信息、时间…） -d 复制时保留链接 -a 等同于 -dpr cp test.txt{,.bak} 例用 {} 的结合特性快捷复制，等价于 cp test.txt test.txt.bak 4.8 rm（remove empty directories） rm [OPTION] File 删除一个或多个文件 OPTION -r, --recursive 递归删除，用于删除目录 -f, --force 确认 4.9 mv（move (rename) files） mv Source Dest 如果不在同一个目录则是剪切 如果在同一个目录则是重命名 4.10 cat（concatenate files and print on the standard output） cat [OPTION] File 查看文件内容 OPTION -n, --number 显示行号 tac File 反向查看内容 4.11 more（file perusal filter for crt viewing） more File 分页显示内容，只能向下 4.12 less（opposite of more） less [OPTION] File 分页显示内容，可向上向下 OPTION -N, --LINE-NUMBERS 显示行号 指令 说明 f 下一页 b 上一页 回车 下一行 k 上一行 g 跳到第一行 G 跳到最后一行 p num% 跳到百分之num 4.13 head（output the first part of files） head [OPTION] File 默认显示前10行 OPTION -n 显示前 n 行 4.14 tail（output the last part of files） tail [OPTION] file 默认显示后10行 OPTION -n 显示后n行 -f, --follow 实时监控文件尾部变化，如查看日志 如果文件被删除或移动，没有信息提示，想要监控需要重新追踪 -F 实时监控文件尾部变化 如果文件被删除或移动，有信息提示，如果文件恢复会继续追踪 4.15 file（determine file type） file [OPTION] File 查看文件类型及编码 OPTION -i 查看文件MIME类型及编码 -L 查看软链接文件时，查看的是软链接指向的目标文件的信息 4.16 diff（compare files line by line） diff [OPTION] File 比较文件内容的差异 OPTION -q 仅输出文件是否有差异，不报告详细差异 4.17 stat stat File 查看文件 inode 信息 4.18 wc wc [OPTION] FILE | Input 统计行数、字数、字节数 OPTION -c 统计字节数 -w 统计单词数 -l 统计行数 4.19 rename rename expr replacement File 将替换文件中匹配部分 expr File 中需要重命名的部分 replacement expression 修改成的结果 五 时间命令5.1 date date [OPTION] [Format] 以默认格式查看时间 OPTION -s 修改时间 Format &quot;+%y-%m-%d %H:%M:%S&quot; Y-M-D H:M:S +%F full date 等价于 %Y-%m-%d +%T time 等价于 %H:%M:%S 5.2 ntpdate ntpdate ip 时间同步，需要安装 ntpdate 软件包 ip（ntp 服务器） ntp.aliyun.com cn.pool.ntp.org cn.ntp.org.cn time.asia.apple.com 六 打包压缩解压命令6.1 概述 Linux 中打包文件一般以 .tar 结尾，压缩命令一般以.gz结尾 通常打包和压缩是一起进行的，打包并压缩后的文件后缀一般为 .tar.gz 6.2 打包压缩 tar -zcvf 压缩包 文件 将一个或多个文件打包压缩 -z, --gzip 使用Gzip压缩，后缀名建议.tar.gz -c, --create 创建压缩包文件 -v, --verbose 显示过程 -f, --file= 指定压缩包文件路径 6.3 解压 tar -xvf 压缩包 [-C 解压路径] 默认解压到当前路径 x, --extract, --get 解压 6.4 查看压缩包中的文件 tar -tf 压缩包 -t, --list 七 搜索命令7.1 find（search for files in a directory hierarchy） find [路径] [条件] [操作] 在指定路径根据条件查找文件，并对找到的文件执行指定操作 路径 find 命令查找路径，默认为当前目录 条件 查找的条件，可以有多个 -a 多个条件 逻辑与 关系，默认 -o 逻辑或 -not 逻辑非 操作 -print 打印找到的结果，默认 -exec 命令 {} \\; 对匹配的结果逐个执行命令 {} 代表查到的内容 \\; 匹配的文件可能有多个，即要执行多次命令，用分号隔开 条件 说明 -name Pattern 根据文件名查找（精准匹配，可以用正则） -iname Pattern 根据文件名查找，不区分大小写 -perm Mode 根据文件权限查找 -user User 根据文件属主查找 -group Group 根据文件属组查找 -type Type 根据文件类型查找 -size n/+n/-n 根据文件大小查找 -atime/ctime/mtime n/-n/+n 根据文件时间查找 -inum Num 根据文件 inode 号查找 -maxdepth level 指定目录查找层次深度 7.2 locate（find files by name）1 概述 此命令需要安装 mlocate 软件包 建立文件索引数据库，快速查找文件位置 /var/lib/mlocate/mlocate.db 维护的数据库（文件资料库） /tmp 不在数据库范围 2 使用 updatedb 更新数据库（建立文件和目录结构的对应关系） 如果没有更新过或者是新建立的文件，文件资料库没有，使用locate查找不到 locate File 查找文件绝对路径 7.3 which（shows the full path of (shell) commands） which Command 查看命令文件的绝对路径及别名信息 查找的范围是 PATH 所配置的路径 7.4 whereis（locate the binary, source, and manual page files for a command） whereis Command 查看命令文件的绝对路径及相关帮助文档绝对路径 八 磁盘命令8.1 df（report file system disk space usage） df [OPTION] [File] 查看文件系统的磁盘空间使用信息及挂载信息 OPTION -a, --all 显示所有文件系统信息，包括系统特有的 /proc、/sysfs 等文件系统 -h, --human-readable 使用人们习惯的 KB、MB 或 GB 等单位自行显示容量 -k 以 KB 为单位显示容量（默认） -m 以 MB 为单位显示容量 -T, --print-type 显示文件系统类型 -i, --inodes 不用硬盘容量显示，而是以含有 inode 的数量来显示 8.2 du（disk usage） du [OPTION] [File] 统计目录或文件所占磁盘空间大小 如果是目录，默认显示目录和子目录的磁盘占用量 OPTION -a, --all 显示目录、子目录和子文件的磁盘占用量 -s, --summarize 只统计总磁盘占用量，而不列出子目录和子文件的磁盘占用量 即只显示目录的磁盘占用量 -h, --human-readable 以人类可读的单位显示磁盘占用量 注 ls -l 命令统计的是目录下的子文件名称和子目录名称所占大小 du 命令统计占用磁盘空间 文件大小 文件的实际大小，比如 13KB 文件占用磁盘空间 文件占用磁盘空间取决于文件系统的 block 大小（linux 默认为 4 KB） 1 个block 只能被 1 个文件占用，如果 1 个 block 没有占满，其它空间也不能存储其它文件 1 个文件大小是 13 KB，13 / 4 = 3.25，文件占用磁盘空间就是 4 个block 即 16 KB 九 网络命令9.1 curl 命令 说明 crul url 访问一个网址，获取该网址的文本信息 curl -i url 获取该网址的文本信息以及协议头部信息 curl -I url 只获取请求头 curl -O url 下载指定资源到当前目录，名称默认，--progress 显示进度 curl -o name url 下载指定资源到当前目录，名称name， 9.2 wget 命令 说明 wget url 下载文件 wget -O name url 下载文件并指定名称为name 9.3 net-tools &amp; iproute2 1 netstat 命令 说明 netstat -lntup 查看本机监听的端口 netstat -an 查看本机所有的网络连接 netstat -rn 查看本机路由表 2 route1 查 route [-nee] 查看路由表信息 -n 不使用名字而使用IP和Port -ee 更详细的信息 2 增删默认路由 route add/del default gw 网关 route add/del default dev 接口 3 增删网络路由 route add/del -net 目标网络地址 netmask 子网掩码 gw 网关 route add/del -net 目标网络地址 netmask 子网掩码 dev 接口 4 增删主机路由 route add/del -host 目标主机地址 netmask 子网掩码 gw 网关 route add/del -host 目标主机地址 netmask 子网掩码 dev 接口 3 ip 命令 说明 ip addr show [eth0] 显示网卡及配置的地址信息 ip addr add/del IP/子网掩码 dev 网卡接口 临时添加删除IP ip link set eth0 up/down 启用/禁用网卡 ip route show 查看策略路由，路由表 /etc/iproute2/rt_tables ip route get IP 通过IP地址查询路由包从哪条路由来 ip route add/del default via 网关 增删默认路由 ip route add/del -net 目标网络地址 netmask 子网掩码 via 网关 增删网络路由 ip route add/del -host 目标主机地址 netmask 子网掩码 via 网关 增删主机路由 ip -s link 显示所有网络接口的统计数据 ip -s -s link ls 网卡接口 获取一个特定网络接口的信息 4 ss ss -lntup 查看本机监听的端口 十 三剑客10.1 grep（print lines matching a pattern） grep [OPTION] Pattern [File] 打印匹配行 OPTION 说明 -v, --invert-match 反向选择，即仅列出不匹配的行 -i, --ignore-case 忽略大小写 -n, --line-number 显示在原文件中的行号 -w, --word-regexp 单词必须完全匹配 -c, --count 统计匹配的行数 -o, --only-matching 只输出匹配内容，而非行 -E, --extended-regexp 扩展的grep，等同于 egrep -A num, --after-context=num 显示匹配行及其之后的 num 行 -B num, --before-context=num 显示匹配行及其之前的 num 行 -C num, num, --context=num 显示匹配行及其前后 num 行 10.2 sed（stream editor for filtering and transforming text）1 概述 sed 是一种几乎包括在所有 UNIX 平台的轻量级流编辑器。 sed主要是用来对文本数据增、删、改、查。（以行为单位） 2 原理 Sed默认并不直接修改源文件，而是将一行内容读取到内存中（模式空间 pattern space），然后判断内容是否符合条件，如果不符合则读取下一行，如果符合则执行相应指令。 所有的指令操作执行后，模式空间的内容默认输出至标准输出(即屏幕上) 3 语法 sed [OPTION] [address] command [File] OPTION -n sed 默认会完整输出所有内容 -n 表示只输出经过sed命令处理的行 -e script 允许多个脚本指令被执行 -e script1 -e script2 script1;scrpt2 -f script-file 从文件中读取脚本指令 -r 识别扩展正则表达式 -i[suffix] 慎用，直接修改源文件（将内存中的信息覆盖到磁盘） 注意：i 和 n 一起使用相当于清空，因为 n 不输出内容 suffix 代表为原文件生成一个指定后缀的备份文件 address （默认为全文） -number 指定行号number $ 表示最后一行 -first~step 指定以first开始，步长为step addr1,addr2 匹配从addr1到addr2的所有行 addr1,+N 匹配地址1以及后面的N行 /regexp/ 正则 command p 打印 a 在当前行下一行添加，可以使用 \\n 来添加多行 i 在当前行上一行添加，可以使用 \\n 来添加多行 d 删除指定行 c 替换指定行 s 替换字符串 s/pattern/replacement/flags replacment &amp; 代表正则所匹配的内容 \\num 引用num组 flags g 对一行中所有匹配替换（默认只替换第一个匹配） n 1~512的数字，表示对一行中第n个匹配替换 p 打印模式空间的内容 -w file 将模式空间的内容写到文件file中 10.3 awk（pattern scanning and processing language）1 概述 /usr/bin/awk -&gt; /usr/bin/gawk g 代表GNU组织 awk 不仅仅是强大的文本分析工具，还是一种编程语言 awk 主要用来分析文本（以行为单位） 2 原理 若有 BEGIN 代码块，则执行一次 awk读取一行内容，判断是否符合条件，若符合则使用相应动作进行处理，否则读取下一行。 若有 END 代码块，则执行一次 3 语法 awk [OPTION] BEGIN{} [patten] {action} END{} [file] OPTION -F 指定字段（列）分隔符（默认为空格） 指定分隔符时有加号 + 表示有连续多个分隔符只算一个 -F &quot;[分隔符列表]+&quot; 使用多个分隔符 BEGIN{} 初始化代码块，只在处理数据前执行一次，可以用来修改内置变量等等 END{} 结尾代码块，只在处理数据后执行一次 1 运算符 运算符 说明 ? 条件表达操作符 &#124;&#124; && ! 逻辑或 与 非 ~ 匹配，非精确比较（== 是精确比较） !~ 不匹配，非精确比较 + - * / % ++ -- 算术运算符 = += -= *= /= %= 赋值运算符 &lt; &lt;= &gt; &gt;= == != 比较运算符 2 内置变量 变量 说明 FS 字段分隔符，默认为空格 NF 当前行字段个数，即有多少列，$NF 表示最后一列 NR 已经读取的记录数，即当前行是第几行，从1开始 FNR 记录总数 FILENAME 当前文件名 OFS 输出字段分隔符， 默认是空格 ORS 输出的记录分隔符，默认是换行符 RS 控制记录分隔符，默认为换行符 ARGC 命令行参数个数 ARGV 命令行参数排列 $0 表示整行 $n n&gt;0 代表第n列 * 自定义变量 * awk &#39;name=&quot;zsan&quot;{print name}&#39; file 3 内置函数 函数 说明 gsub(r,s) 在整个$0中用s替代r gsub(r,s,t) 在整个t中用s替代r index(s,t) 返回s中字符串t的第一位置 length(s) 返回s长度 match(s,r) 测试s是否包含匹配r的字符串 split(s,a,fs) 在fs上将s分成序列a sprint(fmt,exp) 返回经fmt格式化后的exp sub(r,s) 用$0中最左边最长的子串代替s substr(s,p) 返回字符串s中从p开始的后缀部分 substr(s,p,n) 返回字符串s中从p开始长度为n的后缀部分 4 print &amp; printf printf 是标准格式输出命令，不会自动换行 print 会自动添加换行符（linux 默认没有print） printf printf &#39;输出类型输出格式&#39; 输出内容 输出类型 %ns 输出字符串。n是数字指输出几个字符 %ni 输出整数。n是数字指输出几个数字 %m.nf 输出浮点数。m和n是数字，指输出总位数(m)和小数位数(n) 输出格式 \\r \\n \\t 水平tab \\v 垂直tab \\b 退格Backspaced \\f 清屏 \\a 输出警告声音 输出内容 $() 使用命令获取内容 不能直接用文件，管道符也不行 print print 输出内容 输出内容如果用逗号隔开则代表显示结果使用空格隔开1234print &apos;a b&apos; # abprint &apos;a,b&apos; # a bprint &apos;a&quot;,&quot;b&apos; # a,bprint &apos;a123b&apos; # a123b","categories":[{"name":"Linux","slug":"Linux","permalink":"https://anyeansan.github.io/categories/Linux/"}],"tags":[]},{"title":"Hexo","slug":"Hexo","date":"2019-11-12T06:41:59.000Z","updated":"2020-03-29T02:06:32.575Z","comments":true,"path":"2019/11/12/Hexo/","link":"","permalink":"https://anyeansan.github.io/2019/11/12/Hexo/","excerpt":"","text":"一 搭建1 GitHub 注册账号 创建仓库，名为yourname.github.io 2 Git 安装git及gitbash 配置github账号及ssh key 3 NodeJs4 Hexo4.1 安装 npm install -g hexo 4.2 初始化 hexo init12345678node_modules：依赖包public：存放生成的页面scaffolds：命令生成文章等的模板source：用命令创建的各种文章（post下为原始md文件）themes：主题_config.yml：整个博客的配置db.json：source解析所得到的package.json：项目所需模块项目的配置信息 4.3 root config.yml配置deploy1234deploy: type: git repository: git@github.com:anyeansan/anyeansan.github.io.git branch: master 二 命令1 hexo n hexo n xxx 在source/post目录下根据scaffolds/post.md模板创建xxx.md hexo n page xxx 在source目录下根据scaffolds/page.md模板创建xxx文件夹并生成index.md 2 hexo clean 删除根下public目录 3 hexo g 在根下创建public目录并生成静态文件 source目录下的所有文件都会原样复制（除了md文件会转成html）到public目录 4 hexo d 部署到服务端 ERROR Deployer not found: git 需要安装npm install hexo-deployer-git --save 5 hexo s 启动服务 http://localhost:4000 三 配置1 root _config.yml123456789101112131415161718192021222324# Sitetitle: 安₃subtitle: 我未成名君未嫁 可能俱是不如人description: 一蓑烟雨任平生keywords:author: 安₃language: zh-CNtimezone:# Directoryskip_render: README.md# URLurl: https://anyeansan.github.ioroot: /anyeansan.github.io# Extensionstheme: next# Deploymentdeploy: type: git repository: git@github.com:anyeansan/anyeansan.github.io.git branch: master 2 本地搜索local-search npm install hexo-generator-searchdb root _config.yml12345search: path: search.xml field: post content: true format: html _config.yml12local_search: enable: true 3 RSS npm install hexo-generator-feed --save root _config.yml1234feed: type: atom path: atom.xml limit: 20 _config.yml1rss: /atom.xml 4 目录编号 _config.yml12toc: number: true/false 5 文章底部标签和结束语5.1 底部标签 next/layout/_macro/post.swig中搜索rel=&quot;tag去掉标签或修改标签样式1rel=&quot;tag&quot;&gt; &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125; 5.2 结束语 next/layout/_macro添加passage-end-tag.swig，内容如下12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #66ccff;font-size:14px;&quot;&gt;-------------The End&amp;nbsp;&amp;nbsp;&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;客官请自便-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div next/layout/_macro/post.swig在post-body和post-footer之间添加12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 6 中英文 next/languages/zh-CN.yml酌情修改 7 图片7.1 Logo _config.yml1favicon: 7.2 头像 _config.yml1234avatar: url: /images/lbb.png 头像 rounded: true 是否为圆形 rotated: true 是否鼠标放上去旋转 8 页面底部 _config.yml12345678footer: since: 2019 icon: copyright: powered: theme: beian: creative_commons: 9 menu &amp; sidebar _config.yml12menu:sidebar: 四 技巧1 博文不显示全部内容 在合适的位置加上&lt;!--more--&gt;即可 2 创建tags和categories hexo n page tages source/tages/index.md123title: tagsdate: 2019-11-12 12:46:04type: &quot;tags&quot; 文章中使用 tags为多个标签123456tags:-空格one-空格two-空格three-空格...结果为：#one #two #three #... categorys为层级123456categorys:-空格爷-空格父-空格孙-空格...结果为：爷 &gt; 父 &gt; 孙 &gt;... 3 绑定域名3.1 购买域名 namesilo 3.2 设置dns dns默认有四个A A A CNAME，只需要两个即可 1 A + A 类型 HOSTNAME ADDRESS TTL A 空 ip 3600 A www ip 3600 * ip通过ping yourname.github.io获取 2 A + CNAME 类型 HOSTNAME ADDRESS TTL A 空 ip 3600 CNAME www yourname.github.io 3600 * 创建CNAME * 在source目录创建CNAME文件，内容为你的域名 3.3 配置仓库 在yourname.github.io仓库的setting中配置域名 GitHub Pages -&gt; Custom domain 不确定是否必须0.0 4 README.md4.1 原因 hexo g会把source目录下的md文件(包括Readme.md)渲染为html文件并放到public目录下 hexo d会把public目录下所有文件提交到yourname.github.io仓库 由于public目录下并没有README.md而只有Readme.html，所以deploy后yourname.github.io是没有Readme.md的 4.2 解决 source目录下创建README.md root_config.yml skip_render: README.md","categories":[{"name":"技","slug":"技","permalink":"https://anyeansan.github.io/categories/%E6%8A%80/"},{"name":"hexo","slug":"技/hexo","permalink":"https://anyeansan.github.io/categories/%E6%8A%80/hexo/"}],"tags":[]}]}